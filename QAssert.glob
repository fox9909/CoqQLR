DIGEST 2e324f872ffb6fd15cf4b2958d962e73
FQuan.QAssert
R15:19 Coq.Reals.Reals <> <> lib
R37:54 Coquelicot.Complex <> <> lib
R72:85 Coq.Strings.String <> <> lib
R103:112 Coq.Lists.List <> <> lib
R131:148 Coq.Init.Datatypes <> <> lib
R175:183 Coq.Bool.Bool <> <> lib
R210:220 Coq.Arith.Arith <> <> lib
R247:257 Coq.Arith.EqNat <> <> lib
R284:297 Coq.Arith.PeanoNat <> <> lib
R307:309 Coq.Arith.PeanoNat Nat <> mod
R336:338 Coq.micromega.Lia <> <> lib
R367:370 Quan.QIMP <> <> lib
R398:403 Quan.Matrix <> <> lib
R431:437 Quan.Quantum <> <> lib
R465:470 Quan.QState <> <> lib
R488:503 Quan.Basic_Supplement <> <> lib
ind 597:608 <> Pure_formula
constr 618:622 <> PBexp
constr 634:640 <> PUniver
R627:630 Quan.QIMP <> bexp ind
binder 625:625 <> b:3
R644:646 Coq.Init.Datatypes <> nat ind
binder 642:642 <> i:4
R653:664 Quan.QAssert <> Pure_formula:1 ind
binder 650:650 <> P:5
ind 679:682 <> QExp
constr 695:700 <> QExp_s
constr 741:746 <> QExp_t
R707:709 Coq.Init.Datatypes <> nat ind
binder 703:703 <> s:8
binder 705:705 <> e:9
R716:721 Quan.Matrix <> Vector abbrev
R725:726 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R730:730 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R728:728 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R727:727 Quan.QAssert <> e:9 var
R729:729 Quan.QAssert <> s:8 var
binder 713:713 <> v:10
R735:738 Quan.QAssert <> QExp:6 ind
R757:760 Quan.QAssert <> QExp:6 ind
binder 749:751 <> qs1:11
binder 753:755 <> qs2:12
R765:768 Quan.QAssert <> QExp:6 ind
ind 782:794 <> State_formula
constr 805:809 <> SPure
constr 830:834 <> SQuan
constr 847:851 <> SOdot
constr 876:879 <> SAnd
constr 904:907 <> SNot
constr 928:935 <> Assn_sub
R814:825 Quan.QAssert <> Pure_formula ind
binder 812:812 <> P:15
R840:843 Quan.QAssert <> QExp ind
binder 837:838 <> qs:16
R860:872 Quan.QAssert <> State_formula:13 ind
binder 854:855 <> F1:17
binder 857:858 <> F2:18
R888:900 Quan.QAssert <> State_formula:13 ind
binder 882:883 <> F1:19
binder 885:886 <> F2:20
R912:924 Quan.QAssert <> State_formula:13 ind
binder 910:910 <> F:21
R940:942 Coq.Init.Datatypes <> nat ind
binder 938:938 <> i:22
R948:951 Quan.QIMP <> aexp ind
binder 946:946 <> a:23
R957:969 Quan.QAssert <> State_formula:13 ind
binder 955:955 <> F:24
def 1386:1396 <> pro_formula
R1401:1404 Coq.Init.Datatypes <> list ind
R1408:1410 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1407:1407 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
R1411:1423 Quan.QAssert <> State_formula ind
def 1438:1449 <> npro_formula
R1454:1457 Coq.Init.Datatypes <> list ind
R1460:1472 Quan.QAssert <> State_formula ind
ind 1490:1498 <> Assertion
constr 1510:1513 <> APro
constr 1534:1538 <> ANpro
R1520:1530 Quan.QAssert <> pro_formula def
binder 1516:1517 <> pF:27
R1545:1556 Quan.QAssert <> npro_formula def
binder 1541:1542 <> nF:28
def 1572:1592 <> State_formula_to_npro
R1597:1609 Quan.QAssert <> State_formula ind
binder 1595:1595 <> F:29
R1612:1623 Quan.QAssert <> npro_formula def
R1629:1629 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1631:1631 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1630:1630 Quan.QAssert <> F:29 var
R1663:1700 Quan.QAssert <> PBexp constr
R1703:1749 Quan.QAssert <> SPure constr
R1752:1790 Quan.QAssert <> SQuan constr
R1793:1855 Quan.QAssert <> State_formula_to_npro def
R1858:1898 Quan.QAssert <> APro constr
R1901:1943 Quan.QAssert <> ANpro constr
R2322:2328 Quan.QAssert <> PUniver constr
not 2302:2302 <> ::assert_scope:'univer'_x_x
R2461:2466 Quan.QAssert <> QExp_s constr
not 2440:2440 <> ::assert_scope:'|'_x_'>['_x_'-'_x_']'
R2525:2530 Quan.QAssert <> QExp_t constr
not 2511:2511 <> ::assert_scope:x_'⊗*'_x
R2582:2585 Quan.QAssert <> SNot constr
not 2572:2572 <> ::assert_scope:'~'_x
R2631:2634 Quan.QAssert <> SAnd constr
not 2616:2616 <> ::assert_scope:x_'/\'_x
R2686:2690 Quan.QAssert <> SOdot constr
not 2669:2669 <> ::assert_scope:x_'⊙'_x
def 3006:3026 <> sum_over_list_formula
R3033:3043 Quan.QAssert <> pro_formula def
binder 3029:3030 <> pF:30
R3052:3058 Quan.Summation <> big_sum def
R3113:3118 Coq.Init.Datatypes <> length def
R3120:3121 Quan.QAssert <> pF:30 var
binder 3065:3065 <> i:31
R3070:3072 Coq.Init.Datatypes <> fst def
R3075:3077 Coq.Lists.List <> nth def
R3084:3084 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3086:3087 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3108:3108 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3088:3092 Quan.QAssert <> SPure constr
R3095:3099 Quan.QAssert <> PBexp constr
R3101:3106 Quan.QIMP <> BFalse constr
R3081:3082 Quan.QAssert <> pF:30 var
R3079:3079 Quan.QAssert <> i:31 var
def 3137:3156 <> distribution_formula
R3163:3173 Quan.QAssert <> pro_formula def
binder 3159:3160 <> pF:32
R3182:3184 Coq.Init.Logic <> and ind
R3246:3248 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3222:3242 Quan.QAssert <> sum_over_list_formula def
R3244:3245 Quan.QAssert <> pF:32 var
R3187:3192 Coq.Lists.List <> Forall ind
R3216:3217 Quan.QAssert <> pF:32 var
binder 3199:3199 <> x:33
R3205:3208 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R3209:3211 Coq.Init.Datatypes <> fst def
R3213:3213 Quan.QAssert <> x:33 var
prf 3260:3284 <> sum_over_list_nil_formula
R3312:3314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3288:3308 Quan.QAssert <> sum_over_list_formula def
R3310:3311 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3332:3352 Quan.QAssert <> sum_over_list_formula def
prf 3388:3413 <> sum_over_list_cons_formula
binder 3424:3424 <> x:34
binder 3426:3426 <> l:35
R3461:3463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3431:3451 Quan.QAssert <> sum_over_list_formula def
R3455:3458 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3454:3454 Quan.QAssert <> x:34 var
R3459:3459 Quan.QAssert <> l:35 var
R3470:3472 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R3465:3467 Coq.Init.Datatypes <> fst def
R3469:3469 Quan.QAssert <> x:34 var
R3473:3493 Quan.QAssert <> sum_over_list_formula def
R3495:3495 Quan.QAssert <> l:35 var
R3531:3551 Quan.QAssert <> sum_over_list_formula def
R3581:3593 Quan.Summation <> big_sum_shift thm
R3581:3593 Quan.Summation <> big_sum_shift thm
R3581:3593 Quan.Summation <> big_sum_shift thm
R3750:3753 Quan.QIMP <> <> mod
def 3765:3773 <> Free_pure
R3779:3790 Quan.QAssert <> Pure_formula ind
binder 3776:3776 <> P:36
R3795:3798 Quan.QIMP <> CSet def
R3811:3811 Quan.QAssert <> P:36 var
R3826:3830 Quan.QAssert <> PBexp constr
R3836:3844 Quan.QIMP <> Free_bexp def
R3856:3862 Quan.QAssert <> PUniver constr
R3872:3880 Quan.QAssert <> Free_pure:37 def
def 3902:3910 <> Free_Qexp
R3917:3920 Quan.QAssert <> QExp ind
binder 3913:3914 <> qs:39
R3925:3928 Quan.QState <> QSet def
R3941:3942 Quan.QAssert <> qs:39 var
R3955:3960 Quan.QAssert <> QExp_s constr
R3971:3981 Quan.QState <> Qsys_to_Set def
R3993:3998 Quan.QAssert <> QExp_t constr
R4011:4020 Quan.QState NSet union def
R4039:4047 Quan.QAssert <> Free_Qexp:40 def
R4023:4031 Quan.QAssert <> Free_Qexp:40 def
def 4102:4111 <> Free_state
R4117:4129 Quan.QAssert <> State_formula ind
binder 4114:4114 <> F:42
R4139:4141 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4135:4138 Quan.QIMP <> CSet def
R4142:4145 Quan.QState <> QSet def
R4158:4158 Quan.QAssert <> F:42 var
R4171:4175 Quan.QAssert <> SPure constr
R4182:4182 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4194:4196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4207:4207 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4183:4191 Quan.QAssert <> Free_pure def
R4197:4206 Quan.QState NSet empty def
R4214:4218 Quan.QAssert <> SQuan constr
R4225:4225 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4236:4237 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4250:4250 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4226:4235 Quan.QState NSet empty def
R4238:4246 Quan.QAssert <> Free_Qexp def
R4257:4261 Quan.QAssert <> SOdot constr
R4272:4272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4326:4327 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4383:4383 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4273:4282 Quan.QState NSet union def
R4307:4309 Coq.Init.Datatypes <> fst def
R4311:4320 Quan.QAssert <> Free_state:43 def
R4285:4287 Coq.Init.Datatypes <> fst def
R4290:4299 Quan.QAssert <> Free_state:43 def
R4328:4337 Quan.QState NSet union def
R4363:4365 Coq.Init.Datatypes <> snd def
R4368:4377 Quan.QAssert <> Free_state:43 def
R4340:4342 Coq.Init.Datatypes <> snd def
R4345:4354 Quan.QAssert <> Free_state:43 def
R4390:4393 Quan.QAssert <> SAnd constr
R4404:4404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4458:4459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4515:4515 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4405:4414 Quan.QState NSet union def
R4439:4441 Coq.Init.Datatypes <> fst def
R4443:4452 Quan.QAssert <> Free_state:43 def
R4417:4419 Coq.Init.Datatypes <> fst def
R4422:4431 Quan.QAssert <> Free_state:43 def
R4460:4469 Quan.QState NSet union def
R4495:4497 Coq.Init.Datatypes <> snd def
R4500:4509 Quan.QAssert <> Free_state:43 def
R4472:4474 Coq.Init.Datatypes <> snd def
R4477:4486 Quan.QAssert <> Free_state:43 def
R4522:4525 Quan.QAssert <> SNot constr
R4532:4541 Quan.QAssert <> Free_state:43 def
R4552:4559 Quan.QAssert <> Assn_sub constr
R4570:4579 Quan.QAssert <> Free_state:43 def
R4581:4581 Quan.QAssert <> F:42 var
def 4600:4607 <> Free_pro
R4613:4623 Quan.QAssert <> pro_formula def
binder 4609:4610 <> pF:45
R4632:4634 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4628:4631 Quan.QIMP <> CSet def
R4635:4638 Quan.QState <> QSet def
R4652:4653 Quan.QAssert <> pF:45 var
R4663:4664 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R4669:4669 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4680:4681 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4692:4692 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4670:4679 Quan.QState NSet empty def
R4682:4691 Quan.QState NSet empty def
R4702:4703 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4697:4697 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4699:4699 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4701:4701 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4711:4711 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4763:4783 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4837:4837 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4712:4721 Quan.QState NSet union def
R4745:4747 Coq.Init.Datatypes <> fst def
R4749:4756 Quan.QAssert <> Free_pro:46 def
R4724:4726 Coq.Init.Datatypes <> fst def
R4729:4738 Quan.QAssert <> Free_state def
R4784:4793 Quan.QState NSet union def
R4818:4820 Coq.Init.Datatypes <> snd def
R4823:4830 Quan.QAssert <> Free_pro:46 def
R4796:4798 Coq.Init.Datatypes <> snd def
R4801:4810 Quan.QAssert <> Free_state def
def 4856:4864 <> Free_npro
R4870:4881 Quan.QAssert <> npro_formula def
binder 4866:4867 <> nF:48
R4890:4892 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4886:4889 Quan.QIMP <> CSet def
R4893:4896 Quan.QState <> QSet def
R4912:4913 Quan.QAssert <> nF:48 var
R4925:4926 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R4931:4931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4942:4943 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4954:4954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4932:4941 Quan.QState NSet empty def
R4944:4953 Quan.QState NSet empty def
R4962:4963 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4970:4970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5023:5047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5102:5102 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4971:4980 Quan.QState NSet union def
R5004:5006 Coq.Init.Datatypes <> fst def
R5008:5016 Quan.QAssert <> Free_npro:49 def
R4983:4985 Coq.Init.Datatypes <> fst def
R4988:4997 Quan.QAssert <> Free_state def
R5048:5057 Quan.QState NSet union def
R5082:5084 Coq.Init.Datatypes <> snd def
R5087:5095 Quan.QAssert <> Free_npro:49 def
R5060:5062 Coq.Init.Datatypes <> snd def
R5065:5074 Quan.QAssert <> Free_state def
def 5125:5128 <> Free
R5134:5142 Quan.QAssert <> Assertion ind
binder 5131:5131 <> d:51
R5152:5154 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5148:5151 Quan.QIMP <> CSet def
R5155:5158 Quan.QState <> QSet def
R5171:5171 Quan.QAssert <> d:51 var
R5184:5187 Quan.QAssert <> APro constr
R5195:5202 Quan.QAssert <> Free_pro def
R5212:5216 Quan.QAssert <> ANpro constr
R5222:5230 Quan.QAssert <> Free_npro def
def 5453:5461 <> Pure_eval
R5465:5467 Coq.Init.Datatypes <> nat ind
binder 5463:5463 <> n:53
R5474:5485 Quan.QAssert <> Pure_formula ind
binder 5471:5472 <> pf:54
R5492:5496 Quan.QState <> state def
R5498:5498 Quan.QAssert <> n:53 var
binder 5489:5490 <> st:55
R5518:5519 Quan.QAssert <> pf:54 var
R5529:5533 Quan.QAssert <> PBexp constr
R5545:5549 Quan.QIMP <> beval def
R5551:5552 Quan.QAssert <> st:55 var
R5573:5577 Coq.Init.Logic <> False ind
R5563:5566 Coq.Init.Logic <> True ind
R5581:5587 Quan.QAssert <> PUniver constr
binder 5602:5602 <> a:58
R5605:5613 Quan.QAssert <> Pure_eval:56 def
R5618:5632 Quan.QState <> s_update_cstate def
R5638:5639 Quan.QAssert <> st:55 var
R5636:5636 Quan.QAssert <> a:58 var
def 5660:5668 <> QExp_eval
R5672:5674 Coq.Init.Datatypes <> nat ind
binder 5670:5670 <> n:59
R5682:5685 Quan.QAssert <> QExp ind
binder 5678:5679 <> qs:60
R5693:5697 Quan.QState <> state def
R5699:5699 Quan.QAssert <> n:59 var
binder 5689:5690 <> st:61
R5729:5730 Quan.QAssert <> qs:60 var
R5741:5746 Quan.QAssert <> QExp_s constr
R5845:5846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5757:5767 Quan.Basic_Supplement <> PMpar_trace def
R5842:5842 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R5841:5841 Quan.QAssert <> n:59 var
R5772:5776 Quan.Matrix <> scale def
R5780:5781 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5783:5783 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5782:5782 Quan.QAssert <> n:59 var
R5788:5789 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5791:5791 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5790:5790 Quan.QAssert <> n:59 var
R5797:5800 Quan.Complex <> ::C_scope:x_'/'_x not
R5824:5824 Quan.Complex <> ::C_scope:x_'/'_x not
R5795:5796 Quan.Complex <> C1 abbrev
R5802:5806 Quan.Matrix <> trace def
R5810:5811 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5813:5813 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5812:5812 Quan.QAssert <> n:59 var
R5817:5819 Coq.Init.Datatypes <> snd def
R5821:5822 Quan.QAssert <> st:61 var
R5829:5831 Coq.Init.Datatypes <> snd def
R5833:5834 Quan.QAssert <> st:61 var
R5847:5859 Quan.Matrix <> outer_product def
R5869:5874 Quan.QAssert <> QExp_t constr
R5954:5989 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5886:5895 Quan.QState NSet Equal def
R5943:5952 Quan.QState NSet empty def
R5898:5907 Quan.QState NSet inter def
R5926:5934 Quan.QAssert <> Free_Qexp def
R5910:5918 Quan.QAssert <> Free_Qexp def
R6006:6009 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5990:5998 Quan.QAssert <> QExp_eval:62 def
R6004:6005 Quan.QAssert <> st:61 var
R6010:6018 Quan.QAssert <> QExp_eval:62 def
R6024:6025 Quan.QAssert <> st:61 var
def 6063:6072 <> State_eval
R6076:6078 Coq.Init.Datatypes <> nat ind
binder 6074:6074 <> n:64
R6085:6097 Quan.QAssert <> State_formula ind
binder 6082:6083 <> sf:65
R6104:6108 Quan.QState <> state def
R6110:6110 Quan.QAssert <> n:64 var
binder 6101:6102 <> st:66
R6127:6128 Quan.QAssert <> sf:65 var
R6137:6141 Quan.QAssert <> SPure constr
R6148:6156 Quan.QAssert <> Pure_eval def
R6160:6161 Quan.QAssert <> st:66 var
R6164:6168 Quan.QAssert <> SQuan constr
R6174:6182 Quan.QAssert <> QExp_eval def
R6186:6187 Quan.QAssert <> st:66 var
R6190:6194 Quan.QAssert <> SOdot constr
R6285:6288 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6205:6214 Quan.QState NSet Equal def
R6274:6283 Quan.QState NSet empty def
R6217:6226 Quan.QState NSet inter def
R6251:6253 Coq.Init.Datatypes <> snd def
R6256:6265 Quan.QAssert <> Free_state def
R6229:6231 Coq.Init.Datatypes <> snd def
R6234:6243 Quan.QAssert <> Free_state def
R6305:6308 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6289:6298 Quan.QAssert <> State_eval:67 def
R6303:6304 Quan.QAssert <> st:66 var
R6309:6318 Quan.QAssert <> State_eval:67 def
R6323:6324 Quan.QAssert <> st:66 var
R6327:6330 Quan.QAssert <> SAnd constr
R6357:6360 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6341:6350 Quan.QAssert <> State_eval:67 def
R6355:6356 Quan.QAssert <> st:66 var
R6361:6370 Quan.QAssert <> State_eval:67 def
R6375:6376 Quan.QAssert <> st:66 var
R6379:6382 Quan.QAssert <> SNot constr
R6389:6390 Coq.Init.Logic <> ::type_scope:'~'_x not
R6406:6406 Coq.Init.Logic <> ::type_scope:'~'_x not
R6391:6400 Quan.QAssert <> State_eval:67 def
R6404:6405 Quan.QAssert <> st:66 var
R6409:6416 Quan.QAssert <> Assn_sub constr
R6427:6436 Quan.QAssert <> State_eval:67 def
R6442:6456 Quan.QState <> s_update_cstate def
R6473:6474 Quan.QAssert <> st:66 var
R6461:6465 Quan.QIMP <> aeval def
R6467:6468 Quan.QAssert <> st:66 var
def 6492:6508 <> State_eval_dstate
R6513:6515 Coq.Init.Datatypes <> nat ind
binder 6511:6511 <> n:69
R6521:6533 Quan.QAssert <> State_formula ind
binder 6519:6519 <> F:70
R6540:6543 Coq.Init.Datatypes <> list ind
R6552:6554 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6563:6563 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6546:6551 Quan.QState <> cstate def
R6555:6560 Quan.QState <> qstate def
R6562:6562 Quan.QAssert <> n:69 var
binder 6537:6538 <> mu:71
R6583:6584 Quan.QAssert <> mu:71 var
R6594:6596 Coq.Init.Datatypes <> nil constr
R6600:6604 Coq.Init.Logic <> False ind
R6609:6609 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6621:6621 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6610:6610 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6616:6616 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6620:6620 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6611:6615 Coq.Reals.Rsigma <> sigma def
R6625:6634 Quan.QAssert <> State_eval def
R6638:6638 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6644:6645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6649:6649 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6636:6636 Quan.QAssert <> F:70 var
R6665:6666 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6654:6654 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6660:6660 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6664:6664 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6655:6659 Coq.Reals.Rsigma <> sigma def
R6697:6700 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6672:6681 Quan.QAssert <> State_eval def
R6685:6685 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6691:6692 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6696:6696 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6683:6683 Quan.QAssert <> F:70 var
R6701:6717 Quan.QAssert <> State_eval_dstate:72 def
R6719:6719 Quan.QAssert <> F:70 var
ind 6958:6966 <> sat_State
constr 7018:7022 <> sat_F
R6971:6973 Coq.Init.Datatypes <> nat ind
binder 6969:6969 <> n:74
R6976:6976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6985:6989 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6977:6982 Quan.QState <> dstate def
R6990:6990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7004:7007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6991:7003 Quan.QAssert <> State_formula ind
R7036:7041 Quan.QState <> dstate def
R7043:7043 Quan.QAssert <> n:74 var
binder 7033:7034 <> mu:77
binder 7046:7046 <> F:78
R7061:7064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7049:7057 Quan.QState <> WF_dstate def
R7059:7060 Quan.QAssert <> mu:77 var
R7103:7148 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7065:7081 Quan.QAssert <> State_eval_dstate def
R7086:7098 Quan.QState StateMap this proj
R7100:7101 Quan.QAssert <> mu:77 var
R7083:7083 Quan.QAssert <> F:78 var
R7149:7157 Quan.QAssert <> sat_State:75 ind
R7162:7162 Quan.QAssert <> F:78 var
R7159:7160 Quan.QAssert <> mu:77 var
def 8747:8753 <> big_and
R8757:8759 Coq.Init.Datatypes <> nat ind
binder 8755:8755 <> n:79
R8767:8770 Coq.Init.Datatypes <> list ind
R8773:8778 Quan.QState <> dstate def
R8780:8780 Quan.QAssert <> n:79 var
binder 8763:8763 <> f:80
R8788:8791 Coq.Init.Datatypes <> list ind
R8794:8806 Quan.QAssert <> State_formula ind
binder 8785:8785 <> g:81
R8818:8820 Coq.Init.Datatypes <> nat ind
binder 8812:8814 <> n_0:82
R8842:8844 Quan.QAssert <> n_0:82 var
R8860:8863 Coq.Init.Logic <> True ind
R8869:8869 Coq.Init.Datatypes <> S constr
R8886:8886 Quan.QAssert <> g:81 var
R8883:8883 Quan.QAssert <> f:80 var
R8906:8907 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8914:8918 Coq.Init.Logic <> False ind
R8936:8937 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8940:8944 Coq.Init.Logic <> False ind
R8961:8963 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8971:8972 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8978:8978 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8994:8999 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9017:9017 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8979:8987 Quan.QAssert <> sat_State ind
R9000:9006 Quan.QAssert <> big_and:83 def
def 9046:9055 <> big_pOplus
R9065:9068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9062:9064 Coq.Init.Datatypes <> nat ind
R9069:9069 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 9058:9058 <> f:87
R9080:9083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9077:9079 Coq.Init.Datatypes <> nat ind
R9084:9096 Quan.QAssert <> State_formula ind
binder 9073:9073 <> g:88
R9106:9108 Coq.Init.Datatypes <> nat ind
binder 9100:9102 <> n_0:89
R9113:9123 Quan.QAssert <> pro_formula def
R9136:9138 Quan.QAssert <> n_0:89 var
R9152:9153 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9157:9157 Coq.Init.Datatypes <> S constr
R9176:9178 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9196:9196 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9164:9164 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9169:9170 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9175:9175 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9165:9165 Quan.QAssert <> f:87 var
R9171:9171 Quan.QAssert <> g:88 var
R9179:9188 Quan.QAssert <> big_pOplus:90 def
R9192:9192 Quan.QAssert <> g:88 var
R9190:9190 Quan.QAssert <> f:87 var
def 9218:9226 <> big_Oplus
R9237:9240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9234:9236 Coq.Init.Datatypes <> nat ind
R9241:9253 Quan.QAssert <> State_formula ind
binder 9230:9230 <> g:92
R9263:9265 Coq.Init.Datatypes <> nat ind
binder 9257:9259 <> n_0:93
R9270:9281 Quan.QAssert <> npro_formula def
R9294:9296 Quan.QAssert <> n_0:93 var
R9310:9311 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9315:9315 Coq.Init.Datatypes <> S constr
R9322:9322 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9327:9330 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9345:9345 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9323:9323 Quan.QAssert <> g:92 var
R9331:9339 Quan.QAssert <> big_Oplus:94 def
R9341:9341 Quan.QAssert <> g:92 var
def 9580:9587 <> big_dapp
R9591:9593 Coq.Init.Datatypes <> nat ind
binder 9589:9589 <> n:96
R9599:9602 Coq.Init.Datatypes <> list ind
R9604:9604 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 9597:9597 <> g:97
R9610:9613 Coq.Init.Datatypes <> list ind
R9616:9621 Quan.QState <> dstate def
R9623:9623 Quan.QAssert <> n:96 var
binder 9608:9608 <> f:98
R9635:9637 Coq.Init.Datatypes <> nat ind
binder 9629:9631 <> n_0:99
R9642:9647 Quan.QState <> dstate def
R9649:9649 Quan.QAssert <> n:96 var
R9663:9665 Quan.QAssert <> n_0:99 var
R9681:9687 Quan.QState <> d_empty def
R9689:9689 Quan.QAssert <> n:96 var
R9695:9695 Coq.Init.Datatypes <> S constr
R9712:9712 Quan.QAssert <> f:98 var
R9709:9709 Quan.QAssert <> g:97 var
R9732:9733 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9741:9747 Quan.QState <> d_empty def
R9749:9749 Quan.QAssert <> n:96 var
R9767:9768 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9773:9779 Quan.QState <> d_empty def
R9781:9781 Quan.QAssert <> n:96 var
R9799:9800 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9807:9809 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9815:9819 Quan.QState <> d_app def
R9839:9846 Quan.QAssert <> big_dapp:100 def
R9822:9829 Quan.QState <> d_scalar def
def 9891:9909 <> npro_to_pro_formula
R9915:9926 Quan.QAssert <> npro_formula def
binder 9912:9913 <> nF:104
R9936:9939 Coq.Init.Datatypes <> list ind
R9941:9941 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 9931:9933 <> p_n:105
R9945:9955 Quan.QAssert <> pro_formula def
R9971:9973 Quan.QAssert <> p_n:105 var
R9967:9968 Quan.QAssert <> nF:104 var
R9984:9985 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9993:9994 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10002:10003 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10008:10009 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10015:10018 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10025:10026 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10039:10042 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10069:10069 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10033:10033 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10035:10036 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10038:10038 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10043:10061 Quan.QAssert <> npro_to_pro_formula:106 def
def 10090:10104 <> get_pro_formula
R10110:10120 Quan.QAssert <> pro_formula def
binder 10107:10108 <> pF:109
R10124:10127 Coq.Init.Datatypes <> list ind
R10129:10129 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
R10143:10144 Quan.QAssert <> pF:109 var
R10157:10158 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10163:10164 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10177:10178 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10171:10171 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10173:10174 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10176:10176 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10187:10190 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10210:10210 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10191:10205 Quan.QAssert <> get_pro_formula:110 def
prf 10235:10244 <> d_scalar_0
R10263:10265 Coq.Init.Datatypes <> nat ind
binder 10259:10259 <> n:112
R10274:10279 Quan.QState <> dstate def
R10281:10281 Quan.QAssert <> n:112 var
binder 10269:10270 <> mu:113
R10285:10293 Quan.QState <> dstate_eq def
R10312:10318 Quan.QState <> d_empty def
R10320:10320 Quan.QAssert <> n:112 var
R10296:10303 Quan.QState <> d_scalar def
R10307:10308 Quan.QAssert <> mu:113 var
R10350:10357 Quan.QState <> d_scalar def
R10367:10375 Quan.QState <> dstate_eq def
prf 10419:10432 <> d_scalar_empty
R10451:10453 Coq.Init.Datatypes <> nat ind
binder 10447:10447 <> n:114
binder 10457:10457 <> p:115
R10460:10468 Quan.QState <> dstate_eq def
R10496:10502 Quan.QState <> d_empty def
R10504:10504 Quan.QAssert <> n:114 var
R10471:10478 Quan.QState <> d_scalar def
R10483:10489 Quan.QState <> d_empty def
R10491:10491 Quan.QAssert <> n:114 var
R10480:10480 Quan.QAssert <> p:115 var
R10534:10541 Quan.QState <> d_scalar def
R10551:10559 Quan.QState <> dstate_eq def
prf 10622:10636 <> dstate_eq_trans
binder 10646:10646 <> n:116
R10661:10666 Quan.QState <> dstate def
R10668:10668 Quan.QAssert <> n:116 var
binder 10649:10650 <> mu:117
binder 10652:10654 <> mu1:118
binder 10656:10658 <> mu2:119
R10690:10693 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10674:10682 Quan.QState <> dstate_eq def
R10687:10689 Quan.QAssert <> mu1:118 var
R10684:10685 Quan.QAssert <> mu:117 var
R10711:10716 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10694:10702 Quan.QState <> dstate_eq def
R10708:10710 Quan.QAssert <> mu2:119 var
R10704:10706 Quan.QAssert <> mu1:118 var
R10717:10725 Quan.QState <> dstate_eq def
R10730:10732 Quan.QAssert <> mu2:119 var
R10727:10728 Quan.QAssert <> mu:117 var
R10800:10808 Quan.QState <> dstate_eq def
prf 10874:10885 <> big_dapp_nil
R10889:10891 Coq.Init.Datatypes <> nat ind
binder 10887:10887 <> n:120
binder 10902:10904 <> n_0:121
binder 10906:10906 <> g:122
R10911:10914 Coq.Init.Datatypes <> list ind
R10917:10922 Quan.QState <> dstate def
R10924:10924 Quan.QAssert <> n:120 var
binder 10909:10909 <> f:123
R10943:10950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10937:10938 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10934:10934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10933:10933 Quan.QAssert <> g:122 var
R10935:10936 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10940:10940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10939:10939 Quan.QAssert <> f:123 var
R10941:10942 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10951:10959 Quan.QState <> dstate_eq def
R10981:10987 Quan.QState <> d_empty def
R10989:10989 Quan.QAssert <> n:120 var
R10962:10969 Quan.QAssert <> big_dapp def
R10975:10977 Quan.QAssert <> n_0:121 var
R10973:10973 Quan.QAssert <> f:123 var
R10971:10971 Quan.QAssert <> g:122 var
R11081:11089 Quan.QState <> dstate_eq def
R11130:11138 Quan.QState <> dstate_eq def
R11192:11200 Quan.QState <> dstate_eq def
R11266:11274 Quan.QState <> dstate_eq def
R11315:11323 Quan.QState <> dstate_eq def
R11388:11396 Quan.QState <> dstate_eq def
R11437:11445 Quan.QState <> dstate_eq def
def 11488:11506 <> pro_to_npro_formula
R11512:11522 Quan.QAssert <> pro_formula def
binder 11509:11510 <> pF:124
R11527:11538 Quan.QAssert <> npro_formula def
R11550:11551 Quan.QAssert <> pF:124 var
R11562:11563 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R11568:11569 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R11580:11583 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11574:11574 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11576:11577 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11579:11579 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11591:11594 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11618:11618 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11595:11613 Quan.QAssert <> pro_to_npro_formula:125 def
ind 11639:11645 <> sat_Pro
constr 11693:11699 <> sat_pro
R11650:11652 Coq.Init.Datatypes <> nat ind
binder 11648:11648 <> n:127
R11656:11656 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11665:11668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11657:11662 Quan.QState <> dstate def
R11669:11669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11681:11684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11670:11680 Quan.QAssert <> pro_formula def
R11713:11718 Quan.QState <> dstate def
R11720:11720 Quan.QAssert <> n:127 var
binder 11710:11711 <> mu:130
binder 11723:11724 <> pF:131
R11733:11736 Coq.Init.Datatypes <> list ind
R11739:11744 Quan.QState <> dstate def
R11746:11746 Quan.QAssert <> n:127 var
binder 11727:11730 <> mu_n:132
R11775:11777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11763:11765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11752:11757 Coq.Init.Datatypes <> length def
R11759:11762 Quan.QAssert <> mu_n:132 var
R11766:11771 Coq.Init.Datatypes <> length def
R11773:11774 Quan.QAssert <> pF:131 var
R11839:11842 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11778:11786 Quan.QState <> dstate_eq def
R11792:11799 Quan.QAssert <> big_dapp def
R11828:11833 Coq.Init.Datatypes <> length def
R11835:11836 Quan.QAssert <> pF:131 var
R11822:11825 Quan.QAssert <> mu_n:132 var
R11802:11816 Quan.QAssert <> get_pro_formula def
R11818:11819 Quan.QAssert <> pF:131 var
R11788:11789 Quan.QAssert <> mu:130 var
R11843:11843 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11893:11898 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11844:11850 Quan.QAssert <> big_and def
R11883:11888 Coq.Init.Datatypes <> length def
R11890:11891 Quan.QAssert <> pF:131 var
R11858:11876 Quan.QAssert <> pro_to_npro_formula def
R11878:11879 Quan.QAssert <> pF:131 var
R11852:11855 Quan.QAssert <> mu_n:132 var
binder 11906:11906 <> i:133
R11956:11962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11919:11921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11909:11915 Quan.QState <> d_trace def
R11917:11918 Quan.QAssert <> mu:130 var
R11922:11928 Quan.QState <> d_trace def
R11932:11934 Coq.Lists.List <> nth def
R11944:11950 Quan.QState <> d_empty def
R11952:11952 Quan.QAssert <> n:127 var
R11938:11941 Quan.QAssert <> mu_n:132 var
R11936:11936 Quan.QAssert <> i:133 var
R11963:11969 Quan.QAssert <> sat_Pro:128 ind
R11974:11975 Quan.QAssert <> pF:131 var
R11971:11972 Quan.QAssert <> mu:130 var
def 11988:11996 <> swap_list
binder 11999:11999 <> A:134
R12010:12013 Coq.Init.Datatypes <> list ind
R12015:12015 Quan.QAssert <> A:134 var
binder 12008:12008 <> l:135
R12021:12023 Coq.Init.Datatypes <> nat ind
binder 12019:12019 <> i:136
R12037:12037 Quan.QAssert <> i:136 var
R12034:12034 Quan.QAssert <> l:135 var
R12046:12047 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R12054:12055 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R12059:12060 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12061:12062 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R12071:12072 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12073:12074 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R12078:12080 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12083:12084 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12085:12085 Coq.Arith.PeanoNat Nat t def
R12094:12096 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12098:12101 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12107:12109 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12112:12113 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12114:12114 Coq.Arith.PeanoNat Nat t def
R12117:12117 Coq.Init.Datatypes <> S constr
R12126:12129 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12150:12150 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12130:12138 Quan.QAssert <> swap_list:137 def
R12143:12144 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
prf 12165:12177 <> dstate_eq_sym
R12181:12183 Coq.Init.Datatypes <> nat ind
binder 12179:12179 <> n:140
R12203:12208 Quan.QState <> dstate def
R12210:12210 Quan.QAssert <> n:140 var
binder 12194:12196 <> mu1:141
binder 12198:12200 <> mu2:142
R12231:12233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12214:12222 Quan.QState <> dstate_eq def
R12228:12230 Quan.QAssert <> mu2:142 var
R12224:12226 Quan.QAssert <> mu1:141 var
R12234:12242 Quan.QState <> dstate_eq def
R12248:12250 Quan.QAssert <> mu1:141 var
R12244:12246 Quan.QAssert <> mu2:142 var
R12301:12309 Quan.QState <> dstate_eq def
prf 12344:12353 <> big_dapp_0
R12357:12359 Coq.Init.Datatypes <> nat ind
binder 12355:12355 <> n:143
R12375:12377 Coq.Init.Datatypes <> nat ind
binder 12371:12373 <> n_0:144
binder 12380:12380 <> g:145
R12385:12388 Coq.Init.Datatypes <> list ind
R12391:12396 Quan.QState <> dstate def
R12398:12398 Quan.QAssert <> n:143 var
binder 12383:12383 <> f:146
R12414:12417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12407:12407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12404:12406 Quan.QAssert <> n_0:144 var
R12434:12435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12418:12425 Quan.QAssert <> big_dapp def
R12431:12433 Quan.QAssert <> n_0:144 var
R12429:12429 Quan.QAssert <> f:146 var
R12427:12427 Quan.QAssert <> g:145 var
R12436:12442 Quan.QState <> d_empty def
R12444:12444 Quan.QAssert <> n:143 var
prf 12563:12567 <> ssoc'
R12583:12585 Coq.Init.Datatypes <> nat ind
binder 12579:12579 <> n:147
R12603:12608 Quan.QState <> dstate def
R12610:12610 Quan.QAssert <> n:147 var
binder 12589:12591 <> mu1:148
binder 12593:12595 <> mu2:149
binder 12597:12599 <> mu3:150
R12614:12622 Quan.QState <> dstate_eq def
R12653:12657 Quan.QState <> d_app def
R12664:12668 Quan.QState <> d_app def
R12674:12676 Quan.QAssert <> mu3:150 var
R12670:12672 Quan.QAssert <> mu2:149 var
R12659:12661 Quan.QAssert <> mu1:148 var
R12625:12629 Quan.QState <> d_app def
R12647:12649 Quan.QAssert <> mu3:150 var
R12632:12636 Quan.QState <> d_app def
R12642:12644 Quan.QAssert <> mu2:149 var
R12638:12640 Quan.QAssert <> mu1:148 var
prf 12705:12712 <> swap_app
R12716:12718 Coq.Init.Datatypes <> nat ind
binder 12714:12714 <> n:151
R12732:12735 Coq.Init.Datatypes <> list ind
R12737:12737 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 12730:12730 <> g:152
R12745:12748 Coq.Init.Datatypes <> list ind
R12751:12756 Quan.QState <> dstate def
R12758:12758 Quan.QAssert <> n:151 var
binder 12742:12742 <> f:153
R12770:12772 Coq.Init.Datatypes <> nat ind
binder 12764:12766 <> n_0:154
binder 12768:12768 <> i:155
R12794:12795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12784:12785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12776:12781 Coq.Init.Datatypes <> length def
R12783:12783 Quan.QAssert <> g:152 var
R12786:12791 Coq.Init.Datatypes <> length def
R12793:12793 Quan.QAssert <> f:153 var
R12808:12811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12799:12799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12796:12798 Quan.QAssert <> n_0:154 var
R12800:12805 Coq.Init.Datatypes <> length def
R12807:12807 Quan.QAssert <> g:152 var
R12812:12820 Quan.QState <> dstate_eq def
R12842:12849 Quan.QAssert <> big_dapp def
R12883:12885 Quan.QAssert <> n_0:154 var
R12868:12876 Quan.QAssert <> swap_list def
R12880:12880 Quan.QAssert <> i:155 var
R12878:12878 Quan.QAssert <> f:153 var
R12852:12860 Quan.QAssert <> swap_list def
R12864:12864 Quan.QAssert <> i:155 var
R12862:12862 Quan.QAssert <> g:152 var
R12823:12830 Quan.QAssert <> big_dapp def
R12836:12838 Quan.QAssert <> n_0:154 var
R12834:12834 Quan.QAssert <> f:153 var
R12832:12832 Quan.QAssert <> g:152 var
R12954:12960 Quan.QState <> d_empty def
R12932:12946 Quan.QAssert <> dstate_eq_trans thm
R12954:12960 Quan.QState <> d_empty def
R12932:12946 Quan.QAssert <> dstate_eq_trans thm
R12979:12990 Quan.QAssert <> big_dapp_nil thm
R12979:12990 Quan.QAssert <> big_dapp_nil thm
R13049:13055 Quan.QState <> d_empty def
R13025:13039 Quan.QAssert <> dstate_eq_trans thm
R13049:13055 Quan.QState <> d_empty def
R13025:13039 Quan.QAssert <> dstate_eq_trans thm
R13076:13084 Quan.QState <> dstate_eq def
R13113:13125 Quan.QAssert <> dstate_eq_sym thm
R13113:13125 Quan.QAssert <> dstate_eq_sym thm
R13134:13145 Quan.QAssert <> big_dapp_nil thm
R13134:13145 Quan.QAssert <> big_dapp_nil thm
R13271:13277 Quan.QState <> d_empty def
R13249:13263 Quan.QAssert <> dstate_eq_trans thm
R13271:13277 Quan.QState <> d_empty def
R13249:13263 Quan.QAssert <> dstate_eq_trans thm
R13296:13307 Quan.QAssert <> big_dapp_nil thm
R13296:13307 Quan.QAssert <> big_dapp_nil thm
R13367:13373 Quan.QState <> d_empty def
R13343:13357 Quan.QAssert <> dstate_eq_trans thm
R13367:13373 Quan.QState <> d_empty def
R13343:13357 Quan.QAssert <> dstate_eq_trans thm
R13394:13402 Quan.QState <> dstate_eq def
R13431:13443 Quan.QAssert <> dstate_eq_sym thm
R13431:13443 Quan.QAssert <> dstate_eq_sym thm
R13452:13463 Quan.QAssert <> big_dapp_nil thm
R13452:13463 Quan.QAssert <> big_dapp_nil thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13586:13595 Quan.QAssert <> big_dapp_0 thm
R13701:13709 Quan.QState <> dstate_eq def
R13928:13932 Quan.QState <> d_app def
R13975:13982 Quan.QAssert <> big_dapp def
R13935:13939 Quan.QState <> d_app def
R13959:13966 Quan.QState <> d_scalar def
R13942:13949 Quan.QState <> d_scalar def
R13896:13910 Quan.QAssert <> dstate_eq_trans thm
R13928:13932 Quan.QState <> d_app def
R13975:13982 Quan.QAssert <> big_dapp def
R13935:13939 Quan.QState <> d_app def
R13959:13966 Quan.QState <> d_scalar def
R13942:13949 Quan.QState <> d_scalar def
R13896:13910 Quan.QAssert <> dstate_eq_trans thm
R14010:14022 Quan.QAssert <> dstate_eq_sym thm
R14010:14022 Quan.QAssert <> dstate_eq_sym thm
R14048:14052 Quan.QAssert <> ssoc' prfax
R14048:14052 Quan.QAssert <> ssoc' prfax
R14103:14107 Quan.QState <> d_app def
R14150:14157 Quan.QAssert <> big_dapp def
R14110:14114 Quan.QState <> d_app def
R14133:14140 Quan.QState <> d_scalar def
R14118:14125 Quan.QState <> d_scalar def
R14071:14085 Quan.QAssert <> dstate_eq_trans thm
R14103:14107 Quan.QState <> d_app def
R14150:14157 Quan.QAssert <> big_dapp def
R14110:14114 Quan.QState <> d_app def
R14133:14140 Quan.QState <> d_scalar def
R14118:14125 Quan.QState <> d_scalar def
R14071:14085 Quan.QAssert <> dstate_eq_trans thm
R14185:14192 Quan.QState <> d_app_eq thm
R14185:14192 Quan.QState <> d_app_eq thm
R14201:14210 Quan.QState <> d_app_comm thm
R14201:14210 Quan.QState <> d_app_comm thm
R14228:14236 Quan.QState <> dstate_eq def
R14275:14279 Quan.QAssert <> ssoc' prfax
R14275:14279 Quan.QAssert <> ssoc' prfax
R14374:14382 Quan.QState <> dstate_eq def
R14412:14420 Quan.QState <> dstate_eq def
R14523:14527 Quan.QState <> d_app def
R14545:14552 Quan.QAssert <> big_dapp def
R14578:14586 Quan.QAssert <> swap_list def
R14590:14591 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14555:14563 Quan.QAssert <> swap_list def
R14567:14570 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14530:14537 Quan.QState <> d_scalar def
R14491:14505 Quan.QAssert <> dstate_eq_trans thm
R14523:14527 Quan.QState <> d_app def
R14545:14552 Quan.QAssert <> big_dapp def
R14578:14586 Quan.QAssert <> swap_list def
R14590:14591 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14555:14563 Quan.QAssert <> swap_list def
R14567:14570 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14530:14537 Quan.QState <> d_scalar def
R14491:14505 Quan.QAssert <> dstate_eq_trans thm
R14628:14635 Quan.QState <> d_app_eq thm
R14628:14635 Quan.QState <> d_app_eq thm
R14646:14654 Quan.QState <> dstate_eq def
R14766:14774 Quan.QState <> dstate_eq def
prf 14825:14832 <> swap_and
R14836:14838 Coq.Init.Datatypes <> nat ind
binder 14834:14834 <> n:156
R14855:14858 Coq.Init.Datatypes <> list ind
R14861:14873 Quan.QAssert <> State_formula ind
binder 14853:14853 <> g:157
R14881:14884 Coq.Init.Datatypes <> list ind
R14887:14892 Quan.QState <> dstate def
R14894:14894 Quan.QAssert <> n:156 var
binder 14878:14878 <> f:158
R14906:14908 Coq.Init.Datatypes <> nat ind
binder 14900:14902 <> n_0:159
binder 14904:14904 <> i:160
R14930:14931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14920:14921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14912:14917 Coq.Init.Datatypes <> length def
R14919:14919 Quan.QAssert <> g:157 var
R14922:14927 Coq.Init.Datatypes <> length def
R14929:14929 Quan.QAssert <> f:158 var
R14944:14948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14935:14935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14932:14934 Quan.QAssert <> n_0:159 var
R14936:14941 Coq.Init.Datatypes <> length def
R14943:14943 Quan.QAssert <> g:157 var
R14949:14949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14967:14971 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15016:15016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14950:14956 Quan.QAssert <> big_and def
R14964:14966 Quan.QAssert <> n_0:159 var
R14962:14962 Quan.QAssert <> g:157 var
R14959:14959 Quan.QAssert <> f:158 var
R14972:14978 Quan.QAssert <> big_and def
R15013:15015 Quan.QAssert <> n_0:159 var
R14998:15006 Quan.QAssert <> swap_list def
R15010:15010 Quan.QAssert <> i:160 var
R15008:15008 Quan.QAssert <> g:157 var
R14982:14990 Quan.QAssert <> swap_list def
R14994:14994 Quan.QAssert <> i:160 var
R14992:14992 Quan.QAssert <> f:158 var
prf 15705:15715 <> swap_length
binder 15726:15726 <> A:161
R15738:15741 Coq.Init.Datatypes <> list ind
R15743:15743 Quan.QAssert <> A:161 var
binder 15735:15736 <> pF:162
binder 15746:15746 <> i:163
R15772:15773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15749:15754 Coq.Init.Datatypes <> length def
R15757:15765 Quan.QAssert <> swap_list def
R15770:15770 Quan.QAssert <> i:163 var
R15767:15768 Quan.QAssert <> pF:162 var
R15774:15779 Coq.Init.Datatypes <> length def
R15781:15782 Quan.QAssert <> pF:162 var
ind 16053:16062 <> sat_Assert
constr 16108:16115 <> sat_APro
constr 16266:16274 <> sat_ANpro
R16067:16069 Coq.Init.Datatypes <> nat ind
binder 16065:16065 <> n:164
R16073:16073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16082:16085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16074:16079 Quan.QState <> dstate def
R16086:16086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16096:16099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16087:16095 Quan.QAssert <> Assertion ind
R16129:16134 Quan.QState <> dstate def
R16136:16136 Quan.QAssert <> n:164 var
binder 16126:16127 <> mu:167
binder 16139:16140 <> pF:168
R16174:16177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16162:16170 Quan.QState <> WF_dstate def
R16172:16173 Quan.QAssert <> mu:167 var
R16201:16204 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16178:16197 Quan.QAssert <> distribution_formula def
R16199:16200 Quan.QAssert <> pF:168 var
R16219:16240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16205:16211 Quan.QAssert <> sat_Pro ind
R16217:16218 Quan.QAssert <> pF:168 var
R16213:16214 Quan.QAssert <> mu:167 var
R16241:16250 Quan.QAssert <> sat_Assert:165 ind
R16256:16259 Quan.QAssert <> APro constr
R16261:16262 Quan.QAssert <> pF:168 var
R16252:16253 Quan.QAssert <> mu:167 var
R16288:16293 Quan.QState <> dstate def
R16295:16295 Quan.QAssert <> n:164 var
binder 16285:16286 <> mu:169
binder 16298:16299 <> nF:170
R16306:16309 Coq.Init.Datatypes <> list ind
R16311:16311 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 16302:16304 <> p_n:171
R16336:16336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16345:16349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16339:16342 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16337:16338 Quan.QAssert <> nF:170 var
R16343:16344 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R16392:16414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16350:16359 Quan.QAssert <> sat_Assert:165 ind
R16365:16383 Quan.QAssert <> npro_to_pro_formula def
R16385:16386 Quan.QAssert <> nF:170 var
R16388:16390 Quan.QAssert <> p_n:171 var
R16361:16362 Quan.QAssert <> mu:169 var
R16415:16424 Quan.QAssert <> sat_Assert:165 ind
R16430:16434 Quan.QAssert <> ANpro constr
R16436:16437 Quan.QAssert <> nF:170 var
R16426:16427 Quan.QAssert <> mu:169 var
def 16479:16492 <> assert_implies
R16501:16509 Quan.QAssert <> Assertion ind
binder 16495:16495 <> P:172
binder 16497:16497 <> Q:173
R16536:16538 Coq.Init.Datatypes <> nat ind
binder 16534:16534 <> n:174
R16545:16550 Quan.QState <> dstate def
R16552:16552 Quan.QAssert <> n:174 var
binder 16542:16543 <> mu:175
R16572:16575 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16556:16565 Quan.QAssert <> sat_Assert ind
R16571:16571 Quan.QAssert <> P:172 var
R16568:16569 Quan.QAssert <> mu:175 var
R16576:16585 Quan.QAssert <> sat_Assert ind
R16591:16591 Quan.QAssert <> Q:173 var
R16588:16589 Quan.QAssert <> mu:175 var
prf 16602:16613 <> swap_get_pro
binder 16624:16626 <> pF1:176
binder 16628:16628 <> i:177
R16631:16631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16665:16667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16632:16646 Quan.QAssert <> get_pro_formula def
R16649:16657 Quan.QAssert <> swap_list def
R16663:16663 Quan.QAssert <> i:177 var
R16659:16661 Quan.QAssert <> pF1:176 var
R16668:16676 Quan.QAssert <> swap_list def
R16700:16700 Quan.QAssert <> i:177 var
R16679:16693 Quan.QAssert <> get_pro_formula def
R16695:16697 Quan.QAssert <> pF1:176 var
prf 17039:17054 <> swap_pro_to_npro
binder 17065:17067 <> pF1:178
binder 17069:17069 <> i:179
R17072:17072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17110:17112 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17073:17091 Quan.QAssert <> pro_to_npro_formula def
R17094:17102 Quan.QAssert <> swap_list def
R17108:17108 Quan.QAssert <> i:179 var
R17104:17106 Quan.QAssert <> pF1:178 var
R17113:17121 Quan.QAssert <> swap_list def
R17149:17149 Quan.QAssert <> i:179 var
R17124:17142 Quan.QAssert <> pro_to_npro_formula def
R17144:17146 Quan.QAssert <> pF1:178 var
prf 17485:17506 <> get_pro_formula_length
binder 17516:17517 <> pF:180
R17548:17550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17521:17526 Coq.Init.Datatypes <> length def
R17529:17543 Quan.QAssert <> get_pro_formula def
R17545:17546 Quan.QAssert <> pF:180 var
R17551:17556 Coq.Init.Datatypes <> length def
R17558:17559 Quan.QAssert <> pF:180 var
prf 17665:17690 <> pro_to_npro_formula_length
binder 17700:17701 <> pF:181
R17737:17739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17705:17710 Coq.Init.Datatypes <> length def
R17713:17731 Quan.QAssert <> pro_to_npro_formula def
R17734:17735 Quan.QAssert <> pF:181 var
R17740:17745 Coq.Init.Datatypes <> length def
R17747:17748 Quan.QAssert <> pF:181 var
prf 17854:17879 <> npro_to_pro_formula_length
binder 17889:17890 <> pF:182
binder 17892:17894 <> p_n:183
R17919:17921 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17907:17908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17898:17903 Coq.Init.Datatypes <> length def
R17905:17906 Quan.QAssert <> pF:182 var
R17909:17914 Coq.Init.Datatypes <> length def
R17916:17918 Quan.QAssert <> p_n:183 var
R17958:17960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17922:17927 Coq.Init.Datatypes <> length def
R17930:17948 Quan.QAssert <> npro_to_pro_formula def
R17951:17952 Quan.QAssert <> pF:182 var
R17954:17956 Quan.QAssert <> p_n:183 var
R17961:17966 Coq.Init.Datatypes <> length def
R17968:17969 Quan.QAssert <> pF:182 var
R18155:18168 Quan.QAssert <> assert_implies def
not 18141:18141 <> ::assert_scope:x_'->>'_x
R18269:18269 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R18277:18282 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R18290:18290 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R18271:18275 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R18284:18288 Quan.QAssert <> ::assert_scope:x_'->>'_x not
not 18249:18249 <> ::assert_scope:x_'<<->>'_x
prf 18331:18342 <> rule_POplusC
binder 18352:18354 <> pF1:184
binder 18356:18356 <> i:185
R18371:18375 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R18359:18362 Quan.QAssert <> APro constr
R18366:18368 Quan.QAssert <> pF1:184 var
R18376:18379 Quan.QAssert <> APro constr
R18382:18390 Quan.QAssert <> swap_list def
R18396:18396 Quan.QAssert <> i:185 var
R18392:18394 Quan.QAssert <> pF1:184 var
R18424:18437 Quan.QAssert <> assert_implies def
R18568:18569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18543:18548 Coq.Init.Datatypes <> length def
R18551:18559 Quan.QAssert <> swap_list def
R18570:18575 Coq.Init.Datatypes <> length def
R18578:18586 Quan.QAssert <> swap_list def
R18568:18569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18543:18548 Coq.Init.Datatypes <> length def
R18551:18559 Quan.QAssert <> swap_list def
R18570:18575 Coq.Init.Datatypes <> length def
R18578:18586 Quan.QAssert <> swap_list def
R18612:18622 Quan.QAssert <> swap_length thm
R18612:18622 Quan.QAssert <> swap_length thm
R18612:18622 Quan.QAssert <> swap_length thm
R18612:18622 Quan.QAssert <> swap_length thm
R18612:18622 Quan.QAssert <> swap_length thm
R18612:18622 Quan.QAssert <> swap_length thm
R18656:18667 Quan.QAssert <> swap_get_pro thm
R18656:18667 Quan.QAssert <> swap_get_pro thm
R18656:18667 Quan.QAssert <> swap_get_pro thm
R18678:18688 Quan.QAssert <> swap_length thm
R18678:18688 Quan.QAssert <> swap_length thm
R18678:18688 Quan.QAssert <> swap_length thm
R18699:18713 Quan.QAssert <> dstate_eq_trans thm
R18699:18713 Quan.QAssert <> dstate_eq_trans thm
R18735:18742 Quan.QAssert <> swap_app thm
R18735:18742 Quan.QAssert <> swap_app thm
R18769:18790 Quan.QAssert <> get_pro_formula_length thm
R18769:18790 Quan.QAssert <> get_pro_formula_length thm
R18810:18831 Quan.QAssert <> get_pro_formula_length thm
R18810:18831 Quan.QAssert <> get_pro_formula_length thm
R18843:18858 Quan.QAssert <> swap_pro_to_npro thm
R18843:18858 Quan.QAssert <> swap_pro_to_npro thm
R18843:18858 Quan.QAssert <> swap_pro_to_npro thm
R18870:18880 Quan.QAssert <> swap_length thm
R18870:18880 Quan.QAssert <> swap_length thm
R18870:18880 Quan.QAssert <> swap_length thm
R18890:18897 Quan.QAssert <> swap_and thm
R18890:18897 Quan.QAssert <> swap_and thm
R18909:18934 Quan.QAssert <> pro_to_npro_formula_length thm
R18909:18934 Quan.QAssert <> pro_to_npro_formula_length thm
R18909:18934 Quan.QAssert <> pro_to_npro_formula_length thm
R18957:18982 Quan.QAssert <> pro_to_npro_formula_length thm
R18957:18982 Quan.QAssert <> pro_to_npro_formula_length thm
R18957:18982 Quan.QAssert <> pro_to_npro_formula_length thm
def 19048:19058 <> big_impiles
R19064:19075 Quan.QAssert <> npro_formula def
binder 19061:19061 <> g:186
R19082:19093 Quan.QAssert <> npro_formula def
binder 19080:19080 <> f:187
R19127:19127 Quan.QAssert <> f:187 var
R19124:19124 Quan.QAssert <> g:186 var
R19147:19148 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R19156:19160 Coq.Init.Logic <> False ind
R19178:19179 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R19183:19187 Coq.Init.Logic <> False ind
R19204:19205 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19212:19214 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19222:19224 Coq.Init.Logic <> and ind
R19240:19250 Quan.QAssert <> big_impiles:188 def
R19229:19233 Quan.QAssert <> ::assert_scope:x_'->>'_x not
prf 19284:19301 <> big_impiles_length
binder 19310:19312 <> nF1:191
binder 19314:19316 <> nF2:192
R19338:19341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19319:19329 Quan.QAssert <> big_impiles def
R19331:19333 Quan.QAssert <> nF1:191 var
R19335:19337 Quan.QAssert <> nF2:192 var
R19352:19353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19342:19347 Coq.Init.Datatypes <> length def
R19349:19351 Quan.QAssert <> nF1:191 var
R19354:19359 Coq.Init.Datatypes <> length def
R19361:19363 Quan.QAssert <> nF2:192 var
prf 19567:19584 <> get_pro_formula_eq
binder 19594:19596 <> nF1:193
binder 19598:19600 <> nF2:194
binder 19602:19604 <> p_n:195
R19629:19632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19617:19618 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19607:19612 Coq.Init.Datatypes <> length def
R19614:19616 Quan.QAssert <> nF1:193 var
R19619:19624 Coq.Init.Datatypes <> length def
R19626:19628 Quan.QAssert <> p_n:195 var
R19655:19657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19643:19644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19633:19638 Coq.Init.Datatypes <> length def
R19640:19642 Quan.QAssert <> nF2:194 var
R19645:19650 Coq.Init.Datatypes <> length def
R19652:19654 Quan.QAssert <> p_n:195 var
R19658:19658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19704:19707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19753:19753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19659:19673 Quan.QAssert <> get_pro_formula def
R19676:19694 Quan.QAssert <> npro_to_pro_formula def
R19696:19698 Quan.QAssert <> nF2:194 var
R19700:19702 Quan.QAssert <> p_n:195 var
R19708:19722 Quan.QAssert <> get_pro_formula def
R19725:19743 Quan.QAssert <> npro_to_pro_formula def
R19745:19747 Quan.QAssert <> nF1:193 var
R19749:19751 Quan.QAssert <> p_n:195 var
prf 20084:20095 <> pro_npro_inv
binder 20104:20105 <> nF:196
binder 20107:20109 <> p_n:197
R20133:20135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20121:20122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20112:20117 Coq.Init.Datatypes <> length def
R20119:20120 Quan.QAssert <> nF:196 var
R20123:20128 Coq.Init.Datatypes <> length def
R20130:20132 Quan.QAssert <> p_n:197 var
R20136:20136 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20185:20187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20137:20155 Quan.QAssert <> pro_to_npro_formula def
R20158:20176 Quan.QAssert <> npro_to_pro_formula def
R20178:20179 Quan.QAssert <> nF:196 var
R20181:20183 Quan.QAssert <> p_n:197 var
R20188:20189 Quan.QAssert <> nF:196 var
prf 20384:20391 <> seman_eq
binder 20401:20401 <> n:198
R20411:20416 Quan.QState <> dstate def
R20418:20418 Quan.QAssert <> n:198 var
binder 20404:20405 <> mu:199
binder 20407:20409 <> mu':200
R20424:20436 Quan.QAssert <> State_formula ind
binder 20422:20422 <> F:201
R20456:20458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20440:20448 Quan.QState <> dstate_eq def
R20453:20455 Quan.QAssert <> mu':200 var
R20450:20451 Quan.QAssert <> mu:199 var
R20474:20476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20459:20467 Quan.QAssert <> sat_State ind
R20473:20473 Quan.QAssert <> F:201 var
R20470:20471 Quan.QAssert <> mu:199 var
R20477:20485 Quan.QAssert <> sat_State ind
R20492:20492 Quan.QAssert <> F:201 var
R20488:20490 Quan.QAssert <> mu':200 var
prf 20519:20537 <> sat_Assert_to_State
binder 20547:20547 <> n:202
R20553:20558 Quan.QState <> dstate def
R20560:20560 Quan.QAssert <> n:202 var
binder 20550:20551 <> mu:203
R20566:20578 Quan.QAssert <> State_formula ind
binder 20564:20564 <> F:204
R20597:20601 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20582:20591 Quan.QAssert <> sat_Assert ind
R20596:20596 Quan.QAssert <> F:204 var
R20593:20594 Quan.QAssert <> mu:203 var
R20602:20610 Quan.QAssert <> sat_State ind
R20615:20615 Quan.QAssert <> F:204 var
R20612:20613 Quan.QAssert <> mu:203 var
R20701:20720 Quan.QAssert <> distribution_formula def
R20834:20853 Quan.QAssert <> distribution_formula def
R20884:20909 Quan.QAssert <> sum_over_list_cons_formula thm
R20884:20909 Quan.QAssert <> sum_over_list_cons_formula thm
R20884:20909 Quan.QAssert <> sum_over_list_cons_formula thm
R20939:20963 Quan.QAssert <> sum_over_list_nil_formula thm
R20939:20963 Quan.QAssert <> sum_over_list_nil_formula thm
R20939:20963 Quan.QAssert <> sum_over_list_nil_formula thm
R20980:20988 Coq.Reals.RIneq <> Rplus_0_r thm
R20980:20988 Coq.Reals.RIneq <> Rplus_0_r thm
R20980:20988 Coq.Reals.RIneq <> Rplus_0_r thm
R21037:21045 Quan.QState <> dstate_eq def
R21037:21045 Quan.QState <> dstate_eq def
R21062:21076 Quan.QAssert <> dstate_eq_trans thm
R21062:21076 Quan.QAssert <> dstate_eq_trans thm
R21120:21124 Quan.QState <> d_app def
R21129:21135 Quan.QState <> d_empty def
R21097:21111 Quan.QAssert <> dstate_eq_trans thm
R21120:21124 Quan.QState <> d_app def
R21129:21135 Quan.QState <> d_empty def
R21097:21111 Quan.QAssert <> dstate_eq_trans thm
R21149:21156 Quan.QState <> d_app_eq thm
R21149:21156 Quan.QState <> d_app_eq thm
R21165:21176 Quan.QState <> d_scalar_1_l thm
R21165:21176 Quan.QState <> d_scalar_1_l thm
R21187:21195 Quan.QState <> dstate_eq def
R21241:21245 Quan.QState <> d_app def
R21248:21254 Quan.QState <> d_empty def
R21218:21232 Quan.QAssert <> dstate_eq_trans thm
R21241:21245 Quan.QState <> d_app def
R21248:21254 Quan.QState <> d_empty def
R21218:21232 Quan.QAssert <> dstate_eq_trans thm
R21270:21279 Quan.QState <> d_app_comm thm
R21270:21279 Quan.QState <> d_app_comm thm
R21289:21300 Quan.QState <> d_app_nil_mu thm
R21289:21300 Quan.QState <> d_app_nil_mu thm
R21309:21316 Quan.QAssert <> seman_eq prfax
R21309:21316 Quan.QAssert <> seman_eq prfax
R21332:21344 Quan.QAssert <> dstate_eq_sym thm
R21332:21344 Quan.QAssert <> dstate_eq_sym thm
R21473:21492 Quan.QAssert <> distribution_formula def
R21495:21513 Quan.QAssert <> npro_to_pro_formula def
R21517:21517 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21519:21519 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21473:21492 Quan.QAssert <> distribution_formula def
R21495:21513 Quan.QAssert <> npro_to_pro_formula def
R21517:21517 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21519:21519 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21545:21564 Quan.QAssert <> distribution_formula def
R21594:21619 Quan.QAssert <> sum_over_list_cons_formula thm
R21594:21619 Quan.QAssert <> sum_over_list_cons_formula thm
R21594:21619 Quan.QAssert <> sum_over_list_cons_formula thm
R21644:21668 Quan.QAssert <> sum_over_list_nil_formula thm
R21644:21668 Quan.QAssert <> sum_over_list_nil_formula thm
R21644:21668 Quan.QAssert <> sum_over_list_nil_formula thm
R21746:21747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21735:21740 Coq.Init.Datatypes <> length def
R21742:21742 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21745:21745 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21748:21753 Coq.Init.Datatypes <> length def
R21755:21755 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21762:21762 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21756:21756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21758:21759 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21761:21761 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21746:21747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21735:21740 Coq.Init.Datatypes <> length def
R21742:21742 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21745:21745 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21748:21753 Coq.Init.Datatypes <> length def
R21755:21755 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21762:21762 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21756:21756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21758:21759 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21761:21761 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21844:21848 Quan.QState <> d_app def
R21854:21860 Quan.QState <> d_empty def
R21821:21835 Quan.QAssert <> dstate_eq_trans thm
R21844:21848 Quan.QState <> d_app def
R21854:21860 Quan.QState <> d_empty def
R21821:21835 Quan.QAssert <> dstate_eq_trans thm
R21903:21907 Quan.QState <> d_app def
R21910:21916 Quan.QState <> d_empty def
R21880:21894 Quan.QAssert <> dstate_eq_trans thm
R21903:21907 Quan.QState <> d_app def
R21910:21916 Quan.QState <> d_empty def
R21880:21894 Quan.QAssert <> dstate_eq_trans thm
R21939:21951 Quan.QAssert <> dstate_eq_sym thm
R21939:21951 Quan.QAssert <> dstate_eq_sym thm
R21960:21971 Quan.QState <> d_app_nil_mu thm
R21960:21971 Quan.QState <> d_app_nil_mu thm
R21986:21995 Quan.QState <> d_app_comm thm
R21986:21995 Quan.QState <> d_app_comm thm
R22018:22025 Quan.QState <> d_app_eq thm
R22018:22025 Quan.QState <> d_app_eq thm
R22034:22046 Quan.QAssert <> dstate_eq_sym thm
R22034:22046 Quan.QAssert <> dstate_eq_sym thm
R22061:22072 Quan.QState <> d_scalar_1_l thm
R22061:22072 Quan.QState <> d_scalar_1_l thm
R22082:22090 Quan.QState <> dstate_eq def
R22154:22156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22144:22150 Quan.QState <> d_trace def
R22157:22163 Quan.QState <> d_trace def
R22166:22168 Coq.Lists.List <> nth def
R22178:22184 Quan.QState <> d_empty def
R22172:22172 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22175:22175 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22154:22156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22144:22150 Quan.QState <> d_trace def
R22157:22163 Quan.QState <> d_trace def
R22166:22168 Coq.Lists.List <> nth def
R22178:22184 Quan.QState <> d_empty def
R22172:22172 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22175:22175 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
prf 22239:22253 <> big_and_impiles
R22257:22259 Coq.Init.Datatypes <> nat ind
binder 22255:22255 <> n:205
binder 22270:22272 <> nF1:206
binder 22274:22276 <> nF2:207
R22285:22288 Coq.Init.Datatypes <> list ind
R22291:22296 Quan.QState <> dstate def
R22298:22298 Quan.QAssert <> n:205 var
binder 22280:22283 <> mu_n:208
R22332:22335 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22303:22309 Quan.QAssert <> big_and def
R22321:22326 Coq.Init.Datatypes <> length def
R22328:22330 Quan.QAssert <> nF1:206 var
R22316:22318 Quan.QAssert <> nF1:206 var
R22311:22314 Quan.QAssert <> mu_n:208 var
R22355:22358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22336:22346 Quan.QAssert <> big_impiles def
R22348:22350 Quan.QAssert <> nF1:206 var
R22352:22354 Quan.QAssert <> nF2:207 var
R22359:22365 Quan.QAssert <> big_and def
R22377:22382 Coq.Init.Datatypes <> length def
R22384:22386 Quan.QAssert <> nF2:207 var
R22372:22374 Quan.QAssert <> nF2:207 var
R22367:22370 Quan.QAssert <> mu_n:208 var
R22671:22684 Quan.QAssert <> assert_implies def
R22730:22739 Quan.QAssert <> sat_Assert ind
R22730:22739 Quan.QAssert <> sat_Assert ind
R22773:22791 Quan.QAssert <> sat_Assert_to_State thm
R22773:22791 Quan.QAssert <> sat_Assert_to_State thm
R22773:22791 Quan.QAssert <> sat_Assert_to_State thm
R22822:22840 Quan.QAssert <> sat_Assert_to_State thm
R22822:22840 Quan.QAssert <> sat_Assert_to_State thm
R22822:22840 Quan.QAssert <> sat_Assert_to_State thm
prf 22933:22965 <> sum_over_list_formula_npro_to_pro
binder 22975:22977 <> nF1:209
binder 22979:22981 <> nF2:210
binder 22983:22985 <> p_n:211
R23011:23014 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22998:23000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22988:22993 Coq.Init.Datatypes <> length def
R22995:22997 Quan.QAssert <> nF1:209 var
R23001:23006 Coq.Init.Datatypes <> length def
R23008:23010 Quan.QAssert <> p_n:211 var
R23037:23039 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23025:23026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23015:23020 Coq.Init.Datatypes <> length def
R23022:23024 Quan.QAssert <> nF2:210 var
R23027:23032 Coq.Init.Datatypes <> length def
R23034:23036 Quan.QAssert <> p_n:211 var
R23092:23094 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23040:23060 Quan.QAssert <> sum_over_list_formula def
R23064:23082 Quan.QAssert <> npro_to_pro_formula def
R23084:23086 Quan.QAssert <> nF1:209 var
R23088:23090 Quan.QAssert <> p_n:211 var
R23095:23115 Quan.QAssert <> sum_over_list_formula def
R23118:23136 Quan.QAssert <> npro_to_pro_formula def
R23138:23140 Quan.QAssert <> nF2:210 var
R23142:23144 Quan.QAssert <> p_n:211 var
R23368:23393 Quan.QAssert <> sum_over_list_cons_formula thm
R23368:23393 Quan.QAssert <> sum_over_list_cons_formula thm
R23368:23393 Quan.QAssert <> sum_over_list_cons_formula thm
R23368:23393 Quan.QAssert <> sum_over_list_cons_formula thm
R23368:23393 Quan.QAssert <> sum_over_list_cons_formula thm
R23368:23393 Quan.QAssert <> sum_over_list_cons_formula thm
prf 23505:23522 <> Forall_npro_to_pro
binder 23532:23534 <> nF1:212
binder 23536:23538 <> nF2:213
binder 23540:23542 <> p_n:214
R23568:23571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23555:23557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23545:23550 Coq.Init.Datatypes <> length def
R23552:23554 Quan.QAssert <> nF1:212 var
R23558:23563 Coq.Init.Datatypes <> length def
R23565:23567 Quan.QAssert <> p_n:214 var
R23594:23596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23582:23583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23572:23577 Coq.Init.Datatypes <> length def
R23579:23581 Quan.QAssert <> nF2:213 var
R23584:23589 Coq.Init.Datatypes <> length def
R23591:23593 Quan.QAssert <> p_n:214 var
R23676:23679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23597:23602 Coq.Lists.List <> Forall ind
R23648:23666 Quan.QAssert <> npro_to_pro_formula def
R23668:23670 Quan.QAssert <> nF1:212 var
R23672:23674 Quan.QAssert <> p_n:214 var
R23614:23616 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23613:23613 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
R23617:23629 Quan.QAssert <> State_formula ind
binder 23609:23609 <> x:215
R23635:23638 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R23639:23641 Coq.Init.Datatypes <> fst def
R23643:23643 Quan.QAssert <> x:215 var
R23680:23685 Coq.Lists.List <> Forall ind
R23730:23748 Quan.QAssert <> npro_to_pro_formula def
R23750:23752 Quan.QAssert <> nF2:213 var
R23754:23756 Quan.QAssert <> p_n:214 var
R23697:23699 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23696:23696 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
R23700:23712 Quan.QAssert <> State_formula ind
binder 23692:23692 <> x:216
R23718:23721 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R23722:23724 Coq.Init.Datatypes <> fst def
R23726:23726 Quan.QAssert <> x:216 var
prf 24147:24178 <> distribution_formula_npro_to_pro
binder 24188:24190 <> nF1:217
binder 24192:24194 <> nF2:218
binder 24196:24198 <> p_n:219
R24224:24227 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24211:24213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24201:24206 Coq.Init.Datatypes <> length def
R24208:24210 Quan.QAssert <> nF1:217 var
R24214:24219 Coq.Init.Datatypes <> length def
R24221:24223 Quan.QAssert <> p_n:219 var
R24250:24252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24238:24239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24228:24233 Coq.Init.Datatypes <> length def
R24235:24237 Quan.QAssert <> nF2:218 var
R24240:24245 Coq.Init.Datatypes <> length def
R24247:24249 Quan.QAssert <> p_n:219 var
R24304:24307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24253:24272 Quan.QAssert <> distribution_formula def
R24276:24294 Quan.QAssert <> npro_to_pro_formula def
R24296:24298 Quan.QAssert <> nF1:217 var
R24300:24302 Quan.QAssert <> p_n:219 var
R24308:24327 Quan.QAssert <> distribution_formula def
R24330:24348 Quan.QAssert <> npro_to_pro_formula def
R24350:24352 Quan.QAssert <> nF2:218 var
R24354:24356 Quan.QAssert <> p_n:219 var
R24382:24401 Quan.QAssert <> distribution_formula def
R24442:24459 Quan.QAssert <> Forall_npro_to_pro thm
R24442:24459 Quan.QAssert <> Forall_npro_to_pro thm
R24548:24580 Quan.QAssert <> sum_over_list_formula_npro_to_pro thm
R24548:24580 Quan.QAssert <> sum_over_list_formula_npro_to_pro thm
prf 24630:24638 <> rule_OCon
R24657:24668 Quan.QAssert <> npro_formula def
binder 24649:24651 <> nF1:220
binder 24653:24655 <> nF2:221
R24677:24680 Coq.Init.Datatypes <> list ind
R24682:24682 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 24672:24674 <> p_n:222
R24708:24711 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24696:24697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24686:24691 Coq.Init.Datatypes <> length def
R24693:24695 Quan.QAssert <> nF1:220 var
R24698:24703 Coq.Init.Datatypes <> length def
R24705:24707 Quan.QAssert <> p_n:222 var
R24731:24735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24799:24799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24712:24722 Quan.QAssert <> big_impiles def
R24724:24726 Quan.QAssert <> nF1:220 var
R24728:24730 Quan.QAssert <> nF2:221 var
R24736:24736 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R24764:24770 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R24798:24798 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R24737:24755 Quan.QAssert <> npro_to_pro_formula def
R24757:24759 Quan.QAssert <> nF1:220 var
R24761:24763 Quan.QAssert <> p_n:222 var
R24771:24789 Quan.QAssert <> npro_to_pro_formula def
R24791:24793 Quan.QAssert <> nF2:221 var
R24795:24797 Quan.QAssert <> p_n:222 var
R24827:24840 Quan.QAssert <> assert_implies def
R24925:24956 Quan.QAssert <> distribution_formula_npro_to_pro thm
R24925:24956 Quan.QAssert <> distribution_formula_npro_to_pro thm
R24991:25008 Quan.QAssert <> big_impiles_length thm
R24991:25008 Quan.QAssert <> big_impiles_length thm
R24991:25008 Quan.QAssert <> big_impiles_length thm
R25066:25091 Quan.QAssert <> npro_to_pro_formula_length thm
R25066:25091 Quan.QAssert <> npro_to_pro_formula_length thm
R25066:25091 Quan.QAssert <> npro_to_pro_formula_length thm
R25066:25091 Quan.QAssert <> npro_to_pro_formula_length thm
R25102:25127 Quan.QAssert <> npro_to_pro_formula_length thm
R25102:25127 Quan.QAssert <> npro_to_pro_formula_length thm
R25102:25127 Quan.QAssert <> npro_to_pro_formula_length thm
R25102:25127 Quan.QAssert <> npro_to_pro_formula_length thm
R25148:25165 Quan.QAssert <> big_impiles_length thm
R25148:25165 Quan.QAssert <> big_impiles_length thm
R25148:25165 Quan.QAssert <> big_impiles_length thm
R25210:25227 Quan.QAssert <> big_impiles_length thm
R25210:25227 Quan.QAssert <> big_impiles_length thm
R25210:25227 Quan.QAssert <> big_impiles_length thm
R25259:25276 Quan.QAssert <> get_pro_formula_eq thm
R25259:25276 Quan.QAssert <> get_pro_formula_eq thm
R25259:25276 Quan.QAssert <> get_pro_formula_eq thm
R25259:25276 Quan.QAssert <> get_pro_formula_eq thm
R25259:25276 Quan.QAssert <> get_pro_formula_eq thm
R25298:25323 Quan.QAssert <> npro_to_pro_formula_length thm
R25298:25323 Quan.QAssert <> npro_to_pro_formula_length thm
R25298:25323 Quan.QAssert <> npro_to_pro_formula_length thm
R25298:25323 Quan.QAssert <> npro_to_pro_formula_length thm
R25340:25365 Quan.QAssert <> npro_to_pro_formula_length thm
R25340:25365 Quan.QAssert <> npro_to_pro_formula_length thm
R25340:25365 Quan.QAssert <> npro_to_pro_formula_length thm
R25340:25365 Quan.QAssert <> npro_to_pro_formula_length thm
R25380:25397 Quan.QAssert <> big_impiles_length thm
R25380:25397 Quan.QAssert <> big_impiles_length thm
R25380:25397 Quan.QAssert <> big_impiles_length thm
R25434:25451 Quan.QAssert <> big_impiles_length thm
R25434:25451 Quan.QAssert <> big_impiles_length thm
R25434:25451 Quan.QAssert <> big_impiles_length thm
R25509:25526 Quan.QAssert <> big_impiles_length thm
R25509:25526 Quan.QAssert <> big_impiles_length thm
R25509:25526 Quan.QAssert <> big_impiles_length thm
R25559:25570 Quan.QAssert <> pro_npro_inv thm
R25559:25570 Quan.QAssert <> pro_npro_inv thm
R25559:25570 Quan.QAssert <> pro_npro_inv thm
R25559:25570 Quan.QAssert <> pro_npro_inv thm
R25581:25592 Quan.QAssert <> pro_npro_inv thm
R25581:25592 Quan.QAssert <> pro_npro_inv thm
R25581:25592 Quan.QAssert <> pro_npro_inv thm
R25581:25592 Quan.QAssert <> pro_npro_inv thm
R25609:25634 Quan.QAssert <> npro_to_pro_formula_length thm
R25609:25634 Quan.QAssert <> npro_to_pro_formula_length thm
R25609:25634 Quan.QAssert <> npro_to_pro_formula_length thm
R25609:25634 Quan.QAssert <> npro_to_pro_formula_length thm
R25652:25677 Quan.QAssert <> npro_to_pro_formula_length thm
R25652:25677 Quan.QAssert <> npro_to_pro_formula_length thm
R25652:25677 Quan.QAssert <> npro_to_pro_formula_length thm
R25652:25677 Quan.QAssert <> npro_to_pro_formula_length thm
R25687:25701 Quan.QAssert <> big_and_impiles thm
R25687:25701 Quan.QAssert <> big_and_impiles thm
R25752:25769 Quan.QAssert <> big_impiles_length thm
R25752:25769 Quan.QAssert <> big_impiles_length thm
R25752:25769 Quan.QAssert <> big_impiles_length thm
R25827:25844 Quan.QAssert <> big_impiles_length thm
R25827:25844 Quan.QAssert <> big_impiles_length thm
R25827:25844 Quan.QAssert <> big_impiles_length thm
prf 25891:25905 <> d_scalar_assoc'
binder 25915:25915 <> n:223
R25924:25924 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 25918:25919 <> p1:224
binder 25921:25922 <> p2:225
R25931:25936 Quan.QState <> dstate def
R25938:25938 Quan.QAssert <> n:223 var
binder 25928:25929 <> mu:226
R25945:25953 Quan.QState <> dstate_eq def
R25988:25995 Quan.QState <> d_scalar def
R26012:26013 Quan.QAssert <> mu:226 var
R25998:26002 Coq.Reals.Rdefinitions RbaseSymbolsImpl Rmult defax
R26004:26005 Quan.QAssert <> p1:224 var
R26008:26009 Quan.QAssert <> p2:225 var
R25956:25963 Quan.QState <> d_scalar def
R25969:25976 Quan.QState <> d_scalar def
R25981:25982 Quan.QAssert <> mu:226 var
R25978:25979 Quan.QAssert <> p2:225 var
R25965:25966 Quan.QAssert <> p1:224 var
R26132:26139 Quan.QState <> d_scalar def
R26149:26151 Coq.Lists.List <> map def
R26178:26185 Quan.QState <> d_scalar def
R26204:26206 Coq.Lists.List <> map def
R26294:26302 Quan.QState <> dstate_eq def
R26329:26337 Quan.QState <> dstate_eq def
R26421:26432 Quan.Matrix <> Mscale_assoc thm
R26421:26432 Quan.Matrix <> Mscale_assoc thm
R26421:26432 Quan.Matrix <> Mscale_assoc thm
R26452:26453 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26479:26494 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26513:26514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26454:26458 Quan.Complex <> Cmult def
R26461:26464 Quan.Complex <> RtoC def
R26471:26474 Quan.Complex <> RtoC def
R26495:26498 Quan.Complex <> RtoC def
R26501:26505 Coq.Reals.Rdefinitions RbaseSymbolsImpl Rmult defax
R26452:26453 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26479:26494 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26513:26514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26454:26458 Quan.Complex <> Cmult def
R26461:26464 Quan.Complex <> RtoC def
R26471:26474 Quan.Complex <> RtoC def
R26495:26498 Quan.Complex <> RtoC def
R26501:26505 Coq.Reals.Rdefinitions RbaseSymbolsImpl Rmult defax
R26535:26538 Quan.Complex <> RtoC def
R26558:26562 Quan.Complex <> Cmult def
R26597:26605 Coq.Reals.RIneq <> Rmult_0_l thm
R26597:26605 Coq.Reals.RIneq <> Rmult_0_l thm
R26597:26605 Coq.Reals.RIneq <> Rmult_0_l thm
R26597:26605 Coq.Reals.RIneq <> Rmult_0_l thm
R26597:26605 Coq.Reals.RIneq <> Rmult_0_l thm
R26597:26605 Coq.Reals.RIneq <> Rmult_0_l thm
R26633:26641 Coq.Reals.RIneq <> Rmult_0_r thm
R26633:26641 Coq.Reals.RIneq <> Rmult_0_r thm
R26633:26641 Coq.Reals.RIneq <> Rmult_0_r thm
R26633:26641 Coq.Reals.RIneq <> Rmult_0_r thm
R26662:26670 Coq.Reals.RIneq <> Rplus_0_r thm
R26662:26670 Coq.Reals.RIneq <> Rplus_0_r thm
R26662:26670 Coq.Reals.RIneq <> Rplus_0_r thm
R26691:26700 Coq.Reals.RIneq <> Rminus_0_r thm
R26691:26700 Coq.Reals.RIneq <> Rminus_0_r thm
R26691:26700 Coq.Reals.RIneq <> Rminus_0_r thm
prf 26799:26811 <> d_scalar_1_l'
binder 26821:26821 <> n:227
R26827:26832 Quan.QState <> dstate def
R26834:26834 Quan.QAssert <> n:227 var
binder 26824:26825 <> mu:228
R26839:26847 Quan.QState <> dstate_eq def
R26866:26867 Quan.QAssert <> mu:228 var
R26850:26857 Quan.QState <> d_scalar def
R26861:26862 Quan.QAssert <> mu:228 var
R26914:26921 Quan.QState <> d_scalar def
R26931:26933 Coq.Lists.List <> map def
R27035:27043 Quan.QState <> dstate_eq def
R27120:27128 Quan.QState <> dstate_eq def
R27172:27181 Quan.Matrix <> Mscale_1_l thm
R27172:27181 Quan.Matrix <> Mscale_1_l thm
R27172:27181 Quan.Matrix <> Mscale_1_l thm
prf 27258:27268 <> d_seman_app
binder 27278:27278 <> n:229
R27283:27295 Quan.QAssert <> State_formula ind
binder 27281:27281 <> F:230
R27307:27312 Quan.QState <> dstate def
R27314:27314 Quan.QAssert <> n:229 var
binder 27300:27301 <> mu:231
binder 27303:27305 <> mu':232
R27324:27324 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 27318:27319 <> p0:233
binder 27321:27322 <> p1:234
R27328:27328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27340:27342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27330:27332 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R27335:27338 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R27333:27334 Quan.QAssert <> p0:233 var
R27333:27334 Quan.QAssert <> p0:233 var
R27343:27343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27355:27358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27345:27347 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R27350:27353 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R27348:27349 Quan.QAssert <> p1:234 var
R27348:27349 Quan.QAssert <> p1:234 var
R27359:27359 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27372:27375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27361:27362 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R27368:27370 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R27365:27365 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R27363:27364 Quan.QAssert <> p0:233 var
R27366:27367 Quan.QAssert <> p1:234 var
R27365:27365 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R27363:27364 Quan.QAssert <> p0:233 var
R27366:27367 Quan.QAssert <> p1:234 var
R27390:27394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27376:27384 Quan.QAssert <> sat_State ind
R27389:27389 Quan.QAssert <> F:230 var
R27386:27387 Quan.QAssert <> mu:231 var
R27413:27416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27395:27403 Quan.QAssert <> sat_State ind
R27412:27412 Quan.QAssert <> F:230 var
R27407:27409 Quan.QAssert <> mu':232 var
R27417:27425 Quan.QAssert <> sat_State ind
R27473:27473 Quan.QAssert <> F:230 var
R27428:27432 Quan.QState <> d_app def
R27455:27462 Quan.QState <> d_scalar def
R27467:27469 Quan.QAssert <> mu':232 var
R27464:27465 Quan.QAssert <> p1:234 var
R27435:27442 Quan.QState <> d_scalar def
R27447:27448 Quan.QAssert <> mu:231 var
R27444:27445 Quan.QAssert <> p0:233 var
R27589:27593 Quan.QAssert <> sat_F constr
R27589:27593 Quan.QAssert <> sat_F constr
R27610:27617 Quan.QState <> WF_d_app thm
R27610:27617 Quan.QState <> WF_d_app thm
prf 27705:27714 <> rule_OMerg
R27733:27733 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 27724:27725 <> p0:235
binder 27727:27728 <> p1:236
binder 27730:27731 <> p2:237
R27739:27751 Quan.QAssert <> State_formula ind
binder 27737:27737 <> F:238
R27758:27768 Quan.QAssert <> pro_formula def
binder 27755:27756 <> pF:239
R27790:27793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27779:27781 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27773:27774 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<'_x not
R27777:27777 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<'_x not
R27775:27776 Quan.QAssert <> p0:235 var
R27775:27776 Quan.QAssert <> p0:235 var
R27783:27784 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<'_x not
R27787:27788 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<'_x not
R27785:27786 Quan.QAssert <> p1:236 var
R27785:27786 Quan.QAssert <> p1:236 var
R27827:27832 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R27794:27797 Quan.QAssert <> APro constr
R27808:27811 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27800:27800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27803:27805 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27807:27807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27801:27802 Quan.QAssert <> p0:235 var
R27806:27806 Quan.QAssert <> F:238 var
R27820:27823 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27812:27813 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27816:27817 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27819:27819 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27814:27815 Quan.QAssert <> p1:236 var
R27818:27818 Quan.QAssert <> F:238 var
R27824:27825 Quan.QAssert <> pF:239 var
R27833:27836 Quan.QAssert <> APro constr
R27851:27853 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27839:27840 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27846:27848 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27850:27850 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27843:27843 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R27841:27842 Quan.QAssert <> p0:235 var
R27844:27845 Quan.QAssert <> p1:236 var
R27849:27849 Quan.QAssert <> F:238 var
R27854:27855 Quan.QAssert <> pF:239 var
R27881:27894 Quan.QAssert <> assert_implies def
R28239:28240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28150:28155 Coq.Init.Datatypes <> length def
R28158:28159 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28230:28233 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28160:28164 Quan.QState <> d_app def
R28201:28208 Quan.QState <> d_scalar def
R28213:28216 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28224:28224 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28219:28221 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28168:28175 Quan.QState <> d_scalar def
R28180:28183 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28191:28191 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28186:28188 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28241:28241 Coq.Init.Datatypes <> S constr
R28244:28249 Coq.Init.Datatypes <> length def
R28239:28240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28150:28155 Coq.Init.Datatypes <> length def
R28158:28159 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28230:28233 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28160:28164 Quan.QState <> d_app def
R28201:28208 Quan.QState <> d_scalar def
R28213:28216 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28224:28224 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28219:28221 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28168:28175 Quan.QState <> d_scalar def
R28180:28183 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28191:28191 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28186:28188 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28241:28241 Coq.Init.Datatypes <> S constr
R28244:28249 Coq.Init.Datatypes <> length def
R28337:28351 Quan.QAssert <> dstate_eq_trans thm
R28337:28351 Quan.QAssert <> dstate_eq_trans thm
R28397:28401 Quan.QState <> d_app def
R28446:28453 Quan.QAssert <> big_dapp def
R28482:28487 Coq.Init.Datatypes <> length def
R28456:28470 Quan.QAssert <> get_pro_formula def
R28404:28408 Quan.QState <> d_app def
R28428:28435 Quan.QState <> d_scalar def
R28411:28418 Quan.QState <> d_scalar def
R28374:28388 Quan.QAssert <> dstate_eq_trans thm
R28397:28401 Quan.QState <> d_app def
R28446:28453 Quan.QAssert <> big_dapp def
R28482:28487 Coq.Init.Datatypes <> length def
R28456:28470 Quan.QAssert <> get_pro_formula def
R28404:28408 Quan.QState <> d_app def
R28428:28435 Quan.QState <> d_scalar def
R28411:28418 Quan.QState <> d_scalar def
R28374:28388 Quan.QAssert <> dstate_eq_trans thm
R28504:28516 Quan.QAssert <> dstate_eq_sym thm
R28504:28516 Quan.QAssert <> dstate_eq_sym thm
R28526:28536 Quan.QState <> d_app_assoc thm
R28526:28536 Quan.QState <> d_app_assoc thm
R28565:28572 Quan.QState <> d_app_eq thm
R28565:28572 Quan.QState <> d_app_eq thm
R28607:28611 Quan.QState <> d_app def
R28668:28675 Quan.QState <> d_scalar def
R28688:28695 Quan.QState <> d_scalar def
R28700:28703 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28711:28711 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28706:28708 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28680:28682 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28614:28621 Quan.QState <> d_scalar def
R28634:28641 Quan.QState <> d_scalar def
R28646:28649 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28657:28657 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28652:28654 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28626:28628 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28585:28599 Quan.QAssert <> dstate_eq_trans thm
R28607:28611 Quan.QState <> d_app def
R28668:28675 Quan.QState <> d_scalar def
R28688:28695 Quan.QState <> d_scalar def
R28700:28703 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28711:28711 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28706:28708 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28680:28682 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28614:28621 Quan.QState <> d_scalar def
R28634:28641 Quan.QState <> d_scalar def
R28646:28649 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28657:28657 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28652:28654 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28626:28628 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28585:28599 Quan.QAssert <> dstate_eq_trans thm
R28730:28737 Quan.QState <> d_app_eq thm
R28773:28780 Quan.QState <> d_scalar def
R28784:28784 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28792:28795 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28810:28810 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28787:28789 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28798:28801 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28809:28809 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28804:28806 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28750:28764 Quan.QAssert <> dstate_eq_trans thm
R28849:28856 Quan.QState <> d_scalar def
R28860:28860 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28868:28871 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28886:28886 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28863:28865 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28874:28877 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28885:28885 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28880:28882 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28826:28840 Quan.QAssert <> dstate_eq_trans thm
R28907:28921 Quan.RealAux <> Rmult_div_assoc thm
R28934:28948 Quan.RealAux <> Rmult_div_assoc thm
R28965:28974 Coq.Reals.Raxioms <> Rmult_comm thm
R28987:28996 Coq.Reals.Raxioms <> Rmult_comm thm
R29013:29023 Quan.RealAux <> Rdiv_unfold thm
R29036:29046 Quan.RealAux <> Rdiv_unfold thm
R29063:29073 Coq.Reals.Raxioms <> Rmult_assoc thm
R29086:29096 Coq.Reals.Raxioms <> Rmult_assoc thm
R29113:29118 Coq.Reals.RIneq <> Rinv_r thm
R29131:29136 Coq.Reals.RIneq <> Rinv_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R28730:28737 Quan.QState <> d_app_eq thm
R28773:28780 Quan.QState <> d_scalar def
R28784:28784 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28792:28795 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28810:28810 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28787:28789 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28798:28801 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28809:28809 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28804:28806 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28750:28764 Quan.QAssert <> dstate_eq_trans thm
R28849:28856 Quan.QState <> d_scalar def
R28860:28860 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28868:28871 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28886:28886 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R28863:28865 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28874:28877 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28885:28885 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R28880:28882 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R28826:28840 Quan.QAssert <> dstate_eq_trans thm
R28907:28921 Quan.RealAux <> Rmult_div_assoc thm
R28907:28921 Quan.RealAux <> Rmult_div_assoc thm
R28934:28948 Quan.RealAux <> Rmult_div_assoc thm
R28934:28948 Quan.RealAux <> Rmult_div_assoc thm
R28965:28974 Coq.Reals.Raxioms <> Rmult_comm thm
R28965:28974 Coq.Reals.Raxioms <> Rmult_comm thm
R28987:28996 Coq.Reals.Raxioms <> Rmult_comm thm
R28987:28996 Coq.Reals.Raxioms <> Rmult_comm thm
R29013:29023 Quan.RealAux <> Rdiv_unfold thm
R29013:29023 Quan.RealAux <> Rdiv_unfold thm
R29036:29046 Quan.RealAux <> Rdiv_unfold thm
R29036:29046 Quan.RealAux <> Rdiv_unfold thm
R29063:29073 Coq.Reals.Raxioms <> Rmult_assoc thm
R29063:29073 Coq.Reals.Raxioms <> Rmult_assoc thm
R29086:29096 Coq.Reals.Raxioms <> Rmult_assoc thm
R29086:29096 Coq.Reals.Raxioms <> Rmult_assoc thm
R29113:29118 Coq.Reals.RIneq <> Rinv_r thm
R29113:29118 Coq.Reals.RIneq <> Rinv_r thm
R29113:29118 Coq.Reals.RIneq <> Rinv_r thm
R29131:29136 Coq.Reals.RIneq <> Rinv_r thm
R29131:29136 Coq.Reals.RIneq <> Rinv_r thm
R29131:29136 Coq.Reals.RIneq <> Rinv_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29158:29166 Coq.Reals.RIneq <> Rmult_1_r thm
R29177:29185 Quan.QState <> dstate_eq def
R29218:29230 Quan.QAssert <> dstate_eq_sym thm
R29218:29230 Quan.QAssert <> dstate_eq_sym thm
R29240:29254 Quan.QAssert <> d_scalar_assoc' thm
R29240:29254 Quan.QAssert <> d_scalar_assoc' thm
R29267:29275 Quan.QState <> dstate_eq def
R29307:29319 Quan.QAssert <> dstate_eq_sym thm
R29307:29319 Quan.QAssert <> dstate_eq_sym thm
R29329:29343 Quan.QAssert <> d_scalar_assoc' thm
R29329:29343 Quan.QAssert <> d_scalar_assoc' thm
R29354:29371 Quan.QState <> d_scalar_app_distr thm
R29354:29371 Quan.QState <> d_scalar_app_distr thm
R29380:29387 Quan.QState <> WF_d_app thm
R29380:29387 Quan.QState <> WF_d_app thm
R29412:29422 Quan.QState <> WF_d_scalar thm
R29412:29422 Quan.QState <> WF_d_scalar thm
R29484:29494 Quan.QState <> WF_d_scalar thm
R29484:29494 Quan.QState <> WF_d_scalar thm
R29569:29579 Quan.QState <> WF_d_scalar thm
R29569:29579 Quan.QState <> WF_d_scalar thm
R29595:29602 Quan.QState <> WF_d_app thm
R29595:29602 Quan.QState <> WF_d_app thm
R29642:29650 Quan.QState <> dstate_eq def
R29693:29703 Quan.QAssert <> d_seman_app prfax
R29693:29703 Quan.QAssert <> d_seman_app prfax
R29724:29734 Quan.RealAux <> Rdiv_unfold thm
R29724:29734 Quan.RealAux <> Rdiv_unfold thm
R29724:29734 Quan.RealAux <> Rdiv_unfold thm
R29745:29761 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R29745:29761 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R29784:29799 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R29784:29799 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R29816:29837 Coquelicot.Rcomplements <> Rdiv_le_1 thm
R29845:29845 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R29816:29837 Coquelicot.Rcomplements <> Rdiv_le_1 thm
R29845:29845 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R29882:29892 Quan.RealAux <> Rdiv_unfold thm
R29882:29892 Quan.RealAux <> Rdiv_unfold thm
R29882:29892 Quan.RealAux <> Rdiv_unfold thm
R29903:29919 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R29903:29919 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R29942:29957 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R29942:29957 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R29974:29995 Coquelicot.Rcomplements <> Rdiv_le_1 thm
R30003:30003 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R29974:29995 Coquelicot.Rcomplements <> Rdiv_le_1 thm
R30003:30003 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R30037:30047 Quan.RealAux <> Rdiv_unfold thm
R30037:30047 Quan.RealAux <> Rdiv_unfold thm
R30037:30047 Quan.RealAux <> Rdiv_unfold thm
R30037:30047 Quan.RealAux <> Rdiv_unfold thm
R30037:30047 Quan.RealAux <> Rdiv_unfold thm
R30037:30047 Quan.RealAux <> Rdiv_unfold thm
R30063:30080 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R30063:30080 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R30063:30080 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R30093:30098 Coq.Reals.RIneq <> Rinv_r thm
R30093:30098 Coq.Reals.RIneq <> Rinv_r thm
R30093:30098 Coq.Reals.RIneq <> Rinv_r thm
R30093:30098 Coq.Reals.RIneq <> Rinv_r thm
prf 30172:30183 <> WF_sat_State
R30187:30189 Coq.Init.Datatypes <> nat ind
binder 30185:30185 <> n:240
R30205:30210 Quan.QState <> dstate def
R30212:30212 Quan.QAssert <> n:240 var
binder 30202:30203 <> mu:241
R30218:30230 Quan.QAssert <> State_formula ind
binder 30216:30216 <> F:242
R30249:30252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30235:30243 Quan.QAssert <> sat_State ind
R30248:30248 Quan.QAssert <> F:242 var
R30245:30246 Quan.QAssert <> mu:241 var
R30275:30278 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30269:30272 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R30253:30265 Quan.QState StateMap this proj
R30267:30268 Quan.QAssert <> mu:241 var
R30273:30274 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R30279:30287 Quan.QState <> WF_dstate def
R30289:30290 Quan.QAssert <> mu:241 var
prf 30465:30476 <> WF_dstate_eq
binder 30478:30478 <> n:243
R30498:30503 Quan.QState <> dstate def
R30505:30505 Quan.QAssert <> n:243 var
binder 30490:30491 <> mu:244
binder 30493:30495 <> mu':245
R30525:30527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30509:30517 Quan.QState <> dstate_eq def
R30522:30524 Quan.QAssert <> mu':245 var
R30519:30520 Quan.QAssert <> mu:244 var
R30540:30543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30528:30536 Quan.QState <> WF_dstate def
R30538:30539 Quan.QAssert <> mu:244 var
R30544:30552 Quan.QState <> WF_dstate def
R30554:30556 Quan.QAssert <> mu':245 var
R30573:30581 Quan.QState <> WF_dstate def
R30591:30599 Quan.QState <> dstate_eq def
prf 30708:30726 <> sat_State_dstate_eq
binder 30736:30736 <> n:246
R30741:30753 Quan.QAssert <> State_formula ind
binder 30739:30739 <> D:247
R30765:30770 Quan.QState <> dstate def
R30772:30772 Quan.QAssert <> n:246 var
binder 30757:30758 <> mu:248
binder 30760:30762 <> mu':249
R30792:30794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30776:30784 Quan.QState <> dstate_eq def
R30789:30791 Quan.QAssert <> mu':249 var
R30786:30787 Quan.QAssert <> mu:248 var
R30809:30811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30795:30803 Quan.QAssert <> sat_State ind
R30808:30808 Quan.QAssert <> D:247 var
R30805:30806 Quan.QAssert <> mu:248 var
R30812:30820 Quan.QAssert <> sat_State ind
R30826:30826 Quan.QAssert <> D:247 var
R30822:30824 Quan.QAssert <> mu':249 var
R30886:30890 Quan.QAssert <> sat_F constr
R30886:30890 Quan.QAssert <> sat_F constr
R30900:30911 Quan.QAssert <> WF_dstate_eq thm
R30900:30911 Quan.QAssert <> WF_dstate_eq thm
R30968:30976 Quan.QState <> dstate_eq def
prf 31148:31157 <> d_trace_eq
R31161:31163 Coq.Init.Datatypes <> nat ind
binder 31159:31159 <> n:250
R31182:31187 Quan.QState <> dstate def
R31189:31189 Quan.QAssert <> n:250 var
binder 31175:31176 <> mu:251
binder 31178:31180 <> mu':252
R31209:31212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31193:31201 Quan.QState <> dstate_eq def
R31206:31208 Quan.QAssert <> mu':252 var
R31203:31204 Quan.QAssert <> mu:251 var
R31223:31225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31213:31219 Quan.QState <> d_trace def
R31221:31222 Quan.QAssert <> mu:251 var
R31226:31232 Quan.QState <> d_trace def
R31234:31236 Quan.QAssert <> mu':252 var
R31253:31259 Quan.QState <> d_trace def
R31269:31277 Quan.QState <> dstate_eq def
prf 31343:31359 <> sat_Pro_dstate_eq
binder 31369:31369 <> n:253
R31374:31384 Quan.QAssert <> pro_formula def
binder 31372:31372 <> D:254
R31396:31401 Quan.QState <> dstate def
R31403:31403 Quan.QAssert <> n:253 var
binder 31388:31389 <> mu:255
binder 31391:31393 <> mu':256
R31423:31425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31407:31415 Quan.QState <> dstate_eq def
R31420:31422 Quan.QAssert <> mu':256 var
R31417:31418 Quan.QAssert <> mu:255 var
R31441:31443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31426:31435 Quan.QAssert <> sat_Assert ind
R31440:31440 Quan.QAssert <> D:254 var
R31437:31438 Quan.QAssert <> mu:255 var
R31444:31453 Quan.QAssert <> sat_Assert ind
R31459:31459 Quan.QAssert <> D:254 var
R31455:31457 Quan.QAssert <> mu':256 var
R31536:31555 Quan.QAssert <> distribution_formula def
R31593:31617 Quan.QAssert <> sum_over_list_nil_formula thm
R31593:31617 Quan.QAssert <> sum_over_list_nil_formula thm
R31593:31617 Quan.QAssert <> sum_over_list_nil_formula thm
R31756:31767 Quan.QAssert <> WF_dstate_eq thm
R31756:31767 Quan.QAssert <> WF_dstate_eq thm
R31886:31900 Quan.QAssert <> dstate_eq_trans thm
R31886:31900 Quan.QAssert <> dstate_eq_trans thm
R31917:31929 Quan.QAssert <> dstate_eq_sym thm
R31917:31929 Quan.QAssert <> dstate_eq_sym thm
R31996:32005 Quan.QAssert <> d_trace_eq thm
R31996:32005 Quan.QAssert <> d_trace_eq thm
R31996:32005 Quan.QAssert <> d_trace_eq thm
prf 32049:32066 <> sat_Npro_dstate_eq
binder 32076:32076 <> n:257
R32081:32092 Quan.QAssert <> npro_formula def
binder 32079:32079 <> D:258
R32104:32109 Quan.QState <> dstate def
R32111:32111 Quan.QAssert <> n:257 var
binder 32096:32097 <> mu:259
binder 32099:32101 <> mu':260
R32131:32133 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32115:32123 Quan.QState <> dstate_eq def
R32128:32130 Quan.QAssert <> mu':260 var
R32125:32126 Quan.QAssert <> mu:259 var
R32149:32151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32134:32143 Quan.QAssert <> sat_Assert ind
R32148:32148 Quan.QAssert <> D:258 var
R32145:32146 Quan.QAssert <> mu:259 var
R32152:32161 Quan.QAssert <> sat_Assert ind
R32167:32167 Quan.QAssert <> D:258 var
R32163:32165 Quan.QAssert <> mu':260 var
R32330:32346 Quan.QAssert <> sat_Pro_dstate_eq thm
R32330:32346 Quan.QAssert <> sat_Pro_dstate_eq thm
prf 32403:32422 <> sat_Assert_dstate_eq
binder 32432:32432 <> n:261
R32437:32445 Quan.QAssert <> Assertion ind
binder 32435:32435 <> D:262
R32457:32462 Quan.QState <> dstate def
R32464:32464 Quan.QAssert <> n:261 var
binder 32449:32450 <> mu:263
binder 32452:32454 <> mu':264
R32484:32486 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32468:32476 Quan.QState <> dstate_eq def
R32481:32483 Quan.QAssert <> mu':264 var
R32478:32479 Quan.QAssert <> mu:263 var
R32502:32504 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32487:32496 Quan.QAssert <> sat_Assert ind
R32501:32501 Quan.QAssert <> D:262 var
R32498:32499 Quan.QAssert <> mu:263 var
R32505:32514 Quan.QAssert <> sat_Assert ind
R32520:32520 Quan.QAssert <> D:262 var
R32516:32518 Quan.QAssert <> mu':264 var
R32569:32585 Quan.QAssert <> sat_Pro_dstate_eq thm
R32610:32627 Quan.QAssert <> sat_Npro_dstate_eq thm
R32569:32585 Quan.QAssert <> sat_Pro_dstate_eq thm
R32610:32627 Quan.QAssert <> sat_Npro_dstate_eq thm
prf 32691:32700 <> WF_sat_Pro
R32704:32706 Coq.Init.Datatypes <> nat ind
binder 32702:32702 <> n:265
R32723:32733 Quan.QAssert <> pro_formula def
binder 32720:32721 <> pF:266
R32740:32745 Quan.QState <> dstate def
R32747:32747 Quan.QAssert <> n:265 var
binder 32737:32738 <> mu:267
R32768:32770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32752:32761 Quan.QAssert <> sat_Assert ind
R32766:32767 Quan.QAssert <> pF:266 var
R32763:32764 Quan.QAssert <> mu:267 var
R32793:32796 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R32787:32790 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32771:32783 Quan.QState StateMap this proj
R32785:32786 Quan.QAssert <> mu:267 var
R32791:32792 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R32797:32805 Quan.QState <> WF_dstate def
R32807:32808 Quan.QAssert <> mu:267 var
R32875:32894 Quan.QAssert <> distribution_formula def
R32930:32954 Quan.QAssert <> sum_over_list_nil_formula thm
R32930:32954 Quan.QAssert <> sum_over_list_nil_formula thm
R32930:32954 Quan.QAssert <> sum_over_list_nil_formula thm
prf 33185:33195 <> WF_sat_Npro
R33199:33201 Coq.Init.Datatypes <> nat ind
binder 33197:33197 <> n:268
R33216:33227 Quan.QAssert <> npro_formula def
binder 33213:33214 <> nF:269
R33235:33240 Quan.QState <> dstate def
R33242:33242 Quan.QAssert <> n:268 var
binder 33232:33233 <> mu:270
R33264:33266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33248:33257 Quan.QAssert <> sat_Assert ind
R33262:33263 Quan.QAssert <> nF:269 var
R33259:33260 Quan.QAssert <> mu:270 var
R33289:33292 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R33283:33286 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R33267:33279 Quan.QState StateMap this proj
R33281:33282 Quan.QAssert <> mu:270 var
R33287:33288 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R33293:33301 Quan.QState <> WF_dstate def
R33303:33304 Quan.QAssert <> mu:270 var
R33350:33359 Quan.QAssert <> WF_sat_Pro prfax
R33350:33359 Quan.QAssert <> WF_sat_Pro prfax
prf 33384:33396 <> WF_sat_Assert
R33400:33402 Coq.Init.Datatypes <> nat ind
binder 33398:33398 <> n:271
R33417:33422 Quan.QState <> dstate def
R33424:33424 Quan.QAssert <> n:271 var
binder 33414:33415 <> mu:272
R33430:33438 Quan.QAssert <> Assertion ind
binder 33428:33428 <> D:273
R33459:33461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33443:33452 Quan.QAssert <> sat_Assert ind
R33458:33458 Quan.QAssert <> D:273 var
R33455:33456 Quan.QAssert <> mu:272 var
R33484:33487 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R33478:33481 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R33462:33474 Quan.QState StateMap this proj
R33476:33477 Quan.QAssert <> mu:272 var
R33482:33483 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R33488:33496 Quan.QState <> WF_dstate def
R33498:33499 Quan.QAssert <> mu:272 var
R33545:33554 Quan.QAssert <> WF_sat_Pro prfax
R33545:33554 Quan.QAssert <> WF_sat_Pro prfax
R33578:33588 Quan.QAssert <> WF_sat_Npro thm
R33578:33588 Quan.QAssert <> WF_sat_Npro thm
prf 33611:33623 <> state_eq_aexp
R33627:33629 Coq.Init.Datatypes <> nat ind
binder 33625:33625 <> n:274
R33648:33652 Quan.QState <> state def
R33654:33654 Quan.QAssert <> n:274 var
binder 33641:33642 <> st:275
binder 33644:33646 <> st':276
R33662:33665 Quan.QIMP <> aexp ind
binder 33660:33660 <> a:277
R33689:33691 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33669:33669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33676:33680 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33688:33688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33670:33672 Coq.Init.Datatypes <> fst def
R33674:33675 Quan.QAssert <> st:275 var
R33681:33683 Coq.Init.Datatypes <> fst def
R33685:33687 Quan.QAssert <> st':276 var
R33692:33692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33703:33706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33693:33697 Quan.QIMP <> aeval def
R33702:33702 Quan.QAssert <> a:277 var
R33699:33700 Quan.QAssert <> st:275 var
R33707:33711 Quan.QIMP <> aeval def
R33717:33717 Quan.QAssert <> a:277 var
R33713:33715 Quan.QAssert <> st':276 var
prf 33992:34004 <> state_eq_bexp
R34008:34010 Coq.Init.Datatypes <> nat ind
binder 34006:34006 <> n:278
R34029:34033 Quan.QState <> state def
R34035:34035 Quan.QAssert <> n:278 var
binder 34022:34023 <> st:279
binder 34025:34027 <> st':280
R34041:34044 Quan.QIMP <> bexp ind
binder 34039:34039 <> b:281
R34068:34070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34048:34048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34055:34059 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34067:34067 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34049:34051 Coq.Init.Datatypes <> fst def
R34053:34054 Quan.QAssert <> st:279 var
R34060:34062 Coq.Init.Datatypes <> fst def
R34064:34066 Quan.QAssert <> st':280 var
R34071:34071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34082:34085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34072:34076 Quan.QIMP <> beval def
R34081:34081 Quan.QAssert <> b:281 var
R34078:34079 Quan.QAssert <> st:279 var
R34086:34090 Quan.QIMP <> beval def
R34096:34096 Quan.QAssert <> b:281 var
R34092:34094 Quan.QAssert <> st':280 var
R34211:34223 Quan.QAssert <> state_eq_aexp thm
R34211:34223 Quan.QAssert <> state_eq_aexp thm
R34211:34223 Quan.QAssert <> state_eq_aexp thm
R34211:34223 Quan.QAssert <> state_eq_aexp thm
R34254:34266 Quan.QAssert <> state_eq_aexp thm
R34254:34266 Quan.QAssert <> state_eq_aexp thm
R34254:34266 Quan.QAssert <> state_eq_aexp thm
R34254:34266 Quan.QAssert <> state_eq_aexp thm
R34351:34363 Quan.QAssert <> state_eq_aexp thm
R34351:34363 Quan.QAssert <> state_eq_aexp thm
R34351:34363 Quan.QAssert <> state_eq_aexp thm
R34351:34363 Quan.QAssert <> state_eq_aexp thm
R34392:34404 Quan.QAssert <> state_eq_aexp thm
R34392:34404 Quan.QAssert <> state_eq_aexp thm
R34392:34404 Quan.QAssert <> state_eq_aexp thm
R34392:34404 Quan.QAssert <> state_eq_aexp thm
R34487:34499 Quan.QAssert <> state_eq_aexp thm
R34487:34499 Quan.QAssert <> state_eq_aexp thm
R34487:34499 Quan.QAssert <> state_eq_aexp thm
R34487:34499 Quan.QAssert <> state_eq_aexp thm
R34529:34541 Quan.QAssert <> state_eq_aexp thm
R34529:34541 Quan.QAssert <> state_eq_aexp thm
R34529:34541 Quan.QAssert <> state_eq_aexp thm
R34529:34541 Quan.QAssert <> state_eq_aexp thm
R34624:34636 Quan.QAssert <> state_eq_aexp thm
R34624:34636 Quan.QAssert <> state_eq_aexp thm
R34624:34636 Quan.QAssert <> state_eq_aexp thm
R34624:34636 Quan.QAssert <> state_eq_aexp thm
R34665:34677 Quan.QAssert <> state_eq_aexp thm
R34665:34677 Quan.QAssert <> state_eq_aexp thm
R34665:34677 Quan.QAssert <> state_eq_aexp thm
R34665:34677 Quan.QAssert <> state_eq_aexp thm
prf 34880:34891 <> bexp_Pure_eq
R34895:34897 Coq.Init.Datatypes <> nat ind
binder 34893:34893 <> n:282
R34917:34921 Quan.QState <> state def
R34923:34923 Quan.QAssert <> n:282 var
binder 34910:34911 <> st:283
binder 34913:34915 <> st':284
R34930:34933 Quan.QIMP <> bexp ind
binder 34928:34928 <> b:285
R34939:34939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34966:34970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34940:34940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34951:34954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34941:34945 Quan.QIMP <> beval def
R34950:34950 Quan.QAssert <> b:285 var
R34947:34948 Quan.QAssert <> st:283 var
R34955:34959 Quan.QIMP <> beval def
R34965:34965 Quan.QAssert <> b:285 var
R34961:34963 Quan.QAssert <> st':284 var
R34971:34971 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34987:34991 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35008:35008 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34972:34981 Quan.QAssert <> State_eval def
R34985:34986 Quan.QAssert <> st:283 var
R34983:34983 Quan.QAssert <> b:285 var
R34992:35001 Quan.QAssert <> State_eval def
R35005:35007 Quan.QAssert <> st':284 var
R35003:35003 Quan.QAssert <> b:285 var
R35045:35049 Quan.QIMP <> beval def
R35045:35049 Quan.QIMP <> beval def
prf 35137:35149 <> state_eq_Pure
R35153:35155 Coq.Init.Datatypes <> nat ind
binder 35151:35151 <> n:286
R35169:35180 Quan.QAssert <> Pure_formula ind
binder 35167:35167 <> P:287
R35191:35195 Quan.QState <> state def
R35197:35197 Quan.QAssert <> n:286 var
binder 35184:35185 <> st:288
binder 35187:35189 <> st':289
R35221:35223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35202:35202 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35209:35212 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35220:35220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35203:35205 Coq.Init.Datatypes <> fst def
R35207:35208 Quan.QAssert <> st:288 var
R35213:35215 Coq.Init.Datatypes <> fst def
R35217:35219 Quan.QAssert <> st':289 var
R35224:35224 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35240:35244 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35225:35234 Quan.QAssert <> State_eval def
R35238:35239 Quan.QAssert <> st:288 var
R35236:35236 Quan.QAssert <> P:287 var
R35245:35254 Quan.QAssert <> State_eval def
R35258:35260 Quan.QAssert <> st':289 var
R35256:35256 Quan.QAssert <> P:287 var
R35305:35316 Quan.QAssert <> bexp_Pure_eq thm
R35305:35316 Quan.QAssert <> bexp_Pure_eq thm
R35345:35357 Quan.QAssert <> state_eq_bexp thm
R35345:35357 Quan.QAssert <> state_eq_bexp thm
R35345:35357 Quan.QAssert <> state_eq_bexp thm
R35345:35357 Quan.QAssert <> state_eq_bexp thm
R35463:35477 Quan.QState <> s_update_cstate def
R35575:35575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35591:35592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35594:35594 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35576:35583 Quan.QState <> c_update def
R35575:35575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35591:35592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35594:35594 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35576:35583 Quan.QState <> c_update def
R35652:35653 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35669:35671 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35674:35674 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35654:35661 Quan.QState <> c_update def
R35652:35653 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35669:35671 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35674:35674 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35654:35661 Quan.QState <> c_update def
prf 35728:35741 <> qstate_eq_Qexp
R35755:35758 Quan.QAssert <> QExp ind
binder 35751:35752 <> qs:290
R35765:35767 Coq.Init.Datatypes <> nat ind
binder 35763:35763 <> n:291
R35778:35782 Quan.QState <> state def
R35784:35784 Quan.QAssert <> n:291 var
binder 35771:35772 <> st:292
binder 35774:35776 <> st':293
R35806:35811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35797:35798 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35791:35793 Coq.Init.Datatypes <> snd def
R35795:35796 Quan.QAssert <> st:292 var
R35799:35801 Coq.Init.Datatypes <> snd def
R35803:35805 Quan.QAssert <> st':293 var
R35828:35831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35812:35820 Quan.QAssert <> QExp_eval def
R35826:35827 Quan.QAssert <> st:292 var
R35823:35824 Quan.QAssert <> qs:290 var
R35832:35840 Quan.QAssert <> QExp_eval def
R35846:35848 Quan.QAssert <> st':293 var
R35843:35844 Quan.QAssert <> qs:290 var
prf 36099:36111 <> Mscale_not_0'
R36125:36127 Coq.Init.Datatypes <> nat ind
binder 36121:36121 <> m:294
binder 36123:36123 <> n:295
R36133:36138 Quan.Matrix <> Matrix def
R36140:36140 Quan.QAssert <> m:294 var
R36142:36142 Quan.QAssert <> n:295 var
binder 36131:36131 <> A:296
R36149:36149 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 36146:36146 <> p:297
R36167:36170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36159:36162 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R36155:36157 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R36154:36154 Quan.QAssert <> p:297 var
R36158:36158 Quan.QAssert <> A:296 var
R36163:36166 Quan.Matrix <> Zero def
R36172:36173 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R36171:36171 Quan.QAssert <> A:296 var
R36174:36177 Quan.Matrix <> Zero def
R36195:36197 Coq.Init.Logic <> not def
R36236:36245 Quan.Matrix <> Mscale_0_r thm
R36236:36245 Quan.Matrix <> Mscale_0_r thm
R36236:36245 Quan.Matrix <> Mscale_0_r thm
prf 36304:36322 <> s_seman_scalar_Qexp
R36337:36340 Quan.QAssert <> QExp ind
binder 36334:36335 <> qs:298
R36346:36346 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 36344:36344 <> p:299
R36353:36355 Coq.Init.Datatypes <> nat ind
binder 36351:36351 <> n:300
R36362:36366 Quan.QState <> state def
R36368:36368 Quan.QAssert <> n:300 var
binder 36359:36360 <> st:301
R36378:36381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36373:36373 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R36375:36376 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R36374:36374 Quan.QAssert <> p:299 var
R36374:36374 Quan.QAssert <> p:299 var
R36393:36397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36446:36446 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36382:36389 Quan.QState <> WF_state def
R36391:36392 Quan.QAssert <> st:301 var
R36413:36417 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R36398:36406 Quan.QAssert <> QExp_eval def
R36411:36412 Quan.QAssert <> st:301 var
R36408:36409 Quan.QAssert <> qs:298 var
R36418:36426 Quan.QAssert <> QExp_eval def
R36432:36439 Quan.QState <> s_scalar def
R36443:36444 Quan.QAssert <> st:301 var
R36441:36441 Quan.QAssert <> p:299 var
R36428:36429 Quan.QAssert <> qs:298 var
R36565:36579 Quan.Matrix <> trace_mult_dist thm
R36565:36579 Quan.Matrix <> trace_mult_dist thm
R36565:36579 Quan.Matrix <> trace_mult_dist thm
R36596:36606 Quan.Complex <> Cdiv_unfold thm
R36596:36606 Quan.Complex <> Cdiv_unfold thm
R36596:36606 Quan.Complex <> Cdiv_unfold thm
R36623:36634 Quan.Matrix <> Mscale_assoc thm
R36623:36634 Quan.Matrix <> Mscale_assoc thm
R36623:36634 Quan.Matrix <> Mscale_assoc thm
R36653:36663 Quan.Complex <> Cmult_assoc thm
R36653:36663 Quan.Complex <> Cmult_assoc thm
R36653:36663 Quan.Complex <> Cmult_assoc thm
R36680:36694 Quan.Complex <> Cinv_mult_distr thm
R36680:36694 Quan.Complex <> Cinv_mult_distr thm
R36680:36694 Quan.Complex <> Cinv_mult_distr thm
R36680:36694 Quan.Complex <> Cinv_mult_distr thm
R36680:36694 Quan.Complex <> Cinv_mult_distr thm
R36714:36724 Quan.Complex <> Cmult_assoc thm
R36714:36724 Quan.Complex <> Cmult_assoc thm
R36714:36724 Quan.Complex <> Cmult_assoc thm
R36762:36765 Quan.Complex <> RtoC def
R36741:36750 Quan.Complex <> Cmult_comm thm
R36762:36765 Quan.Complex <> RtoC def
R36741:36750 Quan.Complex <> Cmult_comm thm
R36762:36765 Quan.Complex <> RtoC def
R36741:36750 Quan.Complex <> Cmult_comm thm
R36808:36811 Quan.Complex <> RtoC def
R36786:36796 Quan.Complex <> Cmult_assoc thm
R36808:36811 Quan.Complex <> RtoC def
R36786:36796 Quan.Complex <> Cmult_assoc thm
R36808:36811 Quan.Complex <> RtoC def
R36786:36796 Quan.Complex <> Cmult_assoc thm
R36832:36837 Quan.Complex <> Cinv_l thm
R36832:36837 Quan.Complex <> Cinv_l thm
R36832:36837 Quan.Complex <> Cinv_l thm
R36832:36837 Quan.Complex <> Cinv_l thm
R36854:36864 Quan.Complex <> Cmult_assoc thm
R36854:36864 Quan.Complex <> Cmult_assoc thm
R36854:36864 Quan.Complex <> Cmult_assoc thm
R36881:36889 Quan.Complex <> Cmult_1_l thm
R36881:36889 Quan.Complex <> Cmult_1_l thm
R36881:36889 Quan.Complex <> Cmult_1_l thm
R36922:36929 Quan.Complex <> RtoC_neq thm
R36922:36929 Quan.Complex <> RtoC_neq thm
R36984:36991 Quan.Complex <> RtoC_neq thm
R36984:36991 Quan.Complex <> RtoC_neq thm
R37046:37058 Quan.QState <> WF_state_gt_0 thm
R37046:37058 Quan.QState <> WF_state_gt_0 thm
R37093:37095 Coq.Init.Logic <> not def
R37120:37126 Quan.QState <> s_trace def
R37184:37189 Quan.Complex <> Cmod_0 thm
R37184:37189 Quan.Complex <> Cmod_0 thm
R37184:37189 Quan.Complex <> Cmod_0 thm
R37451:37465 Quan.Matrix <> trace_mult_dist thm
R37451:37465 Quan.Matrix <> trace_mult_dist thm
R37451:37465 Quan.Matrix <> trace_mult_dist thm
R37482:37492 Quan.Complex <> Cdiv_unfold thm
R37482:37492 Quan.Complex <> Cdiv_unfold thm
R37482:37492 Quan.Complex <> Cdiv_unfold thm
R37509:37520 Quan.Matrix <> Mscale_assoc thm
R37509:37520 Quan.Matrix <> Mscale_assoc thm
R37509:37520 Quan.Matrix <> Mscale_assoc thm
R37539:37549 Quan.Complex <> Cmult_assoc thm
R37539:37549 Quan.Complex <> Cmult_assoc thm
R37539:37549 Quan.Complex <> Cmult_assoc thm
R37566:37580 Quan.Complex <> Cinv_mult_distr thm
R37566:37580 Quan.Complex <> Cinv_mult_distr thm
R37566:37580 Quan.Complex <> Cinv_mult_distr thm
R37566:37580 Quan.Complex <> Cinv_mult_distr thm
R37566:37580 Quan.Complex <> Cinv_mult_distr thm
R37600:37610 Quan.Complex <> Cmult_assoc thm
R37600:37610 Quan.Complex <> Cmult_assoc thm
R37600:37610 Quan.Complex <> Cmult_assoc thm
R37648:37651 Quan.Complex <> RtoC def
R37627:37636 Quan.Complex <> Cmult_comm thm
R37648:37651 Quan.Complex <> RtoC def
R37627:37636 Quan.Complex <> Cmult_comm thm
R37648:37651 Quan.Complex <> RtoC def
R37627:37636 Quan.Complex <> Cmult_comm thm
R37694:37697 Quan.Complex <> RtoC def
R37672:37682 Quan.Complex <> Cmult_assoc thm
R37694:37697 Quan.Complex <> RtoC def
R37672:37682 Quan.Complex <> Cmult_assoc thm
R37694:37697 Quan.Complex <> RtoC def
R37672:37682 Quan.Complex <> Cmult_assoc thm
R37718:37723 Quan.Complex <> Cinv_l thm
R37718:37723 Quan.Complex <> Cinv_l thm
R37718:37723 Quan.Complex <> Cinv_l thm
R37718:37723 Quan.Complex <> Cinv_l thm
R37740:37750 Quan.Complex <> Cmult_assoc thm
R37740:37750 Quan.Complex <> Cmult_assoc thm
R37740:37750 Quan.Complex <> Cmult_assoc thm
R37767:37775 Quan.Complex <> Cmult_1_l thm
R37767:37775 Quan.Complex <> Cmult_1_l thm
R37767:37775 Quan.Complex <> Cmult_1_l thm
R37807:37814 Quan.Complex <> RtoC_neq thm
R37807:37814 Quan.Complex <> RtoC_neq thm
R37869:37876 Quan.Complex <> RtoC_neq thm
R37869:37876 Quan.Complex <> RtoC_neq thm
R37931:37943 Quan.QState <> WF_state_gt_0 thm
R37931:37943 Quan.QState <> WF_state_gt_0 thm
R37978:37980 Coq.Init.Logic <> not def
R38005:38011 Quan.QState <> s_trace def
R38064:38069 Quan.Complex <> Cmod_0 thm
R38064:38069 Quan.Complex <> Cmod_0 thm
R38064:38069 Quan.Complex <> Cmod_0 thm
prf 38314:38327 <> s_seman_scalar
R38340:38352 Quan.QAssert <> State_formula ind
binder 38338:38338 <> F:302
R38358:38358 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 38356:38356 <> p:303
binder 38361:38361 <> n:304
R38368:38372 Quan.QState <> state def
R38374:38374 Quan.QAssert <> n:304 var
binder 38365:38366 <> st:305
R38384:38386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38379:38379 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R38381:38382 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R38380:38380 Quan.QAssert <> p:303 var
R38380:38380 Quan.QAssert <> p:303 var
R38387:38387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38399:38403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38452:38452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38388:38395 Quan.QState <> WF_state def
R38397:38398 Quan.QAssert <> st:305 var
R38419:38423 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R38404:38413 Quan.QAssert <> State_eval def
R38417:38418 Quan.QAssert <> st:305 var
R38415:38415 Quan.QAssert <> F:302 var
R38424:38433 Quan.QAssert <> State_eval def
R38438:38445 Quan.QState <> s_scalar def
R38449:38450 Quan.QAssert <> st:305 var
R38447:38447 Quan.QAssert <> p:303 var
R38435:38435 Quan.QAssert <> F:302 var
R38502:38514 Quan.QAssert <> state_eq_Pure thm
R38523:38530 Quan.QState <> s_scalar def
R38502:38514 Quan.QAssert <> state_eq_Pure thm
R38523:38530 Quan.QState <> s_scalar def
R38586:38598 Quan.QAssert <> state_eq_Pure thm
R38604:38611 Quan.QState <> s_scalar def
R38586:38598 Quan.QAssert <> state_eq_Pure thm
R38604:38611 Quan.QState <> s_scalar def
R38663:38681 Quan.QAssert <> s_seman_scalar_Qexp thm
R38663:38681 Quan.QAssert <> s_seman_scalar_Qexp thm
R39043:39045 Coq.Init.Logic <> not def
R39068:39070 Coq.Init.Logic <> not def
R39094:39103 Quan.QAssert <> State_eval def
R39094:39103 Quan.QAssert <> State_eval def
R39204:39213 Quan.QAssert <> State_eval def
R39218:39225 Quan.QState <> s_scalar def
R39204:39213 Quan.QAssert <> State_eval def
R39218:39225 Quan.QState <> s_scalar def
R39370:39384 Quan.QState <> s_update_cstate def
R39421:39428 Quan.QState <> s_scalar def
R39455:39455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39485:39486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39488:39488 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39456:39463 Quan.QState <> c_update def
R39468:39472 Quan.QIMP <> aeval def
R39474:39474 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39476:39477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39479:39479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39518:39525 Quan.QState <> s_scalar def
R39455:39455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39485:39486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39488:39488 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39456:39463 Quan.QState <> c_update def
R39468:39472 Quan.QIMP <> aeval def
R39474:39474 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39476:39477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39479:39479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39558:39559 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39584:39584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39544:39548 Quan.QIMP <> aeval def
R39550:39550 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39552:39553 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39555:39555 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39561:39565 Quan.QIMP <> aeval def
R39569:39569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39571:39573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39580:39581 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39575:39578 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R39558:39559 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39584:39584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39544:39548 Quan.QIMP <> aeval def
R39550:39550 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39552:39553 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39555:39555 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39561:39565 Quan.QIMP <> aeval def
R39569:39569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39571:39573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39580:39581 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39575:39578 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R39596:39608 Quan.QAssert <> state_eq_aexp thm
R39596:39608 Quan.QAssert <> state_eq_aexp thm
R39674:39681 Quan.QState <> WF_state def
R39700:39707 Quan.QState <> WF_state def
R39753:39759 Quan.QState <> s_trace def
R39790:39797 Quan.QState <> s_scalar def
R39840:39840 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39827:39831 Quan.QIMP <> aeval def
R39833:39833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39835:39835 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39837:39837 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39843:39847 Quan.QIMP <> aeval def
R39851:39851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39853:39854 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39861:39861 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39856:39859 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R39840:39840 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39827:39831 Quan.QIMP <> aeval def
R39833:39833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39835:39835 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39837:39837 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39843:39847 Quan.QIMP <> aeval def
R39851:39851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39853:39854 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39861:39861 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39856:39859 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R39876:39888 Quan.QAssert <> state_eq_aexp thm
R39876:39888 Quan.QAssert <> state_eq_aexp thm
R39941:39948 Quan.QState <> s_scalar def
R39989:39989 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40024:40026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40028:40028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39990:39997 Quan.QState <> c_update def
R40002:40006 Quan.QIMP <> aeval def
R40008:40008 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40010:40011 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40013:40013 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39989:39989 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40024:40026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40028:40028 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39990:39997 Quan.QState <> c_update def
R40002:40006 Quan.QIMP <> aeval def
R40008:40008 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40010:40011 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40013:40013 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40082:40089 Quan.QState <> WF_state def
R40108:40115 Quan.QState <> WF_state def
prf 40189:40207 <> d_seman_scalar_Qexp
R40221:40233 Quan.QAssert <> State_formula ind
binder 40219:40219 <> F:306
R40239:40239 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 40237:40237 <> p:307
R40246:40248 Coq.Init.Datatypes <> nat ind
binder 40244:40244 <> n:308
R40255:40258 Coq.Init.Datatypes <> list ind
R40267:40269 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40261:40266 Quan.QState <> cstate def
R40270:40275 Quan.QState <> qstate def
R40277:40277 Quan.QAssert <> n:308 var
binder 40252:40253 <> mu:309
R40288:40291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40283:40283 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R40285:40286 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R40284:40284 Quan.QAssert <> p:307 var
R40284:40284 Quan.QAssert <> p:307 var
R40308:40312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40412:40412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40292:40304 Quan.QState <> WF_dstate_aux ind
R40306:40307 Quan.QAssert <> mu:309 var
R40335:40337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40313:40329 Quan.QAssert <> State_eval_dstate def
R40333:40334 Quan.QAssert <> mu:309 var
R40331:40331 Quan.QAssert <> F:306 var
R40339:40355 Quan.QAssert <> State_eval_dstate def
R40357:40357 Quan.QAssert <> n:308 var
R40359:40359 Quan.QAssert <> F:306 var
R40363:40378 Quan.QState StateMap.Raw map def
R40409:40410 Quan.QAssert <> mu:309 var
R40389:40394 Quan.QState <> qstate def
R40396:40396 Quan.QAssert <> n:308 var
binder 40385:40385 <> x:310
R40402:40405 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R40401:40401 Quan.QAssert <> p:307 var
R40406:40406 Quan.QAssert <> x:310 var
R40533:40542 Quan.QAssert <> State_eval def
R40548:40555 Quan.QState <> s_scalar def
R40559:40559 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40561:40562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40564:40564 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40533:40542 Quan.QAssert <> State_eval def
R40548:40555 Quan.QState <> s_scalar def
R40559:40559 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40561:40562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40564:40564 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40582:40595 Quan.QAssert <> s_seman_scalar thm
R40582:40595 Quan.QAssert <> s_seman_scalar thm
R40672:40679 Quan.QState <> s_scalar def
R40769:40778 Quan.QAssert <> State_eval def
R40783:40790 Quan.QState <> s_scalar def
R40794:40794 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40796:40797 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40799:40799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40769:40778 Quan.QAssert <> State_eval def
R40783:40790 Quan.QState <> s_scalar def
R40794:40794 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40796:40797 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40799:40799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40817:40830 Quan.QAssert <> s_seman_scalar thm
R40817:40830 Quan.QAssert <> s_seman_scalar thm
R40907:40914 Quan.QState <> s_scalar def
R40971:40987 Quan.QAssert <> State_eval_dstate def
R41001:41016 Quan.QState StateMap.Raw map def
R41066:41069 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41058:41058 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41061:41062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41065:41065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41027:41032 Quan.QState <> qstate def
binder 41023:41023 <> x:311
R41040:41043 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R41044:41044 Quan.QAssert <> x:311 var
R40971:40987 Quan.QAssert <> State_eval_dstate def
R41001:41016 Quan.QState StateMap.Raw map def
R41066:41069 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41058:41058 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41061:41062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41065:41065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41027:41032 Quan.QState <> qstate def
binder 41023:41023 <> x:312
R41040:41043 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R41044:41044 Quan.QAssert <> x:312 var
prf 41249:41262 <> d_seman_scalar
binder 41272:41272 <> n:313
R41277:41277 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 41275:41275 <> p:314
R41284:41289 Quan.QState <> dstate def
R41291:41291 Quan.QAssert <> n:313 var
binder 41281:41282 <> mu:315
R41297:41309 Quan.QAssert <> State_formula ind
binder 41295:41295 <> F:316
R41319:41321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41314:41314 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R41316:41317 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R41315:41315 Quan.QAssert <> p:314 var
R41315:41315 Quan.QAssert <> p:314 var
R41336:41339 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41322:41330 Quan.QAssert <> sat_State ind
R41335:41335 Quan.QAssert <> F:316 var
R41332:41333 Quan.QAssert <> mu:315 var
R41340:41348 Quan.QAssert <> sat_State ind
R41367:41367 Quan.QAssert <> F:316 var
R41352:41359 Quan.QState <> d_scalar def
R41363:41364 Quan.QAssert <> mu:315 var
R41361:41361 Quan.QAssert <> p:314 var
R41433:41440 Quan.QState <> d_scalar def
R41505:41509 Quan.QAssert <> sat_F constr
R41505:41509 Quan.QAssert <> sat_F constr
R41526:41536 Quan.QState <> WF_d_scalar thm
R41526:41536 Quan.QState <> WF_d_scalar thm
R41581:41599 Quan.QAssert <> d_seman_scalar_Qexp thm
R41581:41599 Quan.QAssert <> d_seman_scalar_Qexp thm
R41627:41635 Quan.QState <> WF_dstate def
R41709:41722 Coq.Logic.Classical_Prop <> <> lib
prf 41733:41743 <> Mplus_not_0
R41758:41760 Coq.Init.Datatypes <> nat ind
binder 41754:41754 <> m:317
binder 41756:41756 <> n:318
R41768:41773 Quan.Matrix <> Matrix def
R41775:41775 Quan.QAssert <> m:317 var
R41777:41777 Quan.QAssert <> n:318 var
binder 41764:41764 <> A:319
binder 41766:41766 <> B:320
R41795:41799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41822:41822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41787:41790 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R41782:41785 Quan.Matrix <> ::matrix_scope:x_'.+'_x not
R41781:41781 Quan.QAssert <> A:319 var
R41786:41786 Quan.QAssert <> B:320 var
R41791:41794 Quan.Matrix <> Zero def
R41809:41812 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R41801:41804 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R41800:41800 Quan.QAssert <> A:319 var
R41805:41808 Quan.Matrix <> Zero def
R41814:41817 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R41813:41813 Quan.QAssert <> B:320 var
R41818:41821 Quan.Matrix <> Zero def
R41841:41843 Coq.Init.Logic <> not def
R41867:41870 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R41862:41862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41863:41866 Quan.Matrix <> Zero def
R41872:41873 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R41874:41877 Quan.Matrix <> Zero def
R41867:41870 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R41862:41862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41863:41866 Quan.Matrix <> Zero def
R41872:41873 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R41874:41877 Quan.Matrix <> Zero def
R41896:41902 Coq.Logic.Classical_Prop <> classic prfax
R41896:41902 Coq.Logic.Classical_Prop <> classic prfax
R41998:42006 Quan.Matrix <> Mplus_0_l thm
R41998:42006 Quan.Matrix <> Mplus_0_l thm
prf 42054:42065 <> d_app_mu_nil
R42080:42082 Coq.Init.Datatypes <> nat ind
binder 42076:42076 <> n:321
R42094:42099 Quan.QState <> dstate def
R42101:42101 Quan.QAssert <> n:321 var
binder 42086:42087 <> mu:322
binder 42089:42091 <> mu':323
R42128:42132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42124:42125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42107:42119 Quan.QState StateMap this proj
R42121:42123 Quan.QAssert <> mu':323 var
R42126:42127 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R42161:42163 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42133:42145 Quan.QState StateMap this proj
R42148:42152 Quan.QState <> d_app def
R42157:42159 Quan.QAssert <> mu':323 var
R42154:42155 Quan.QAssert <> mu:322 var
R42164:42176 Quan.QState StateMap this proj
R42178:42179 Quan.QAssert <> mu:322 var
R42264:42274 Quan.QState <> map2_r_refl thm
R42264:42274 Quan.QState <> map2_r_refl thm
R42264:42274 Quan.QState <> map2_r_refl thm
R42370:42380 Quan.QState <> map2_l_refl thm
R42370:42380 Quan.QState <> map2_l_refl thm
R42370:42380 Quan.QState <> map2_l_refl thm
prf 42429:42436 <> map2_nil
binder 42445:42445 <> n:324
R42451:42454 Coq.Init.Datatypes <> list ind
R42463:42464 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42457:42462 Quan.QState <> cstate def
R42465:42470 Quan.QState <> qstate def
R42472:42472 Quan.QAssert <> n:324 var
binder 42448:42449 <> mu:325
R42513:42516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42479:42495 Quan.QState StateMap.Raw map2 def
R42511:42512 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R42508:42509 Quan.QAssert <> mu:325 var
R42497:42506 Quan.QState <> option_app def
R42517:42535 Quan.QState StateMap.Raw map2_l def
R42548:42549 Quan.QAssert <> mu:325 var
R42537:42546 Quan.QState <> option_app def
prf 42667:42676 <> Rplus_le_1
R42692:42692 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 42686:42687 <> r1:326
binder 42689:42690 <> r2:327
R42700:42701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42698:42698 Coq.Reals.Rdefinitions <> ::R_scope:x_'>'_x not
R42696:42697 Quan.QAssert <> r1:326 var
R42710:42712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42707:42708 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R42704:42704 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R42702:42703 Quan.QAssert <> r1:326 var
R42705:42706 Quan.QAssert <> r2:327 var
R42715:42716 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R42713:42714 Quan.QAssert <> r2:327 var
prf 42760:42777 <> map2_scale_not_nil
binder 42787:42787 <> n:328
R42792:42792 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 42790:42790 <> p:329
R42800:42803 Coq.Init.Datatypes <> list ind
R42812:42814 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42806:42811 Quan.QState <> cstate def
R42815:42820 Quan.QState <> qstate def
R42822:42822 Quan.QAssert <> n:328 var
binder 42796:42797 <> mu:330
R42836:42839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42831:42832 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R42829:42830 Quan.QAssert <> mu:330 var
R42833:42835 Coq.Init.Datatypes <> nil constr
R42840:42840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42844:42849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42842:42842 Coq.Reals.Rdefinitions <> ::R_scope:x_'>'_x not
R42841:42841 Quan.QAssert <> p:329 var
R42917:42920 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R42850:42865 Quan.QState StateMap.Raw map def
R42915:42916 Quan.QAssert <> mu:330 var
R42876:42881 Quan.QState <> qstate def
R42883:42883 Quan.QAssert <> n:328 var
binder 42872:42872 <> x:331
R42888:42892 Quan.Matrix <> scale def
R42896:42896 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R42897:42897 Quan.QAssert <> n:328 var
R42902:42902 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R42903:42903 Quan.QAssert <> n:328 var
R42906:42906 Quan.QAssert <> p:329 var
R42908:42908 Quan.QAssert <> x:331 var
R42921:42922 Coq.Lists.List ListNotations ::list_scope:'['_']' not
