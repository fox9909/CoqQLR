DIGEST a22e5ebc9cc079bbf1177ff28d2f144a
FQuan.QAssert
R15:19 Coq.Reals.Reals <> <> lib
R37:54 Coquelicot.Complex <> <> lib
R72:85 Coq.Strings.String <> <> lib
R103:112 Coq.Lists.List <> <> lib
R131:148 Coq.Init.Datatypes <> <> lib
R175:183 Coq.Bool.Bool <> <> lib
R210:220 Coq.Arith.Arith <> <> lib
R247:257 Coq.Arith.EqNat <> <> lib
R284:297 Coq.Arith.PeanoNat <> <> lib
R307:309 Coq.Arith.PeanoNat Nat <> mod
R336:338 Coq.micromega.Lia <> <> lib
R367:370 Quan.QIMP <> <> lib
R398:403 Quan.Matrix <> <> lib
R431:437 Quan.Quantum <> <> lib
R465:470 Quan.QState <> <> lib
R488:503 Quan.Basic_Supplement <> <> lib
ind 597:608 <> Pure_formula
constr 618:622 <> PBexp
constr 634:640 <> PUniver
R627:630 Quan.QIMP <> bexp ind
binder 625:625 <> b:3
R644:646 Coq.Init.Datatypes <> nat ind
binder 642:642 <> i:4
R653:664 Quan.QAssert <> Pure_formula:1 ind
binder 650:650 <> P:5
ind 679:682 <> QExp
constr 695:700 <> QExp_s
constr 741:746 <> QExp_t
R707:709 Coq.Init.Datatypes <> nat ind
binder 703:703 <> s:8
binder 705:705 <> e:9
R716:721 Quan.Matrix <> Vector abbrev
R725:726 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R730:730 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R728:728 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R727:727 Quan.QAssert <> e:9 var
R729:729 Quan.QAssert <> s:8 var
binder 713:713 <> v:10
R735:738 Quan.QAssert <> QExp:6 ind
R757:760 Quan.QAssert <> QExp:6 ind
binder 749:751 <> qs1:11
binder 753:755 <> qs2:12
R765:768 Quan.QAssert <> QExp:6 ind
ind 782:794 <> State_formula
constr 805:809 <> SPure
constr 830:834 <> SQuan
constr 847:851 <> SOdot
constr 876:879 <> SAnd
constr 904:907 <> SNot
constr 928:935 <> Assn_sub
R814:825 Quan.QAssert <> Pure_formula ind
binder 812:812 <> P:15
R840:843 Quan.QAssert <> QExp ind
binder 837:838 <> qs:16
R860:872 Quan.QAssert <> State_formula:13 ind
binder 854:855 <> F1:17
binder 857:858 <> F2:18
R888:900 Quan.QAssert <> State_formula:13 ind
binder 882:883 <> F1:19
binder 885:886 <> F2:20
R912:924 Quan.QAssert <> State_formula:13 ind
binder 910:910 <> F:21
R940:942 Coq.Init.Datatypes <> nat ind
binder 938:938 <> i:22
R948:951 Quan.QIMP <> aexp ind
binder 946:946 <> a:23
R957:969 Quan.QAssert <> State_formula:13 ind
binder 955:955 <> F:24
ind 984:1004 <> probabilistic_formula
constr 1017:1022 <> PState
constr 1049:1054 <> POplus
R1027:1027 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 1025:1025 <> p:27
R1033:1045 Quan.QAssert <> State_formula ind
binder 1031:1031 <> F:28
R1066:1086 Quan.QAssert <> probabilistic_formula:25 ind
binder 1057:1059 <> pF1:29
binder 1061:1063 <> pF2:30
ind 1101:1123 <> unprobabilistic_formula
constr 1134:1139 <> NState
constr 1161:1166 <> NOplus
R1145:1157 Quan.QAssert <> State_formula ind
binder 1142:1142 <> F:33
R1177:1199 Quan.QAssert <> unprobabilistic_formula:31 ind
binder 1169:1171 <> nF1:34
binder 1173:1175 <> nF2:35
def 1239:1242 <> mode
R1249:1269 Quan.QAssert <> probabilistic_formula ind
binder 1245:1246 <> pF:36
R1282:1283 Quan.QAssert <> pF:36 var
R1294:1299 Quan.QAssert <> PState constr
R1312:1317 Quan.QAssert <> POplus constr
R1329:1329 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R1338:1342 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R1351:1351 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R1330:1333 Quan.QAssert <> mode:37 def
R1343:1346 Quan.QAssert <> mode:37 def
ind 1371:1379 <> Assertion
constr 1391:1394 <> APro
constr 1425:1429 <> ANpro
R1400:1420 Quan.QAssert <> probabilistic_formula ind
binder 1397:1398 <> pF:41
R1435:1457 Quan.QAssert <> unprobabilistic_formula ind
binder 1432:1433 <> nF:42
R1489:1526 Quan.QAssert <> PBexp constr
R1529:1575 Quan.QAssert <> SPure constr
R1578:1616 Quan.QAssert <> SQuan constr
R1680:1738 Quan.QAssert <> NState constr
R1741:1794 Quan.QAssert <> ANpro constr
R2168:2174 Quan.QAssert <> PUniver constr
not 2148:2148 <> ::assert_scope:'univer'_x_x
R2307:2312 Quan.QAssert <> QExp_s constr
not 2286:2286 <> ::assert_scope:'|'_x_'>['_x_'-'_x_']'
R2371:2376 Quan.QAssert <> QExp_t constr
not 2357:2357 <> ::assert_scope:x_'⊗*'_x
R2428:2431 Quan.QAssert <> SNot constr
not 2418:2418 <> ::assert_scope:'~'_x
R2477:2480 Quan.QAssert <> SAnd constr
not 2462:2462 <> ::assert_scope:x_'/\'_x
R2532:2536 Quan.QAssert <> SOdot constr
not 2515:2515 <> ::assert_scope:x_'⊙'_x
R2603:2610 Quan.QAssert <> Assn_sub constr
not 2581:2581 <> ::assert_scope:x_'['_x_'|->'_x_']'
R2674:2679 Quan.QAssert <> PState constr
not 2661:2661 <> ::assert_scope:x_'·'_x
R2733:2738 Quan.QAssert <> POplus constr
not 2719:2719 <> ::assert_scope:x_'⊕p'_x
R2790:2795 Quan.QAssert <> NOplus constr
not 2775:2775 <> ::assert_scope:x_'⊕np'_x
R2950:2953 Quan.QIMP <> <> mod
def 2965:2973 <> Free_pure
R2979:2990 Quan.QAssert <> Pure_formula ind
binder 2976:2976 <> P:43
R2995:2998 Quan.QIMP <> CSet def
R3011:3011 Quan.QAssert <> P:43 var
R3026:3030 Quan.QAssert <> PBexp constr
R3036:3044 Quan.QIMP <> Free_bexp def
R3056:3062 Quan.QAssert <> PUniver constr
R3072:3080 Quan.QAssert <> Free_pure:44 def
def 3102:3110 <> Free_Qexp
R3117:3120 Quan.QAssert <> QExp ind
binder 3113:3114 <> qs:46
R3125:3128 Quan.QState <> QSet def
R3141:3142 Quan.QAssert <> qs:46 var
R3155:3160 Quan.QAssert <> QExp_s constr
R3171:3181 Quan.QState <> Qsys_to_Set def
R3193:3198 Quan.QAssert <> QExp_t constr
R3211:3220 Quan.QState NSet union def
R3239:3247 Quan.QAssert <> Free_Qexp:47 def
R3223:3231 Quan.QAssert <> Free_Qexp:47 def
def 3302:3311 <> Free_state
R3317:3329 Quan.QAssert <> State_formula ind
binder 3314:3314 <> F:49
R3339:3341 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3335:3338 Quan.QIMP <> CSet def
R3342:3345 Quan.QState <> QSet def
R3358:3358 Quan.QAssert <> F:49 var
R3371:3375 Quan.QAssert <> SPure constr
R3382:3382 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3394:3396 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3407:3407 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3383:3391 Quan.QAssert <> Free_pure def
R3397:3406 Quan.QState NSet empty def
R3414:3418 Quan.QAssert <> SQuan constr
R3425:3425 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3436:3437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3450:3450 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3426:3435 Quan.QState NSet empty def
R3438:3446 Quan.QAssert <> Free_Qexp def
R3457:3461 Quan.QAssert <> SOdot constr
R3472:3472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3526:3527 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3583:3583 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3473:3482 Quan.QState NSet union def
R3507:3509 Coq.Init.Datatypes <> fst def
R3511:3520 Quan.QAssert <> Free_state:50 def
R3485:3487 Coq.Init.Datatypes <> fst def
R3490:3499 Quan.QAssert <> Free_state:50 def
R3528:3537 Quan.QState NSet union def
R3563:3565 Coq.Init.Datatypes <> snd def
R3568:3577 Quan.QAssert <> Free_state:50 def
R3540:3542 Coq.Init.Datatypes <> snd def
R3545:3554 Quan.QAssert <> Free_state:50 def
R3590:3593 Quan.QAssert <> SAnd constr
R3604:3604 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3658:3659 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3715:3715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3605:3614 Quan.QState NSet union def
R3639:3641 Coq.Init.Datatypes <> fst def
R3643:3652 Quan.QAssert <> Free_state:50 def
R3617:3619 Coq.Init.Datatypes <> fst def
R3622:3631 Quan.QAssert <> Free_state:50 def
R3660:3669 Quan.QState NSet union def
R3695:3697 Coq.Init.Datatypes <> snd def
R3700:3709 Quan.QAssert <> Free_state:50 def
R3672:3674 Coq.Init.Datatypes <> snd def
R3677:3686 Quan.QAssert <> Free_state:50 def
R3722:3725 Quan.QAssert <> SNot constr
R3732:3741 Quan.QAssert <> Free_state:50 def
R3752:3759 Quan.QAssert <> Assn_sub constr
R3770:3779 Quan.QAssert <> Free_state:50 def
R3781:3781 Quan.QAssert <> F:49 var
def 3800:3807 <> Free_pro
R3813:3833 Quan.QAssert <> probabilistic_formula ind
binder 3809:3810 <> pF:52
R3842:3844 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3838:3841 Quan.QIMP <> CSet def
R3845:3848 Quan.QState <> QSet def
R3862:3863 Quan.QAssert <> pF:52 var
R3873:3878 Quan.QAssert <> PState constr
R3887:3896 Quan.QAssert <> Free_state def
R3903:3908 Quan.QAssert <> POplus constr
R3921:3921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3973:3993 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4047:4047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3922:3931 Quan.QState NSet union def
R3955:3957 Coq.Init.Datatypes <> fst def
R3959:3966 Quan.QAssert <> Free_pro:53 def
R3934:3936 Coq.Init.Datatypes <> fst def
R3939:3946 Quan.QAssert <> Free_pro:53 def
R3994:4003 Quan.QState NSet union def
R4028:4030 Coq.Init.Datatypes <> snd def
R4033:4040 Quan.QAssert <> Free_pro:53 def
R4006:4008 Coq.Init.Datatypes <> snd def
R4011:4018 Quan.QAssert <> Free_pro:53 def
def 4066:4074 <> Free_npro
R4080:4102 Quan.QAssert <> unprobabilistic_formula ind
binder 4076:4077 <> nF:55
R4111:4113 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4107:4110 Quan.QIMP <> CSet def
R4114:4117 Quan.QState <> QSet def
R4133:4134 Quan.QAssert <> nF:55 var
R4146:4151 Quan.QAssert <> NState constr
R4158:4167 Quan.QAssert <> Free_state def
R4176:4181 Quan.QAssert <> NOplus constr
R4194:4194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4248:4272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4328:4328 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4195:4204 Quan.QState NSet union def
R4229:4231 Coq.Init.Datatypes <> fst def
R4233:4241 Quan.QAssert <> Free_npro:56 def
R4207:4209 Coq.Init.Datatypes <> fst def
R4212:4220 Quan.QAssert <> Free_npro:56 def
R4273:4282 Quan.QState NSet union def
R4308:4310 Coq.Init.Datatypes <> snd def
R4313:4321 Quan.QAssert <> Free_npro:56 def
R4285:4287 Coq.Init.Datatypes <> snd def
R4290:4298 Quan.QAssert <> Free_npro:56 def
def 4351:4354 <> Free
R4360:4368 Quan.QAssert <> Assertion ind
binder 4357:4357 <> d:58
R4378:4380 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4374:4377 Quan.QIMP <> CSet def
R4381:4384 Quan.QState <> QSet def
R4397:4397 Quan.QAssert <> d:58 var
R4410:4413 Quan.QAssert <> APro constr
R4421:4428 Quan.QAssert <> Free_pro def
R4438:4442 Quan.QAssert <> ANpro constr
R4448:4456 Quan.QAssert <> Free_npro def
def 4679:4687 <> Pure_eval
R4691:4693 Coq.Init.Datatypes <> nat ind
binder 4689:4689 <> n:60
R4700:4711 Quan.QAssert <> Pure_formula ind
binder 4697:4698 <> pf:61
R4718:4722 Quan.QState <> state def
R4724:4724 Quan.QAssert <> n:60 var
binder 4715:4716 <> st:62
R4744:4745 Quan.QAssert <> pf:61 var
R4755:4759 Quan.QAssert <> PBexp constr
R4771:4775 Quan.QIMP <> beval def
R4777:4778 Quan.QAssert <> st:62 var
R4799:4803 Coq.Init.Logic <> False ind
R4789:4792 Coq.Init.Logic <> True ind
R4807:4813 Quan.QAssert <> PUniver constr
binder 4828:4828 <> a:65
R4831:4839 Quan.QAssert <> Pure_eval:63 def
R4844:4858 Quan.QState <> s_update_cstate def
R4864:4865 Quan.QAssert <> st:62 var
R4862:4862 Quan.QAssert <> a:65 var
def 4886:4894 <> QExp_eval
R4898:4900 Coq.Init.Datatypes <> nat ind
binder 4896:4896 <> n:66
R4908:4911 Quan.QAssert <> QExp ind
binder 4904:4905 <> qs:67
R4919:4923 Quan.QState <> state def
R4925:4925 Quan.QAssert <> n:66 var
binder 4915:4916 <> st:68
R4955:4956 Quan.QAssert <> qs:67 var
R4967:4972 Quan.QAssert <> QExp_s constr
R5071:5072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4983:4993 Quan.Basic_Supplement <> PMpar_trace def
R5068:5068 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R5067:5067 Quan.QAssert <> n:66 var
R4998:5002 Quan.Matrix <> scale def
R5006:5007 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5009:5009 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5008:5008 Quan.QAssert <> n:66 var
R5014:5015 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5017:5017 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5016:5016 Quan.QAssert <> n:66 var
R5023:5026 Quan.Complex <> ::C_scope:x_'/'_x not
R5050:5050 Quan.Complex <> ::C_scope:x_'/'_x not
R5021:5022 Quan.Complex <> C1 abbrev
R5028:5032 Quan.Matrix <> trace def
R5036:5037 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5039:5039 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5038:5038 Quan.QAssert <> n:66 var
R5043:5045 Coq.Init.Datatypes <> snd def
R5047:5048 Quan.QAssert <> st:68 var
R5055:5057 Coq.Init.Datatypes <> snd def
R5059:5060 Quan.QAssert <> st:68 var
R5073:5085 Quan.Matrix <> outer_product def
R5095:5100 Quan.QAssert <> QExp_t constr
R5166:5201 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5154:5155 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5112:5121 Quan.QState NSet inter def
R5140:5148 Quan.QAssert <> Free_Qexp def
R5124:5132 Quan.QAssert <> Free_Qexp def
R5156:5165 Quan.QState NSet empty def
R5218:5221 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5202:5210 Quan.QAssert <> QExp_eval:69 def
R5216:5217 Quan.QAssert <> st:68 var
R5222:5230 Quan.QAssert <> QExp_eval:69 def
R5236:5237 Quan.QAssert <> st:68 var
def 5275:5284 <> State_eval
R5288:5290 Coq.Init.Datatypes <> nat ind
binder 5286:5286 <> n:71
R5297:5309 Quan.QAssert <> State_formula ind
binder 5294:5295 <> sf:72
R5316:5320 Quan.QState <> state def
R5322:5322 Quan.QAssert <> n:71 var
binder 5313:5314 <> st:73
R5339:5340 Quan.QAssert <> sf:72 var
R5349:5353 Quan.QAssert <> SPure constr
R5360:5368 Quan.QAssert <> Pure_eval def
R5372:5373 Quan.QAssert <> st:73 var
R5376:5380 Quan.QAssert <> SQuan constr
R5386:5394 Quan.QAssert <> QExp_eval def
R5398:5399 Quan.QAssert <> st:73 var
R5402:5406 Quan.QAssert <> SOdot constr
R5483:5486 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5471:5472 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5417:5426 Quan.QState NSet inter def
R5451:5453 Coq.Init.Datatypes <> snd def
R5456:5465 Quan.QAssert <> Free_state def
R5429:5431 Coq.Init.Datatypes <> snd def
R5434:5443 Quan.QAssert <> Free_state def
R5473:5482 Quan.QState NSet empty def
R5503:5506 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5487:5496 Quan.QAssert <> State_eval:74 def
R5501:5502 Quan.QAssert <> st:73 var
R5507:5516 Quan.QAssert <> State_eval:74 def
R5521:5522 Quan.QAssert <> st:73 var
R5525:5528 Quan.QAssert <> SAnd constr
R5555:5558 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5539:5548 Quan.QAssert <> State_eval:74 def
R5553:5554 Quan.QAssert <> st:73 var
R5559:5568 Quan.QAssert <> State_eval:74 def
R5573:5574 Quan.QAssert <> st:73 var
R5577:5580 Quan.QAssert <> SNot constr
R5587:5588 Coq.Init.Logic <> ::type_scope:'~'_x not
R5604:5604 Coq.Init.Logic <> ::type_scope:'~'_x not
R5589:5598 Quan.QAssert <> State_eval:74 def
R5602:5603 Quan.QAssert <> st:73 var
R5607:5614 Quan.QAssert <> Assn_sub constr
R5625:5634 Quan.QAssert <> State_eval:74 def
R5640:5654 Quan.QState <> s_update_cstate def
R5671:5672 Quan.QAssert <> st:73 var
R5659:5663 Quan.QIMP <> aeval def
R5665:5666 Quan.QAssert <> st:73 var
def 5690:5706 <> State_eval_dstate
R5711:5713 Coq.Init.Datatypes <> nat ind
binder 5709:5709 <> n:76
R5719:5731 Quan.QAssert <> State_formula ind
binder 5717:5717 <> F:77
R5738:5741 Coq.Init.Datatypes <> list ind
R5750:5752 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5761:5761 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5744:5749 Quan.QState <> cstate def
R5753:5758 Quan.QState <> qstate def
R5760:5760 Quan.QAssert <> n:76 var
binder 5735:5736 <> mu:78
R5781:5782 Quan.QAssert <> mu:78 var
R5792:5794 Coq.Init.Datatypes <> nil constr
R5798:5802 Coq.Init.Logic <> False ind
R5807:5807 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5819:5819 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5808:5808 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5814:5814 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5818:5818 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5809:5813 Coq.Reals.Rsigma <> sigma def
R5823:5832 Quan.QAssert <> State_eval def
R5836:5836 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5842:5843 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5847:5847 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5834:5834 Quan.QAssert <> F:77 var
R5863:5864 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5852:5852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5858:5858 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5862:5862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5853:5857 Coq.Reals.Rsigma <> sigma def
R5895:5898 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5870:5879 Quan.QAssert <> State_eval def
R5883:5883 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5889:5890 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5894:5894 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5881:5881 Quan.QAssert <> F:77 var
R5899:5915 Quan.QAssert <> State_eval_dstate:79 def
R5917:5917 Quan.QAssert <> F:77 var
ind 6156:6164 <> sat_State
constr 6216:6220 <> sat_F
R6169:6171 Coq.Init.Datatypes <> nat ind
binder 6167:6167 <> n:81
R6174:6174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6183:6187 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6175:6180 Quan.QState <> dstate def
R6188:6188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6202:6205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6189:6201 Quan.QAssert <> State_formula ind
R6234:6239 Quan.QState <> dstate def
R6241:6241 Quan.QAssert <> n:81 var
binder 6231:6232 <> mu:84
binder 6244:6244 <> F:85
R6259:6262 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6247:6255 Quan.QState <> WF_dstate def
R6257:6258 Quan.QAssert <> mu:84 var
R6301:6346 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6263:6279 Quan.QAssert <> State_eval_dstate def
R6284:6296 Quan.QState StateMap this proj
R6298:6299 Quan.QAssert <> mu:84 var
R6281:6281 Quan.QAssert <> F:85 var
R6347:6355 Quan.QAssert <> sat_State:82 ind
R6360:6360 Quan.QAssert <> F:85 var
R6357:6358 Quan.QAssert <> mu:84 var
ind 6374:6380 <> sat_Pro
constr 6438:6447 <> sat_PState
constr 6788:6797 <> sat_POplus
R6385:6387 Coq.Init.Datatypes <> nat ind
binder 6383:6383 <> n:86
R6391:6391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6400:6403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6392:6397 Quan.QState <> dstate def
R6404:6404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6426:6429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6405:6425 Quan.QAssert <> probabilistic_formula ind
R6461:6466 Quan.QState <> dstate def
R6468:6468 Quan.QAssert <> n:86 var
binder 6458:6459 <> mu:89
R6474:6486 Quan.QAssert <> State_formula ind
binder 6472:6472 <> F:90
R6492:6492 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 6490:6490 <> p:91
R6497:6497 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6504:6543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6499:6499 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R6501:6502 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R6500:6500 Quan.QAssert <> p:91 var
R6500:6500 Quan.QAssert <> p:91 var
R6544:6544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6721:6759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6545:6552 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6565:6568 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6557:6562 Quan.QState <> dstate def
R6564:6564 Quan.QAssert <> n:86 var
binder 6553:6555 <> mu':92
R6569:6569 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6592:6630 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6581:6581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6570:6576 Quan.QState <> d_trace def
R6578:6580 Quan.QAssert <> mu':92 var
R6582:6588 Quan.QState <> d_trace def
R6590:6591 Quan.QAssert <> mu:89 var
R6631:6631 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6662:6703 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6720:6720 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6632:6640 Quan.QState <> dstate_eq def
R6647:6654 Quan.QState <> d_scalar def
R6658:6660 Quan.QAssert <> mu':92 var
R6656:6656 Quan.QAssert <> p:91 var
R6642:6643 Quan.QAssert <> mu:89 var
R6704:6712 Quan.QAssert <> sat_State ind
R6719:6719 Quan.QAssert <> F:90 var
R6715:6717 Quan.QAssert <> mu':92 var
R6760:6766 Quan.QAssert <> sat_Pro:87 ind
R6774:6779 Quan.QAssert <> PState constr
R6781:6781 Quan.QAssert <> p:91 var
R6783:6783 Quan.QAssert <> F:90 var
R6769:6770 Quan.QAssert <> mu:89 var
R6811:6816 Quan.QState <> dstate def
R6818:6818 Quan.QAssert <> n:86 var
binder 6808:6809 <> mu:93
R6830:6850 Quan.QAssert <> probabilistic_formula ind
binder 6822:6824 <> pF1:94
binder 6826:6828 <> pF2:95
R6889:6889 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6914:6952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6891:6891 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R6911:6912 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R6900:6902 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R6892:6895 Quan.QAssert <> mode def
R6897:6899 Quan.QAssert <> pF1:94 var
R6903:6906 Quan.QAssert <> mode def
R6908:6910 Quan.QAssert <> pF2:95 var
R6900:6902 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R6892:6895 Quan.QAssert <> mode def
R6897:6899 Quan.QAssert <> pF1:94 var
R6903:6906 Quan.QAssert <> mode def
R6908:6910 Quan.QAssert <> pF2:95 var
R6953:6953 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7207:7246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7275:7275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6954:6961 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6978:7016 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6970:6975 Quan.QState <> dstate def
R6977:6977 Quan.QAssert <> n:86 var
binder 6962:6964 <> mu1:96
R6970:6975 Quan.QState <> dstate def
R6977:6977 Quan.QAssert <> n:86 var
binder 6966:6968 <> mu2:97
R7017:7017 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7040:7043 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7029:7029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7018:7024 Quan.QState <> d_trace def
R7026:7028 Quan.QAssert <> mu1:96 var
R7030:7036 Quan.QState <> d_trace def
R7038:7039 Quan.QAssert <> mu:93 var
R7044:7044 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7067:7105 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7056:7056 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7045:7051 Quan.QState <> d_trace def
R7053:7055 Quan.QAssert <> mu2:97 var
R7057:7063 Quan.QState <> d_trace def
R7065:7066 Quan.QAssert <> mu:93 var
R7134:7172 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7106:7114 Quan.QState <> dstate_eq def
R7120:7124 Quan.QState <> d_app def
R7130:7132 Quan.QAssert <> mu2:97 var
R7126:7128 Quan.QAssert <> mu1:96 var
R7116:7117 Quan.QAssert <> mu:93 var
R7188:7191 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7173:7179 Quan.QAssert <> sat_Pro:87 ind
R7185:7187 Quan.QAssert <> pF1:94 var
R7181:7183 Quan.QAssert <> mu1:96 var
R7192:7198 Quan.QAssert <> sat_Pro:87 ind
R7204:7206 Quan.QAssert <> pF2:95 var
R7200:7202 Quan.QAssert <> mu2:97 var
R7247:7253 Quan.QAssert <> sat_Pro:87 ind
R7260:7265 Quan.QAssert <> POplus constr
R7267:7269 Quan.QAssert <> pF1:94 var
R7271:7273 Quan.QAssert <> pF2:95 var
R7256:7257 Quan.QAssert <> mu:93 var
ind 7289:7296 <> sat_Npro
constr 7357:7366 <> sat_NState
constr 7438:7447 <> sat_NOplus
R7301:7303 Coq.Init.Datatypes <> nat ind
binder 7299:7299 <> n:98
R7308:7308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7317:7320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7309:7314 Quan.QState <> dstate def
R7321:7321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7345:7348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7322:7344 Quan.QAssert <> unprobabilistic_formula ind
R7380:7385 Quan.QState <> dstate def
R7387:7387 Quan.QAssert <> n:98 var
binder 7377:7378 <> mu:101
binder 7390:7390 <> F:102
R7392:7392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7407:7411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7393:7401 Quan.QAssert <> sat_State ind
R7406:7406 Quan.QAssert <> F:102 var
R7403:7404 Quan.QAssert <> mu:101 var
R7412:7419 Quan.QAssert <> sat_Npro:99 ind
R7426:7431 Quan.QAssert <> NState constr
R7433:7433 Quan.QAssert <> F:102 var
R7421:7422 Quan.QAssert <> mu:101 var
R7461:7466 Quan.QState <> dstate def
R7468:7468 Quan.QAssert <> n:98 var
binder 7458:7459 <> mu:103
R7480:7502 Quan.QAssert <> unprobabilistic_formula ind
binder 7472:7474 <> nF1:104
binder 7476:7478 <> nF2:105
R7527:7527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7790:7814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7528:7534 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7554:7556 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7535:7535 <> p:106
R7546:7551 Quan.QState <> dstate def
R7553:7553 Quan.QAssert <> n:98 var
binder 7538:7540 <> mu1:107
R7546:7551 Quan.QState <> dstate def
R7553:7553 Quan.QAssert <> n:98 var
binder 7542:7544 <> mu2:108
R7557:7557 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7564:7589 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7559:7559 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R7561:7562 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R7560:7560 Quan.QAssert <> p:106 var
R7560:7560 Quan.QAssert <> p:106 var
R7590:7590 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7613:7617 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7602:7602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7591:7597 Quan.QState <> d_trace def
R7599:7601 Quan.QAssert <> mu1:107 var
R7603:7609 Quan.QState <> d_trace def
R7611:7612 Quan.QAssert <> mu:103 var
R7618:7618 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7641:7664 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7630:7630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7619:7625 Quan.QState <> d_trace def
R7627:7629 Quan.QAssert <> mu2:108 var
R7631:7637 Quan.QState <> d_trace def
R7639:7640 Quan.QAssert <> mu:103 var
R7665:7665 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7724:7748 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7788:7789 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7666:7674 Quan.QState <> dstate_eq def
R7680:7684 Quan.QState <> d_app def
R7704:7711 Quan.QState <> d_scalar def
R7719:7721 Quan.QAssert <> mu2:108 var
R7715:7715 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R7716:7716 Quan.QAssert <> p:106 var
R7687:7694 Quan.QState <> d_scalar def
R7698:7700 Quan.QAssert <> mu1:107 var
R7696:7696 Quan.QAssert <> p:106 var
R7676:7677 Quan.QAssert <> mu:103 var
R7765:7769 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7786:7787 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7749:7756 Quan.QAssert <> sat_Npro:99 ind
R7762:7764 Quan.QAssert <> nF1:104 var
R7758:7760 Quan.QAssert <> mu1:107 var
R7770:7777 Quan.QAssert <> sat_Npro:99 ind
R7783:7785 Quan.QAssert <> nF2:105 var
R7779:7781 Quan.QAssert <> mu2:108 var
R7815:7822 Quan.QAssert <> sat_Npro:99 ind
R7828:7833 Quan.QAssert <> NOplus constr
R7835:7837 Quan.QAssert <> nF1:104 var
R7839:7841 Quan.QAssert <> nF2:105 var
R7824:7825 Quan.QAssert <> mu:103 var
ind 7882:7891 <> sat_Assert
constr 7937:7944 <> sat_APro
constr 8013:8021 <> sat_ANpro
R7896:7898 Coq.Init.Datatypes <> nat ind
binder 7894:7894 <> n:109
R7902:7902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7911:7914 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7903:7908 Quan.QState <> dstate def
R7915:7915 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7925:7928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7916:7924 Quan.QAssert <> Assertion ind
R7958:7963 Quan.QState <> dstate def
R7965:7965 Quan.QAssert <> n:109 var
binder 7955:7956 <> mu:112
binder 7968:7969 <> pF:113
R7985:7987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7972:7978 Quan.QAssert <> sat_Pro ind
R7983:7984 Quan.QAssert <> pF:113 var
R7980:7981 Quan.QAssert <> mu:112 var
R7988:7997 Quan.QAssert <> sat_Assert:110 ind
R8003:8006 Quan.QAssert <> APro constr
R8008:8009 Quan.QAssert <> pF:113 var
R7999:8000 Quan.QAssert <> mu:112 var
R8035:8040 Quan.QState <> dstate def
R8042:8042 Quan.QAssert <> n:109 var
binder 8032:8033 <> mu:114
binder 8045:8046 <> nF:115
R8063:8065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8049:8056 Quan.QAssert <> sat_Npro ind
R8061:8062 Quan.QAssert <> nF:115 var
R8058:8059 Quan.QAssert <> mu:114 var
R8066:8075 Quan.QAssert <> sat_Assert:110 ind
R8080:8081 Quan.QAssert <> nF:115 var
R8077:8078 Quan.QAssert <> mu:114 var
R8088:8131 Quan.QAssert <> sat_ANpro constr
R8184:8227 Quan.QAssert <> sat_NState constr
prf 8238:8249 <> WF_sat_State
R8253:8255 Coq.Init.Datatypes <> nat ind
binder 8251:8251 <> n:116
R8271:8276 Quan.QState <> dstate def
R8278:8278 Quan.QAssert <> n:116 var
binder 8268:8269 <> mu:117
R8284:8296 Quan.QAssert <> State_formula ind
binder 8282:8282 <> F:118
R8315:8318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8301:8309 Quan.QAssert <> sat_State ind
R8314:8314 Quan.QAssert <> F:118 var
R8311:8312 Quan.QAssert <> mu:117 var
R8341:8344 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8335:8338 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R8319:8331 Quan.QState StateMap this proj
R8333:8334 Quan.QAssert <> mu:117 var
R8339:8340 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8345:8353 Quan.QState <> WF_dstate def
R8355:8356 Quan.QAssert <> mu:117 var
prf 8531:8542 <> WF_dstate_eq
binder 8544:8544 <> n:119
R8564:8569 Quan.QState <> dstate def
R8571:8571 Quan.QAssert <> n:119 var
binder 8556:8557 <> mu:120
binder 8559:8561 <> mu':121
R8591:8593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8575:8583 Quan.QState <> dstate_eq def
R8588:8590 Quan.QAssert <> mu':121 var
R8585:8586 Quan.QAssert <> mu:120 var
R8606:8609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8594:8602 Quan.QState <> WF_dstate def
R8604:8605 Quan.QAssert <> mu:120 var
R8610:8618 Quan.QState <> WF_dstate def
R8620:8622 Quan.QAssert <> mu':121 var
R8639:8647 Quan.QState <> WF_dstate def
R8657:8665 Quan.QState <> dstate_eq def
prf 8771:8783 <> dstate_eq_sym
R8787:8789 Coq.Init.Datatypes <> nat ind
binder 8785:8785 <> n:122
R8809:8814 Quan.QState <> dstate def
R8816:8816 Quan.QAssert <> n:122 var
binder 8800:8802 <> mu1:123
binder 8804:8806 <> mu2:124
R8837:8839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8820:8828 Quan.QState <> dstate_eq def
R8834:8836 Quan.QAssert <> mu2:124 var
R8830:8832 Quan.QAssert <> mu1:123 var
R8840:8848 Quan.QState <> dstate_eq def
R8854:8856 Quan.QAssert <> mu1:123 var
R8850:8852 Quan.QAssert <> mu2:124 var
R8907:8915 Quan.QState <> dstate_eq def
prf 8955:8964 <> WF_sat_Pro
R8968:8970 Coq.Init.Datatypes <> nat ind
binder 8966:8966 <> n:125
R8986:8991 Quan.QState <> dstate def
R8993:8993 Quan.QAssert <> n:125 var
binder 8983:8984 <> mu:126
R9000:9020 Quan.QAssert <> probabilistic_formula ind
binder 8997:8998 <> pF:127
R9038:9040 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9025:9031 Quan.QAssert <> sat_Pro ind
R9036:9037 Quan.QAssert <> pF:127 var
R9033:9034 Quan.QAssert <> mu:126 var
R9063:9066 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9057:9060 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9041:9053 Quan.QState StateMap this proj
R9055:9056 Quan.QAssert <> mu:126 var
R9061:9062 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9067:9075 Quan.QState <> WF_dstate def
R9077:9078 Quan.QAssert <> mu:126 var
R9212:9223 Quan.QAssert <> WF_sat_State thm
R9212:9223 Quan.QAssert <> WF_sat_State thm
R9308:9315 Quan.QState <> d_scalar def
R9288:9299 Quan.QAssert <> WF_dstate_eq thm
R9308:9315 Quan.QState <> d_scalar def
R9288:9299 Quan.QAssert <> WF_dstate_eq thm
R9337:9349 Quan.QAssert <> dstate_eq_sym thm
R9337:9349 Quan.QAssert <> dstate_eq_sym thm
R9376:9386 Quan.QState <> WF_d_scalar thm
R9376:9386 Quan.QState <> WF_d_scalar thm
R9559:9563 Quan.QState <> d_app def
R9539:9550 Quan.QAssert <> WF_dstate_eq thm
R9559:9563 Quan.QState <> d_app def
R9539:9550 Quan.QAssert <> WF_dstate_eq thm
R9585:9597 Quan.QAssert <> dstate_eq_sym thm
R9585:9597 Quan.QAssert <> dstate_eq_sym thm
prf 9650:9660 <> WF_sat_Npro
R9664:9666 Coq.Init.Datatypes <> nat ind
binder 9662:9662 <> n:128
R9681:9703 Quan.QAssert <> unprobabilistic_formula ind
binder 9678:9679 <> nF:129
R9711:9716 Quan.QState <> dstate def
R9718:9718 Quan.QAssert <> n:128 var
binder 9708:9709 <> mu:130
R9738:9740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9724:9731 Quan.QAssert <> sat_Npro ind
R9736:9737 Quan.QAssert <> nF:129 var
R9733:9734 Quan.QAssert <> mu:130 var
R9763:9766 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9757:9760 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9741:9753 Quan.QState StateMap this proj
R9755:9756 Quan.QAssert <> mu:130 var
R9761:9762 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9767:9775 Quan.QState <> WF_dstate def
R9777:9778 Quan.QAssert <> mu:130 var
R9841:9852 Quan.QAssert <> WF_sat_State thm
R9841:9852 Quan.QAssert <> WF_sat_State thm
R10051:10055 Quan.QState <> d_app def
R10081:10088 Quan.QState <> d_scalar def
R10092:10094 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R10058:10065 Quan.QState <> d_scalar def
R10031:10042 Quan.QAssert <> WF_dstate_eq thm
R10051:10055 Quan.QState <> d_app def
R10081:10088 Quan.QState <> d_scalar def
R10092:10094 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R10058:10065 Quan.QState <> d_scalar def
R10031:10042 Quan.QAssert <> WF_dstate_eq thm
R10111:10123 Quan.QAssert <> dstate_eq_sym thm
R10111:10123 Quan.QAssert <> dstate_eq_sym thm
R10152:10159 Quan.QState <> WF_d_app thm
R10152:10159 Quan.QState <> WF_d_app thm
prf 10288:10300 <> WF_sat_Assert
R10304:10306 Coq.Init.Datatypes <> nat ind
binder 10302:10302 <> n:131
R10321:10326 Quan.QState <> dstate def
R10328:10328 Quan.QAssert <> n:131 var
binder 10318:10319 <> mu:132
R10334:10342 Quan.QAssert <> Assertion ind
binder 10332:10332 <> D:133
R10363:10365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10347:10356 Quan.QAssert <> sat_Assert ind
R10362:10362 Quan.QAssert <> D:133 var
R10359:10360 Quan.QAssert <> mu:132 var
R10388:10391 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10382:10385 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R10366:10378 Quan.QState StateMap this proj
R10380:10381 Quan.QAssert <> mu:132 var
R10386:10387 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10392:10400 Quan.QState <> WF_dstate def
R10402:10403 Quan.QAssert <> mu:132 var
R10476:10485 Quan.QAssert <> WF_sat_Pro prfax
R10476:10485 Quan.QAssert <> WF_sat_Pro prfax
R10547:10557 Quan.QAssert <> WF_sat_Npro prfax
R10547:10557 Quan.QAssert <> WF_sat_Npro prfax
prf 10592:10604 <> state_eq_aexp
R10608:10610 Coq.Init.Datatypes <> nat ind
binder 10606:10606 <> n:134
R10629:10633 Quan.QState <> state def
R10635:10635 Quan.QAssert <> n:134 var
binder 10622:10623 <> st:135
binder 10625:10627 <> st':136
R10643:10646 Quan.QIMP <> aexp ind
binder 10641:10641 <> a:137
R10670:10672 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10650:10650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10657:10661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10669:10669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10651:10653 Coq.Init.Datatypes <> fst def
R10655:10656 Quan.QAssert <> st:135 var
R10662:10664 Coq.Init.Datatypes <> fst def
R10666:10668 Quan.QAssert <> st':136 var
R10673:10673 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10684:10687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10674:10678 Quan.QIMP <> aeval def
R10683:10683 Quan.QAssert <> a:137 var
R10680:10681 Quan.QAssert <> st:135 var
R10688:10692 Quan.QIMP <> aeval def
R10698:10698 Quan.QAssert <> a:137 var
R10694:10696 Quan.QAssert <> st':136 var
prf 10973:10985 <> state_eq_bexp
R10989:10991 Coq.Init.Datatypes <> nat ind
binder 10987:10987 <> n:138
R11010:11014 Quan.QState <> state def
R11016:11016 Quan.QAssert <> n:138 var
binder 11003:11004 <> st:139
binder 11006:11008 <> st':140
R11022:11025 Quan.QIMP <> bexp ind
binder 11020:11020 <> b:141
R11049:11051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11029:11029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11036:11040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11048:11048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11030:11032 Coq.Init.Datatypes <> fst def
R11034:11035 Quan.QAssert <> st:139 var
R11041:11043 Coq.Init.Datatypes <> fst def
R11045:11047 Quan.QAssert <> st':140 var
R11052:11052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11063:11066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11053:11057 Quan.QIMP <> beval def
R11062:11062 Quan.QAssert <> b:141 var
R11059:11060 Quan.QAssert <> st:139 var
R11067:11071 Quan.QIMP <> beval def
R11077:11077 Quan.QAssert <> b:141 var
R11073:11075 Quan.QAssert <> st':140 var
R11192:11204 Quan.QAssert <> state_eq_aexp thm
R11192:11204 Quan.QAssert <> state_eq_aexp thm
R11192:11204 Quan.QAssert <> state_eq_aexp thm
R11192:11204 Quan.QAssert <> state_eq_aexp thm
R11235:11247 Quan.QAssert <> state_eq_aexp thm
R11235:11247 Quan.QAssert <> state_eq_aexp thm
R11235:11247 Quan.QAssert <> state_eq_aexp thm
R11235:11247 Quan.QAssert <> state_eq_aexp thm
R11332:11344 Quan.QAssert <> state_eq_aexp thm
R11332:11344 Quan.QAssert <> state_eq_aexp thm
R11332:11344 Quan.QAssert <> state_eq_aexp thm
R11332:11344 Quan.QAssert <> state_eq_aexp thm
R11373:11385 Quan.QAssert <> state_eq_aexp thm
R11373:11385 Quan.QAssert <> state_eq_aexp thm
R11373:11385 Quan.QAssert <> state_eq_aexp thm
R11373:11385 Quan.QAssert <> state_eq_aexp thm
R11468:11480 Quan.QAssert <> state_eq_aexp thm
R11468:11480 Quan.QAssert <> state_eq_aexp thm
R11468:11480 Quan.QAssert <> state_eq_aexp thm
R11468:11480 Quan.QAssert <> state_eq_aexp thm
R11510:11522 Quan.QAssert <> state_eq_aexp thm
R11510:11522 Quan.QAssert <> state_eq_aexp thm
R11510:11522 Quan.QAssert <> state_eq_aexp thm
R11510:11522 Quan.QAssert <> state_eq_aexp thm
R11605:11617 Quan.QAssert <> state_eq_aexp thm
R11605:11617 Quan.QAssert <> state_eq_aexp thm
R11605:11617 Quan.QAssert <> state_eq_aexp thm
R11605:11617 Quan.QAssert <> state_eq_aexp thm
R11646:11658 Quan.QAssert <> state_eq_aexp thm
R11646:11658 Quan.QAssert <> state_eq_aexp thm
R11646:11658 Quan.QAssert <> state_eq_aexp thm
R11646:11658 Quan.QAssert <> state_eq_aexp thm
prf 11861:11872 <> bexp_Pure_eq
R11876:11878 Coq.Init.Datatypes <> nat ind
binder 11874:11874 <> n:142
R11898:11902 Quan.QState <> state def
R11904:11904 Quan.QAssert <> n:142 var
binder 11891:11892 <> st:143
binder 11894:11896 <> st':144
R11911:11914 Quan.QIMP <> bexp ind
binder 11909:11909 <> b:145
R11920:11920 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11947:11951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11921:11921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11932:11935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11922:11926 Quan.QIMP <> beval def
R11931:11931 Quan.QAssert <> b:145 var
R11928:11929 Quan.QAssert <> st:143 var
R11936:11940 Quan.QIMP <> beval def
R11946:11946 Quan.QAssert <> b:145 var
R11942:11944 Quan.QAssert <> st':144 var
R11952:11952 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11968:11972 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11989:11989 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11953:11962 Quan.QAssert <> State_eval def
R11966:11967 Quan.QAssert <> st:143 var
R11964:11964 Quan.QAssert <> b:145 var
R11973:11982 Quan.QAssert <> State_eval def
R11986:11988 Quan.QAssert <> st':144 var
R11984:11984 Quan.QAssert <> b:145 var
R12026:12030 Quan.QIMP <> beval def
R12026:12030 Quan.QIMP <> beval def
prf 12118:12130 <> state_eq_Pure
R12134:12136 Coq.Init.Datatypes <> nat ind
binder 12132:12132 <> n:146
R12150:12161 Quan.QAssert <> Pure_formula ind
binder 12148:12148 <> P:147
R12172:12176 Quan.QState <> state def
R12178:12178 Quan.QAssert <> n:146 var
binder 12165:12166 <> st:148
binder 12168:12170 <> st':149
R12202:12204 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12183:12183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12190:12193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12201:12201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12184:12186 Coq.Init.Datatypes <> fst def
R12188:12189 Quan.QAssert <> st:148 var
R12194:12196 Coq.Init.Datatypes <> fst def
R12198:12200 Quan.QAssert <> st':149 var
R12205:12205 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12221:12225 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12206:12215 Quan.QAssert <> State_eval def
R12219:12220 Quan.QAssert <> st:148 var
R12217:12217 Quan.QAssert <> P:147 var
R12226:12235 Quan.QAssert <> State_eval def
R12239:12241 Quan.QAssert <> st':149 var
R12237:12237 Quan.QAssert <> P:147 var
R12286:12297 Quan.QAssert <> bexp_Pure_eq thm
R12286:12297 Quan.QAssert <> bexp_Pure_eq thm
R12326:12338 Quan.QAssert <> state_eq_bexp thm
R12326:12338 Quan.QAssert <> state_eq_bexp thm
R12326:12338 Quan.QAssert <> state_eq_bexp thm
R12326:12338 Quan.QAssert <> state_eq_bexp thm
R12444:12458 Quan.QState <> s_update_cstate def
R12556:12556 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12572:12573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12575:12575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12557:12564 Quan.QState <> c_update def
R12556:12556 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12572:12573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12575:12575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12557:12564 Quan.QState <> c_update def
R12633:12634 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12650:12652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12655:12655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12635:12642 Quan.QState <> c_update def
R12633:12634 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12650:12652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12655:12655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12635:12642 Quan.QState <> c_update def
prf 12709:12722 <> qstate_eq_Qexp
R12736:12739 Quan.QAssert <> QExp ind
binder 12732:12733 <> qs:150
R12746:12748 Coq.Init.Datatypes <> nat ind
binder 12744:12744 <> n:151
R12759:12763 Quan.QState <> state def
R12765:12765 Quan.QAssert <> n:151 var
binder 12752:12753 <> st:152
binder 12755:12757 <> st':153
R12787:12792 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12778:12779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12772:12774 Coq.Init.Datatypes <> snd def
R12776:12777 Quan.QAssert <> st:152 var
R12780:12782 Coq.Init.Datatypes <> snd def
R12784:12786 Quan.QAssert <> st':153 var
R12809:12812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12793:12801 Quan.QAssert <> QExp_eval def
R12807:12808 Quan.QAssert <> st:152 var
R12804:12805 Quan.QAssert <> qs:150 var
R12813:12821 Quan.QAssert <> QExp_eval def
R12827:12829 Quan.QAssert <> st':153 var
R12824:12825 Quan.QAssert <> qs:150 var
def 13056:13069 <> assert_implies
R13078:13086 Quan.QAssert <> Assertion ind
binder 13072:13072 <> P:154
binder 13074:13074 <> Q:155
R13113:13115 Coq.Init.Datatypes <> nat ind
binder 13111:13111 <> n:156
R13122:13127 Quan.QState <> dstate def
R13129:13129 Quan.QAssert <> n:156 var
binder 13119:13120 <> mu:157
R13149:13152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13133:13142 Quan.QAssert <> sat_Assert ind
R13148:13148 Quan.QAssert <> P:154 var
R13145:13146 Quan.QAssert <> mu:157 var
R13153:13162 Quan.QAssert <> sat_Assert ind
R13168:13168 Quan.QAssert <> Q:155 var
R13165:13166 Quan.QAssert <> mu:157 var
R13195:13208 Quan.QAssert <> assert_implies def
not 13181:13181 <> ::assert_scope:x_'->>'_x
R13309:13309 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R13317:13322 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R13330:13330 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R13311:13315 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R13324:13328 Quan.QAssert <> ::assert_scope:x_'->>'_x not
not 13289:13289 <> ::assert_scope:x_'<<->>'_x
prf 13397:13409 <> Mscale_not_0'
R13423:13425 Coq.Init.Datatypes <> nat ind
binder 13419:13419 <> m:158
binder 13421:13421 <> n:159
R13431:13436 Quan.Matrix <> Matrix def
R13438:13438 Quan.QAssert <> m:158 var
R13440:13440 Quan.QAssert <> n:159 var
binder 13429:13429 <> A:160
R13447:13447 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 13444:13444 <> p:161
R13465:13468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13457:13460 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R13453:13455 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R13452:13452 Quan.QAssert <> p:161 var
R13456:13456 Quan.QAssert <> A:160 var
R13461:13464 Quan.Matrix <> Zero def
R13470:13471 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R13469:13469 Quan.QAssert <> A:160 var
R13472:13475 Quan.Matrix <> Zero def
R13493:13495 Coq.Init.Logic <> not def
R13534:13543 Quan.Matrix <> Mscale_0_r thm
R13534:13543 Quan.Matrix <> Mscale_0_r thm
R13534:13543 Quan.Matrix <> Mscale_0_r thm
prf 13602:13620 <> s_seman_scalar_Qexp
R13635:13638 Quan.QAssert <> QExp ind
binder 13632:13633 <> qs:162
R13644:13644 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 13642:13642 <> p:163
R13651:13653 Coq.Init.Datatypes <> nat ind
binder 13649:13649 <> n:164
R13660:13664 Quan.QState <> state def
R13666:13666 Quan.QAssert <> n:164 var
binder 13657:13658 <> st:165
R13676:13679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13671:13671 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R13673:13674 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R13672:13672 Quan.QAssert <> p:163 var
R13672:13672 Quan.QAssert <> p:163 var
R13691:13695 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13744:13744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13680:13687 Quan.QState <> WF_state def
R13689:13690 Quan.QAssert <> st:165 var
R13711:13715 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13696:13704 Quan.QAssert <> QExp_eval def
R13709:13710 Quan.QAssert <> st:165 var
R13706:13707 Quan.QAssert <> qs:162 var
R13716:13724 Quan.QAssert <> QExp_eval def
R13730:13737 Quan.QState <> s_scalar def
R13741:13742 Quan.QAssert <> st:165 var
R13739:13739 Quan.QAssert <> p:163 var
R13726:13727 Quan.QAssert <> qs:162 var
R13863:13877 Quan.Matrix <> trace_mult_dist thm
R13863:13877 Quan.Matrix <> trace_mult_dist thm
R13863:13877 Quan.Matrix <> trace_mult_dist thm
R13894:13904 Quan.Complex <> Cdiv_unfold thm
R13894:13904 Quan.Complex <> Cdiv_unfold thm
R13894:13904 Quan.Complex <> Cdiv_unfold thm
R13921:13932 Quan.Matrix <> Mscale_assoc thm
R13921:13932 Quan.Matrix <> Mscale_assoc thm
R13921:13932 Quan.Matrix <> Mscale_assoc thm
R13951:13961 Quan.Complex <> Cmult_assoc thm
R13951:13961 Quan.Complex <> Cmult_assoc thm
R13951:13961 Quan.Complex <> Cmult_assoc thm
R13978:13992 Quan.Complex <> Cinv_mult_distr thm
R13978:13992 Quan.Complex <> Cinv_mult_distr thm
R13978:13992 Quan.Complex <> Cinv_mult_distr thm
R13978:13992 Quan.Complex <> Cinv_mult_distr thm
R13978:13992 Quan.Complex <> Cinv_mult_distr thm
R14012:14022 Quan.Complex <> Cmult_assoc thm
R14012:14022 Quan.Complex <> Cmult_assoc thm
R14012:14022 Quan.Complex <> Cmult_assoc thm
R14060:14063 Quan.Complex <> RtoC def
R14039:14048 Quan.Complex <> Cmult_comm thm
R14060:14063 Quan.Complex <> RtoC def
R14039:14048 Quan.Complex <> Cmult_comm thm
R14060:14063 Quan.Complex <> RtoC def
R14039:14048 Quan.Complex <> Cmult_comm thm
R14106:14109 Quan.Complex <> RtoC def
R14084:14094 Quan.Complex <> Cmult_assoc thm
R14106:14109 Quan.Complex <> RtoC def
R14084:14094 Quan.Complex <> Cmult_assoc thm
R14106:14109 Quan.Complex <> RtoC def
R14084:14094 Quan.Complex <> Cmult_assoc thm
R14130:14135 Quan.Complex <> Cinv_l thm
R14130:14135 Quan.Complex <> Cinv_l thm
R14130:14135 Quan.Complex <> Cinv_l thm
R14130:14135 Quan.Complex <> Cinv_l thm
R14152:14162 Quan.Complex <> Cmult_assoc thm
R14152:14162 Quan.Complex <> Cmult_assoc thm
R14152:14162 Quan.Complex <> Cmult_assoc thm
R14179:14187 Quan.Complex <> Cmult_1_l thm
R14179:14187 Quan.Complex <> Cmult_1_l thm
R14179:14187 Quan.Complex <> Cmult_1_l thm
R14220:14227 Quan.Complex <> RtoC_neq thm
R14220:14227 Quan.Complex <> RtoC_neq thm
R14282:14289 Quan.Complex <> RtoC_neq thm
R14282:14289 Quan.Complex <> RtoC_neq thm
R14344:14356 Quan.QState <> WF_state_gt_0 thm
R14344:14356 Quan.QState <> WF_state_gt_0 thm
R14391:14393 Coq.Init.Logic <> not def
R14418:14424 Quan.QState <> s_trace def
R14482:14487 Quan.Complex <> Cmod_0 thm
R14482:14487 Quan.Complex <> Cmod_0 thm
R14482:14487 Quan.Complex <> Cmod_0 thm
R14749:14763 Quan.Matrix <> trace_mult_dist thm
R14749:14763 Quan.Matrix <> trace_mult_dist thm
R14749:14763 Quan.Matrix <> trace_mult_dist thm
R14780:14790 Quan.Complex <> Cdiv_unfold thm
R14780:14790 Quan.Complex <> Cdiv_unfold thm
R14780:14790 Quan.Complex <> Cdiv_unfold thm
R14807:14818 Quan.Matrix <> Mscale_assoc thm
R14807:14818 Quan.Matrix <> Mscale_assoc thm
R14807:14818 Quan.Matrix <> Mscale_assoc thm
R14837:14847 Quan.Complex <> Cmult_assoc thm
R14837:14847 Quan.Complex <> Cmult_assoc thm
R14837:14847 Quan.Complex <> Cmult_assoc thm
R14864:14878 Quan.Complex <> Cinv_mult_distr thm
R14864:14878 Quan.Complex <> Cinv_mult_distr thm
R14864:14878 Quan.Complex <> Cinv_mult_distr thm
R14864:14878 Quan.Complex <> Cinv_mult_distr thm
R14864:14878 Quan.Complex <> Cinv_mult_distr thm
R14898:14908 Quan.Complex <> Cmult_assoc thm
R14898:14908 Quan.Complex <> Cmult_assoc thm
R14898:14908 Quan.Complex <> Cmult_assoc thm
R14946:14949 Quan.Complex <> RtoC def
R14925:14934 Quan.Complex <> Cmult_comm thm
R14946:14949 Quan.Complex <> RtoC def
R14925:14934 Quan.Complex <> Cmult_comm thm
R14946:14949 Quan.Complex <> RtoC def
R14925:14934 Quan.Complex <> Cmult_comm thm
R14992:14995 Quan.Complex <> RtoC def
R14970:14980 Quan.Complex <> Cmult_assoc thm
R14992:14995 Quan.Complex <> RtoC def
R14970:14980 Quan.Complex <> Cmult_assoc thm
R14992:14995 Quan.Complex <> RtoC def
R14970:14980 Quan.Complex <> Cmult_assoc thm
R15016:15021 Quan.Complex <> Cinv_l thm
R15016:15021 Quan.Complex <> Cinv_l thm
R15016:15021 Quan.Complex <> Cinv_l thm
R15016:15021 Quan.Complex <> Cinv_l thm
R15038:15048 Quan.Complex <> Cmult_assoc thm
R15038:15048 Quan.Complex <> Cmult_assoc thm
R15038:15048 Quan.Complex <> Cmult_assoc thm
R15065:15073 Quan.Complex <> Cmult_1_l thm
R15065:15073 Quan.Complex <> Cmult_1_l thm
R15065:15073 Quan.Complex <> Cmult_1_l thm
R15105:15112 Quan.Complex <> RtoC_neq thm
R15105:15112 Quan.Complex <> RtoC_neq thm
R15167:15174 Quan.Complex <> RtoC_neq thm
R15167:15174 Quan.Complex <> RtoC_neq thm
R15229:15241 Quan.QState <> WF_state_gt_0 thm
R15229:15241 Quan.QState <> WF_state_gt_0 thm
R15276:15278 Coq.Init.Logic <> not def
R15303:15309 Quan.QState <> s_trace def
R15362:15367 Quan.Complex <> Cmod_0 thm
R15362:15367 Quan.Complex <> Cmod_0 thm
R15362:15367 Quan.Complex <> Cmod_0 thm
prf 15612:15625 <> s_seman_scalar
R15638:15650 Quan.QAssert <> State_formula ind
binder 15636:15636 <> F:166
R15656:15656 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 15654:15654 <> p:167
binder 15659:15659 <> n:168
R15666:15670 Quan.QState <> state def
R15672:15672 Quan.QAssert <> n:168 var
binder 15663:15664 <> st:169
R15682:15684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15677:15677 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R15679:15680 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R15678:15678 Quan.QAssert <> p:167 var
R15678:15678 Quan.QAssert <> p:167 var
R15685:15685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15697:15701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15750:15750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15686:15693 Quan.QState <> WF_state def
R15695:15696 Quan.QAssert <> st:169 var
R15717:15721 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15702:15711 Quan.QAssert <> State_eval def
R15715:15716 Quan.QAssert <> st:169 var
R15713:15713 Quan.QAssert <> F:166 var
R15722:15731 Quan.QAssert <> State_eval def
R15736:15743 Quan.QState <> s_scalar def
R15747:15748 Quan.QAssert <> st:169 var
R15745:15745 Quan.QAssert <> p:167 var
R15733:15733 Quan.QAssert <> F:166 var
R15800:15812 Quan.QAssert <> state_eq_Pure thm
R15821:15828 Quan.QState <> s_scalar def
R15800:15812 Quan.QAssert <> state_eq_Pure thm
R15821:15828 Quan.QState <> s_scalar def
R15884:15896 Quan.QAssert <> state_eq_Pure thm
R15902:15909 Quan.QState <> s_scalar def
R15884:15896 Quan.QAssert <> state_eq_Pure thm
R15902:15909 Quan.QState <> s_scalar def
R15961:15979 Quan.QAssert <> s_seman_scalar_Qexp thm
R15961:15979 Quan.QAssert <> s_seman_scalar_Qexp thm
R16341:16343 Coq.Init.Logic <> not def
R16366:16368 Coq.Init.Logic <> not def
R16392:16401 Quan.QAssert <> State_eval def
R16392:16401 Quan.QAssert <> State_eval def
R16502:16511 Quan.QAssert <> State_eval def
R16516:16523 Quan.QState <> s_scalar def
R16502:16511 Quan.QAssert <> State_eval def
R16516:16523 Quan.QState <> s_scalar def
R16668:16682 Quan.QState <> s_update_cstate def
R16719:16726 Quan.QState <> s_scalar def
R16753:16753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16783:16784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16786:16786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16754:16761 Quan.QState <> c_update def
R16766:16770 Quan.QIMP <> aeval def
R16772:16772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16774:16775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16777:16777 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16816:16823 Quan.QState <> s_scalar def
R16753:16753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16783:16784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16786:16786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16754:16761 Quan.QState <> c_update def
R16766:16770 Quan.QIMP <> aeval def
R16772:16772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16774:16775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16777:16777 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16856:16857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16882:16882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16842:16846 Quan.QIMP <> aeval def
R16848:16848 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16850:16851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16853:16853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16859:16863 Quan.QIMP <> aeval def
R16867:16867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16869:16871 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16878:16879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16873:16876 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R16856:16857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16882:16882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16842:16846 Quan.QIMP <> aeval def
R16848:16848 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16850:16851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16853:16853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16859:16863 Quan.QIMP <> aeval def
R16867:16867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16869:16871 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16878:16879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16873:16876 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R16894:16906 Quan.QAssert <> state_eq_aexp thm
R16894:16906 Quan.QAssert <> state_eq_aexp thm
R16972:16979 Quan.QState <> WF_state def
R16998:17005 Quan.QState <> WF_state def
R17051:17057 Quan.QState <> s_trace def
R17088:17095 Quan.QState <> s_scalar def
R17138:17138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17125:17129 Quan.QIMP <> aeval def
R17131:17131 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17133:17133 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17135:17135 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17141:17145 Quan.QIMP <> aeval def
R17149:17149 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17151:17152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17159:17159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17154:17157 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R17138:17138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17125:17129 Quan.QIMP <> aeval def
R17131:17131 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17133:17133 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17135:17135 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17141:17145 Quan.QIMP <> aeval def
R17149:17149 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17151:17152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17159:17159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17154:17157 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R17174:17186 Quan.QAssert <> state_eq_aexp thm
R17174:17186 Quan.QAssert <> state_eq_aexp thm
R17239:17246 Quan.QState <> s_scalar def
R17287:17287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17322:17324 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17326:17326 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17288:17295 Quan.QState <> c_update def
R17300:17304 Quan.QIMP <> aeval def
R17306:17306 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17308:17309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17311:17311 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17287:17287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17322:17324 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17326:17326 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17288:17295 Quan.QState <> c_update def
R17300:17304 Quan.QIMP <> aeval def
R17306:17306 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17308:17309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17311:17311 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17380:17387 Quan.QState <> WF_state def
R17406:17413 Quan.QState <> WF_state def
prf 17487:17505 <> d_seman_scalar_Qexp
R17519:17531 Quan.QAssert <> State_formula ind
binder 17517:17517 <> F:170
R17537:17537 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 17535:17535 <> p:171
R17544:17546 Coq.Init.Datatypes <> nat ind
binder 17542:17542 <> n:172
R17553:17556 Coq.Init.Datatypes <> list ind
R17565:17567 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R17559:17564 Quan.QState <> cstate def
R17568:17573 Quan.QState <> qstate def
R17575:17575 Quan.QAssert <> n:172 var
binder 17550:17551 <> mu:173
R17586:17589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17581:17581 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R17583:17584 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R17582:17582 Quan.QAssert <> p:171 var
R17582:17582 Quan.QAssert <> p:171 var
R17606:17610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17710:17710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17590:17602 Quan.QState <> WF_dstate_aux ind
R17604:17605 Quan.QAssert <> mu:173 var
R17633:17635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17611:17627 Quan.QAssert <> State_eval_dstate def
R17631:17632 Quan.QAssert <> mu:173 var
R17629:17629 Quan.QAssert <> F:170 var
R17637:17653 Quan.QAssert <> State_eval_dstate def
R17655:17655 Quan.QAssert <> n:172 var
R17657:17657 Quan.QAssert <> F:170 var
R17661:17676 Quan.QState StateMap.Raw map def
R17707:17708 Quan.QAssert <> mu:173 var
R17687:17692 Quan.QState <> qstate def
R17694:17694 Quan.QAssert <> n:172 var
binder 17683:17683 <> x:174
R17700:17703 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R17699:17699 Quan.QAssert <> p:171 var
R17704:17704 Quan.QAssert <> x:174 var
R17831:17840 Quan.QAssert <> State_eval def
R17846:17853 Quan.QState <> s_scalar def
R17857:17857 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17859:17860 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17862:17862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17831:17840 Quan.QAssert <> State_eval def
R17846:17853 Quan.QState <> s_scalar def
R17857:17857 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17859:17860 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17862:17862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17880:17893 Quan.QAssert <> s_seman_scalar thm
R17880:17893 Quan.QAssert <> s_seman_scalar thm
R17970:17977 Quan.QState <> s_scalar def
R18067:18076 Quan.QAssert <> State_eval def
R18081:18088 Quan.QState <> s_scalar def
R18092:18092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18094:18095 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18097:18097 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18067:18076 Quan.QAssert <> State_eval def
R18081:18088 Quan.QState <> s_scalar def
R18092:18092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18094:18095 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18097:18097 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18115:18128 Quan.QAssert <> s_seman_scalar thm
R18115:18128 Quan.QAssert <> s_seman_scalar thm
R18205:18212 Quan.QState <> s_scalar def
R18269:18285 Quan.QAssert <> State_eval_dstate def
R18299:18314 Quan.QState StateMap.Raw map def
R18364:18367 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R18356:18356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18359:18360 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18363:18363 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18325:18330 Quan.QState <> qstate def
binder 18321:18321 <> x:175
R18338:18341 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R18342:18342 Quan.QAssert <> x:175 var
R18269:18285 Quan.QAssert <> State_eval_dstate def
R18299:18314 Quan.QState StateMap.Raw map def
R18364:18367 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R18356:18356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18359:18360 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18363:18363 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18325:18330 Quan.QState <> qstate def
binder 18321:18321 <> x:176
R18338:18341 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R18342:18342 Quan.QAssert <> x:176 var
prf 18547:18560 <> d_seman_scalar
binder 18570:18570 <> n:177
R18575:18575 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 18573:18573 <> p:178
R18582:18587 Quan.QState <> dstate def
R18589:18589 Quan.QAssert <> n:177 var
binder 18579:18580 <> mu:179
R18595:18607 Quan.QAssert <> State_formula ind
binder 18593:18593 <> F:180
R18617:18619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18612:18612 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R18614:18615 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R18613:18613 Quan.QAssert <> p:178 var
R18613:18613 Quan.QAssert <> p:178 var
R18634:18637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18620:18628 Quan.QAssert <> sat_State ind
R18633:18633 Quan.QAssert <> F:180 var
R18630:18631 Quan.QAssert <> mu:179 var
R18638:18646 Quan.QAssert <> sat_State ind
R18665:18665 Quan.QAssert <> F:180 var
R18650:18657 Quan.QState <> d_scalar def
R18661:18662 Quan.QAssert <> mu:179 var
R18659:18659 Quan.QAssert <> p:178 var
R18731:18738 Quan.QState <> d_scalar def
R18803:18807 Quan.QAssert <> sat_F constr
R18803:18807 Quan.QAssert <> sat_F constr
R18824:18834 Quan.QState <> WF_d_scalar thm
R18824:18834 Quan.QState <> WF_d_scalar thm
R18879:18897 Quan.QAssert <> d_seman_scalar_Qexp thm
R18879:18897 Quan.QAssert <> d_seman_scalar_Qexp thm
R18925:18933 Quan.QState <> WF_dstate def
R19007:19020 Coq.Logic.Classical_Prop <> <> lib
prf 19031:19041 <> Mplus_not_0
R19056:19058 Coq.Init.Datatypes <> nat ind
binder 19052:19052 <> m:181
binder 19054:19054 <> n:182
R19066:19071 Quan.Matrix <> Matrix def
R19073:19073 Quan.QAssert <> m:181 var
R19075:19075 Quan.QAssert <> n:182 var
binder 19062:19062 <> A:183
binder 19064:19064 <> B:184
R19093:19097 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19120:19120 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19085:19088 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19080:19083 Quan.Matrix <> ::matrix_scope:x_'.+'_x not
R19079:19079 Quan.QAssert <> A:183 var
R19084:19084 Quan.QAssert <> B:184 var
R19089:19092 Quan.Matrix <> Zero def
R19107:19110 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19099:19102 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19098:19098 Quan.QAssert <> A:183 var
R19103:19106 Quan.Matrix <> Zero def
R19112:19115 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19111:19111 Quan.QAssert <> B:184 var
R19116:19119 Quan.Matrix <> Zero def
R19139:19141 Coq.Init.Logic <> not def
R19165:19168 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19160:19160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19161:19164 Quan.Matrix <> Zero def
R19170:19171 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19172:19175 Quan.Matrix <> Zero def
R19165:19168 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19160:19160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19161:19164 Quan.Matrix <> Zero def
R19170:19171 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19172:19175 Quan.Matrix <> Zero def
R19194:19200 Coq.Logic.Classical_Prop <> classic prfax
R19194:19200 Coq.Logic.Classical_Prop <> classic prfax
R19296:19304 Quan.Matrix <> Mplus_0_l thm
R19296:19304 Quan.Matrix <> Mplus_0_l thm
prf 19352:19363 <> d_app_mu_nil
R19378:19380 Coq.Init.Datatypes <> nat ind
binder 19374:19374 <> n:185
R19392:19397 Quan.QState <> dstate def
R19399:19399 Quan.QAssert <> n:185 var
binder 19384:19385 <> mu:186
binder 19387:19389 <> mu':187
R19426:19430 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19422:19423 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19405:19417 Quan.QState StateMap this proj
R19419:19421 Quan.QAssert <> mu':187 var
R19424:19425 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R19459:19461 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19431:19443 Quan.QState StateMap this proj
R19446:19450 Quan.QState <> d_app def
R19455:19457 Quan.QAssert <> mu':187 var
R19452:19453 Quan.QAssert <> mu:186 var
R19462:19474 Quan.QState StateMap this proj
R19476:19477 Quan.QAssert <> mu:186 var
R19562:19572 Quan.QState <> map2_r_refl thm
R19562:19572 Quan.QState <> map2_r_refl thm
R19562:19572 Quan.QState <> map2_r_refl thm
R19668:19678 Quan.QState <> map2_l_refl thm
R19668:19678 Quan.QState <> map2_l_refl thm
R19668:19678 Quan.QState <> map2_l_refl thm
prf 19727:19734 <> map2_nil
binder 19743:19743 <> n:188
R19749:19752 Coq.Init.Datatypes <> list ind
R19761:19762 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19755:19760 Quan.QState <> cstate def
R19763:19768 Quan.QState <> qstate def
R19770:19770 Quan.QAssert <> n:188 var
binder 19746:19747 <> mu:189
R19811:19814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19777:19793 Quan.QState StateMap.Raw map2 def
R19809:19810 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R19806:19807 Quan.QAssert <> mu:189 var
R19795:19804 Quan.QState <> option_app def
R19815:19833 Quan.QState StateMap.Raw map2_l def
R19846:19847 Quan.QAssert <> mu:189 var
R19835:19844 Quan.QState <> option_app def
prf 19965:19974 <> Rplus_le_1
R19990:19990 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 19984:19985 <> r1:190
binder 19987:19988 <> r2:191
R19998:19999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19996:19996 Coq.Reals.Rdefinitions <> ::R_scope:x_'>'_x not
R19994:19995 Quan.QAssert <> r1:190 var
R20008:20010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20005:20006 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R20002:20002 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R20000:20001 Quan.QAssert <> r1:190 var
R20003:20004 Quan.QAssert <> r2:191 var
R20013:20014 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R20011:20012 Quan.QAssert <> r2:191 var
prf 20058:20075 <> map2_scale_not_nil
binder 20085:20085 <> n:192
R20090:20090 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 20088:20088 <> p:193
R20098:20101 Coq.Init.Datatypes <> list ind
R20110:20112 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20104:20109 Quan.QState <> cstate def
R20113:20118 Quan.QState <> qstate def
R20120:20120 Quan.QAssert <> n:192 var
binder 20094:20095 <> mu:194
R20134:20137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20129:20130 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20127:20128 Quan.QAssert <> mu:194 var
R20131:20133 Coq.Init.Datatypes <> nil constr
R20138:20138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20142:20147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20140:20140 Coq.Reals.Rdefinitions <> ::R_scope:x_'>'_x not
R20139:20139 Quan.QAssert <> p:193 var
R20215:20218 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20148:20163 Quan.QState StateMap.Raw map def
R20213:20214 Quan.QAssert <> mu:194 var
R20174:20179 Quan.QState <> qstate def
R20181:20181 Quan.QAssert <> n:192 var
binder 20170:20170 <> x:195
R20186:20190 Quan.Matrix <> scale def
R20194:20194 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R20195:20195 Quan.QAssert <> n:192 var
R20200:20200 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R20201:20201 Quan.QAssert <> n:192 var
R20204:20204 Quan.QAssert <> p:193 var
R20206:20206 Quan.QAssert <> x:195 var
R20219:20220 Coq.Lists.List ListNotations ::list_scope:'['_']' not
prf 20366:20376 <> d_seman_app
binder 20386:20386 <> n:196
R20391:20403 Quan.QAssert <> State_formula ind
binder 20389:20389 <> F:197
R20415:20420 Quan.QState <> dstate def
R20422:20422 Quan.QAssert <> n:196 var
binder 20408:20409 <> mu:198
binder 20411:20413 <> mu':199
R20432:20432 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 20426:20427 <> p0:200
binder 20429:20430 <> p1:201
R20436:20436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20448:20450 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20438:20440 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20443:20446 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20441:20442 Quan.QAssert <> p0:200 var
R20441:20442 Quan.QAssert <> p0:200 var
R20451:20451 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20463:20466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20453:20455 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20458:20461 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20456:20457 Quan.QAssert <> p1:201 var
R20456:20457 Quan.QAssert <> p1:201 var
R20467:20467 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20480:20483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20469:20470 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20476:20478 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20473:20473 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R20471:20472 Quan.QAssert <> p0:200 var
R20474:20475 Quan.QAssert <> p1:201 var
R20473:20473 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R20471:20472 Quan.QAssert <> p0:200 var
R20474:20475 Quan.QAssert <> p1:201 var
R20498:20502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20484:20492 Quan.QAssert <> sat_State ind
R20497:20497 Quan.QAssert <> F:197 var
R20494:20495 Quan.QAssert <> mu:198 var
R20521:20524 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20503:20511 Quan.QAssert <> sat_State ind
R20520:20520 Quan.QAssert <> F:197 var
R20515:20517 Quan.QAssert <> mu':199 var
R20525:20533 Quan.QAssert <> sat_State ind
R20581:20581 Quan.QAssert <> F:197 var
R20536:20540 Quan.QState <> d_app def
R20563:20570 Quan.QState <> d_scalar def
R20575:20577 Quan.QAssert <> mu':199 var
R20572:20573 Quan.QAssert <> p1:201 var
R20543:20550 Quan.QState <> d_scalar def
R20555:20556 Quan.QAssert <> mu:198 var
R20552:20553 Quan.QAssert <> p0:200 var
R20697:20701 Quan.QAssert <> sat_F constr
R20697:20701 Quan.QAssert <> sat_F constr
R20718:20725 Quan.QState <> WF_d_app thm
R20718:20725 Quan.QState <> WF_d_app thm
