DIGEST 1c6f969aea8079093844bf4427370359
FQuan.QAssert
R15:19 Coq.Reals.Reals <> <> lib
R37:54 Coquelicot.Complex <> <> lib
R72:85 Coq.Strings.String <> <> lib
R103:112 Coq.Lists.List <> <> lib
R131:148 Coq.Init.Datatypes <> <> lib
R175:183 Coq.Bool.Bool <> <> lib
R210:220 Coq.Arith.Arith <> <> lib
R247:257 Coq.Arith.EqNat <> <> lib
R284:297 Coq.Arith.PeanoNat <> <> lib
R307:309 Coq.Arith.PeanoNat Nat <> mod
R336:338 Coq.micromega.Lia <> <> lib
R367:370 Quan.QIMP <> <> lib
R398:403 Quan.Matrix <> <> lib
R431:437 Quan.Quantum <> <> lib
R465:470 Quan.QState <> <> lib
R488:503 Quan.Basic_Supplement <> <> lib
ind 597:608 <> Pure_formula
constr 618:622 <> PBexp
constr 634:640 <> PUniver
R627:630 Quan.QIMP <> bexp ind
binder 625:625 <> b:3
R644:646 Coq.Init.Datatypes <> nat ind
binder 642:642 <> i:4
R653:664 Quan.QAssert <> Pure_formula:1 ind
binder 650:650 <> P:5
ind 679:682 <> QExp
constr 695:700 <> QExp_s
constr 741:746 <> QExp_t
R707:709 Coq.Init.Datatypes <> nat ind
binder 703:703 <> s:8
binder 705:705 <> e:9
R716:721 Quan.Matrix <> Vector abbrev
R725:726 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R730:730 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R728:728 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R727:727 Quan.QAssert <> e:9 var
R729:729 Quan.QAssert <> s:8 var
binder 713:713 <> v:10
R735:738 Quan.QAssert <> QExp:6 ind
R757:760 Quan.QAssert <> QExp:6 ind
binder 749:751 <> qs1:11
binder 753:755 <> qs2:12
R765:768 Quan.QAssert <> QExp:6 ind
ind 782:794 <> State_formula
constr 805:809 <> SPure
constr 830:834 <> SQuan
constr 847:851 <> SOdot
constr 876:879 <> SAnd
constr 904:907 <> SNot
constr 928:935 <> Assn_sub
R814:825 Quan.QAssert <> Pure_formula ind
binder 812:812 <> P:15
R840:843 Quan.QAssert <> QExp ind
binder 837:838 <> qs:16
R860:872 Quan.QAssert <> State_formula:13 ind
binder 854:855 <> F1:17
binder 857:858 <> F2:18
R888:900 Quan.QAssert <> State_formula:13 ind
binder 882:883 <> F1:19
binder 885:886 <> F2:20
R912:924 Quan.QAssert <> State_formula:13 ind
binder 910:910 <> F:21
R940:942 Coq.Init.Datatypes <> nat ind
binder 938:938 <> i:22
R948:951 Quan.QIMP <> aexp ind
binder 946:946 <> a:23
R957:969 Quan.QAssert <> State_formula:13 ind
binder 955:955 <> F:24
def 1386:1396 <> pro_formula
R1401:1404 Coq.Init.Datatypes <> list ind
R1408:1410 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1407:1407 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
R1411:1423 Quan.QAssert <> State_formula ind
def 1438:1449 <> npro_formula
R1454:1457 Coq.Init.Datatypes <> list ind
R1460:1472 Quan.QAssert <> State_formula ind
ind 1490:1498 <> Assertion
constr 1510:1513 <> APro
constr 1534:1538 <> ANpro
R1520:1530 Quan.QAssert <> pro_formula def
binder 1516:1517 <> pF:27
R1545:1556 Quan.QAssert <> npro_formula def
binder 1541:1542 <> nF:28
def 1572:1592 <> State_formula_to_npro
R1597:1609 Quan.QAssert <> State_formula ind
binder 1595:1595 <> F:29
R1612:1623 Quan.QAssert <> npro_formula def
R1629:1629 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1631:1631 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1630:1630 Quan.QAssert <> F:29 var
R1663:1700 Quan.QAssert <> PBexp constr
R1703:1749 Quan.QAssert <> SPure constr
R1752:1790 Quan.QAssert <> SQuan constr
R1793:1855 Quan.QAssert <> State_formula_to_npro def
R1858:1898 Quan.QAssert <> APro constr
R1901:1943 Quan.QAssert <> ANpro constr
R2322:2328 Quan.QAssert <> PUniver constr
not 2302:2302 <> ::assert_scope:'univer'_x_x
R2461:2466 Quan.QAssert <> QExp_s constr
not 2440:2440 <> ::assert_scope:'|'_x_'>['_x_'-'_x_']'
R2525:2530 Quan.QAssert <> QExp_t constr
not 2511:2511 <> ::assert_scope:x_'⊗*'_x
R2582:2585 Quan.QAssert <> SNot constr
not 2572:2572 <> ::assert_scope:'~'_x
R2631:2634 Quan.QAssert <> SAnd constr
not 2616:2616 <> ::assert_scope:x_'/\'_x
R2686:2690 Quan.QAssert <> SOdot constr
not 2669:2669 <> ::assert_scope:x_'⊙'_x
def 3006:3026 <> sum_over_list_formula
R3033:3043 Quan.QAssert <> pro_formula def
binder 3029:3030 <> pF:30
R3052:3058 Quan.Summation <> big_sum def
R3113:3118 Coq.Init.Datatypes <> length def
R3120:3121 Quan.QAssert <> pF:30 var
binder 3065:3065 <> i:31
R3070:3072 Coq.Init.Datatypes <> fst def
R3075:3077 Coq.Lists.List <> nth def
R3084:3084 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3086:3087 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3108:3108 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3088:3092 Quan.QAssert <> SPure constr
R3095:3099 Quan.QAssert <> PBexp constr
R3101:3106 Quan.QIMP <> BFalse constr
R3081:3082 Quan.QAssert <> pF:30 var
R3079:3079 Quan.QAssert <> i:31 var
def 3137:3156 <> distribution_formula
R3163:3173 Quan.QAssert <> pro_formula def
binder 3159:3160 <> pF:32
R3182:3184 Coq.Init.Logic <> and ind
R3246:3248 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3222:3242 Quan.QAssert <> sum_over_list_formula def
R3244:3245 Quan.QAssert <> pF:32 var
R3187:3192 Coq.Lists.List <> Forall ind
R3216:3217 Quan.QAssert <> pF:32 var
binder 3199:3199 <> x:33
R3205:3208 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R3209:3211 Coq.Init.Datatypes <> fst def
R3213:3213 Quan.QAssert <> x:33 var
prf 3260:3284 <> sum_over_list_nil_formula
R3312:3314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3288:3308 Quan.QAssert <> sum_over_list_formula def
R3310:3311 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3332:3352 Quan.QAssert <> sum_over_list_formula def
prf 3388:3413 <> sum_over_list_cons_formula
binder 3424:3424 <> x:34
binder 3426:3426 <> l:35
R3461:3463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3431:3451 Quan.QAssert <> sum_over_list_formula def
R3455:3458 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3454:3454 Quan.QAssert <> x:34 var
R3459:3459 Quan.QAssert <> l:35 var
R3470:3472 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R3465:3467 Coq.Init.Datatypes <> fst def
R3469:3469 Quan.QAssert <> x:34 var
R3473:3493 Quan.QAssert <> sum_over_list_formula def
R3495:3495 Quan.QAssert <> l:35 var
R3531:3551 Quan.QAssert <> sum_over_list_formula def
R3581:3593 Quan.Summation <> big_sum_shift thm
R3581:3593 Quan.Summation <> big_sum_shift thm
R3581:3593 Quan.Summation <> big_sum_shift thm
R3750:3753 Quan.QIMP <> <> mod
def 3765:3773 <> Free_pure
R3779:3790 Quan.QAssert <> Pure_formula ind
binder 3776:3776 <> P:36
R3795:3798 Quan.QIMP <> CSet def
R3811:3811 Quan.QAssert <> P:36 var
R3826:3830 Quan.QAssert <> PBexp constr
R3836:3844 Quan.QIMP <> Free_bexp def
R3856:3862 Quan.QAssert <> PUniver constr
R3872:3880 Quan.QAssert <> Free_pure:37 def
def 3902:3910 <> Free_Qexp
R3917:3920 Quan.QAssert <> QExp ind
binder 3913:3914 <> qs:39
R3925:3928 Quan.QState <> QSet def
R3941:3942 Quan.QAssert <> qs:39 var
R3955:3960 Quan.QAssert <> QExp_s constr
R3971:3981 Quan.QState <> Qsys_to_Set def
R3993:3998 Quan.QAssert <> QExp_t constr
R4011:4020 Quan.QState NSet union def
R4039:4047 Quan.QAssert <> Free_Qexp:40 def
R4023:4031 Quan.QAssert <> Free_Qexp:40 def
def 4102:4111 <> Free_state
R4117:4129 Quan.QAssert <> State_formula ind
binder 4114:4114 <> F:42
R4139:4141 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4135:4138 Quan.QIMP <> CSet def
R4142:4145 Quan.QState <> QSet def
R4158:4158 Quan.QAssert <> F:42 var
R4171:4175 Quan.QAssert <> SPure constr
R4182:4182 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4194:4196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4207:4207 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4183:4191 Quan.QAssert <> Free_pure def
R4197:4206 Quan.QState NSet empty def
R4214:4218 Quan.QAssert <> SQuan constr
R4225:4225 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4236:4237 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4250:4250 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4226:4235 Quan.QState NSet empty def
R4238:4246 Quan.QAssert <> Free_Qexp def
R4257:4261 Quan.QAssert <> SOdot constr
R4272:4272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4326:4327 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4383:4383 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4273:4282 Quan.QState NSet union def
R4307:4309 Coq.Init.Datatypes <> fst def
R4311:4320 Quan.QAssert <> Free_state:43 def
R4285:4287 Coq.Init.Datatypes <> fst def
R4290:4299 Quan.QAssert <> Free_state:43 def
R4328:4337 Quan.QState NSet union def
R4363:4365 Coq.Init.Datatypes <> snd def
R4368:4377 Quan.QAssert <> Free_state:43 def
R4340:4342 Coq.Init.Datatypes <> snd def
R4345:4354 Quan.QAssert <> Free_state:43 def
R4390:4393 Quan.QAssert <> SAnd constr
R4404:4404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4458:4459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4515:4515 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4405:4414 Quan.QState NSet union def
R4439:4441 Coq.Init.Datatypes <> fst def
R4443:4452 Quan.QAssert <> Free_state:43 def
R4417:4419 Coq.Init.Datatypes <> fst def
R4422:4431 Quan.QAssert <> Free_state:43 def
R4460:4469 Quan.QState NSet union def
R4495:4497 Coq.Init.Datatypes <> snd def
R4500:4509 Quan.QAssert <> Free_state:43 def
R4472:4474 Coq.Init.Datatypes <> snd def
R4477:4486 Quan.QAssert <> Free_state:43 def
R4522:4525 Quan.QAssert <> SNot constr
R4532:4541 Quan.QAssert <> Free_state:43 def
R4552:4559 Quan.QAssert <> Assn_sub constr
R4570:4579 Quan.QAssert <> Free_state:43 def
R4581:4581 Quan.QAssert <> F:42 var
def 4600:4607 <> Free_pro
R4613:4623 Quan.QAssert <> pro_formula def
binder 4609:4610 <> pF:45
R4632:4634 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4628:4631 Quan.QIMP <> CSet def
R4635:4638 Quan.QState <> QSet def
R4652:4653 Quan.QAssert <> pF:45 var
R4663:4664 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R4669:4669 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4680:4681 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4692:4692 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4670:4679 Quan.QState NSet empty def
R4682:4691 Quan.QState NSet empty def
R4702:4703 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4697:4697 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4699:4699 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4701:4701 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4711:4711 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4763:4783 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4837:4837 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4712:4721 Quan.QState NSet union def
R4745:4747 Coq.Init.Datatypes <> fst def
R4749:4756 Quan.QAssert <> Free_pro:46 def
R4724:4726 Coq.Init.Datatypes <> fst def
R4729:4738 Quan.QAssert <> Free_state def
R4784:4793 Quan.QState NSet union def
R4818:4820 Coq.Init.Datatypes <> snd def
R4823:4830 Quan.QAssert <> Free_pro:46 def
R4796:4798 Coq.Init.Datatypes <> snd def
R4801:4810 Quan.QAssert <> Free_state def
def 4856:4864 <> Free_npro
R4870:4881 Quan.QAssert <> npro_formula def
binder 4866:4867 <> nF:48
R4890:4892 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4886:4889 Quan.QIMP <> CSet def
R4893:4896 Quan.QState <> QSet def
R4912:4913 Quan.QAssert <> nF:48 var
R4925:4926 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R4931:4931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4942:4943 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4954:4954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4932:4941 Quan.QState NSet empty def
R4944:4953 Quan.QState NSet empty def
R4962:4963 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4970:4970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5023:5047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5102:5102 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4971:4980 Quan.QState NSet union def
R5004:5006 Coq.Init.Datatypes <> fst def
R5008:5016 Quan.QAssert <> Free_npro:49 def
R4983:4985 Coq.Init.Datatypes <> fst def
R4988:4997 Quan.QAssert <> Free_state def
R5048:5057 Quan.QState NSet union def
R5082:5084 Coq.Init.Datatypes <> snd def
R5087:5095 Quan.QAssert <> Free_npro:49 def
R5060:5062 Coq.Init.Datatypes <> snd def
R5065:5074 Quan.QAssert <> Free_state def
def 5125:5128 <> Free
R5134:5142 Quan.QAssert <> Assertion ind
binder 5131:5131 <> d:51
R5152:5154 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5148:5151 Quan.QIMP <> CSet def
R5155:5158 Quan.QState <> QSet def
R5171:5171 Quan.QAssert <> d:51 var
R5184:5187 Quan.QAssert <> APro constr
R5195:5202 Quan.QAssert <> Free_pro def
R5212:5216 Quan.QAssert <> ANpro constr
R5222:5230 Quan.QAssert <> Free_npro def
def 5453:5461 <> Pure_eval
R5465:5467 Coq.Init.Datatypes <> nat ind
binder 5463:5463 <> n:53
R5474:5485 Quan.QAssert <> Pure_formula ind
binder 5471:5472 <> pf:54
R5492:5496 Quan.QState <> state def
R5498:5498 Quan.QAssert <> n:53 var
binder 5489:5490 <> st:55
R5518:5519 Quan.QAssert <> pf:54 var
R5529:5533 Quan.QAssert <> PBexp constr
R5545:5549 Quan.QIMP <> beval def
R5551:5552 Quan.QAssert <> st:55 var
R5573:5577 Coq.Init.Logic <> False ind
R5563:5566 Coq.Init.Logic <> True ind
R5581:5587 Quan.QAssert <> PUniver constr
binder 5602:5602 <> a:58
R5605:5613 Quan.QAssert <> Pure_eval:56 def
R5618:5632 Quan.QState <> s_update_cstate def
R5638:5639 Quan.QAssert <> st:55 var
R5636:5636 Quan.QAssert <> a:58 var
def 5660:5668 <> QExp_eval
R5672:5674 Coq.Init.Datatypes <> nat ind
binder 5670:5670 <> n:59
R5682:5685 Quan.QAssert <> QExp ind
binder 5678:5679 <> qs:60
R5693:5697 Quan.QState <> state def
R5699:5699 Quan.QAssert <> n:59 var
binder 5689:5690 <> st:61
R5729:5730 Quan.QAssert <> qs:60 var
R5741:5746 Quan.QAssert <> QExp_s constr
R5845:5846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5757:5767 Quan.Basic_Supplement <> PMpar_trace def
R5842:5842 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R5841:5841 Quan.QAssert <> n:59 var
R5772:5776 Quan.Matrix <> scale def
R5780:5781 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5783:5783 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5782:5782 Quan.QAssert <> n:59 var
R5788:5789 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5791:5791 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5790:5790 Quan.QAssert <> n:59 var
R5797:5800 Quan.Complex <> ::C_scope:x_'/'_x not
R5824:5824 Quan.Complex <> ::C_scope:x_'/'_x not
R5795:5796 Quan.Complex <> C1 abbrev
R5802:5806 Quan.Matrix <> trace def
R5810:5811 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5813:5813 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R5812:5812 Quan.QAssert <> n:59 var
R5817:5819 Coq.Init.Datatypes <> snd def
R5821:5822 Quan.QAssert <> st:61 var
R5829:5831 Coq.Init.Datatypes <> snd def
R5833:5834 Quan.QAssert <> st:61 var
R5847:5859 Quan.Matrix <> outer_product def
R5869:5874 Quan.QAssert <> QExp_t constr
R5940:5975 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5928:5929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5886:5895 Quan.QState NSet inter def
R5914:5922 Quan.QAssert <> Free_Qexp def
R5898:5906 Quan.QAssert <> Free_Qexp def
R5930:5939 Quan.QState NSet empty def
R5992:5995 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5976:5984 Quan.QAssert <> QExp_eval:62 def
R5990:5991 Quan.QAssert <> st:61 var
R5996:6004 Quan.QAssert <> QExp_eval:62 def
R6010:6011 Quan.QAssert <> st:61 var
def 6049:6058 <> State_eval
R6062:6064 Coq.Init.Datatypes <> nat ind
binder 6060:6060 <> n:64
R6071:6083 Quan.QAssert <> State_formula ind
binder 6068:6069 <> sf:65
R6090:6094 Quan.QState <> state def
R6096:6096 Quan.QAssert <> n:64 var
binder 6087:6088 <> st:66
R6113:6114 Quan.QAssert <> sf:65 var
R6123:6127 Quan.QAssert <> SPure constr
R6134:6142 Quan.QAssert <> Pure_eval def
R6146:6147 Quan.QAssert <> st:66 var
R6150:6154 Quan.QAssert <> SQuan constr
R6160:6168 Quan.QAssert <> QExp_eval def
R6172:6173 Quan.QAssert <> st:66 var
R6176:6180 Quan.QAssert <> SOdot constr
R6257:6260 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6245:6246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6191:6200 Quan.QState NSet inter def
R6225:6227 Coq.Init.Datatypes <> snd def
R6230:6239 Quan.QAssert <> Free_state def
R6203:6205 Coq.Init.Datatypes <> snd def
R6208:6217 Quan.QAssert <> Free_state def
R6247:6256 Quan.QState NSet empty def
R6277:6280 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6261:6270 Quan.QAssert <> State_eval:67 def
R6275:6276 Quan.QAssert <> st:66 var
R6281:6290 Quan.QAssert <> State_eval:67 def
R6295:6296 Quan.QAssert <> st:66 var
R6299:6302 Quan.QAssert <> SAnd constr
R6329:6332 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6313:6322 Quan.QAssert <> State_eval:67 def
R6327:6328 Quan.QAssert <> st:66 var
R6333:6342 Quan.QAssert <> State_eval:67 def
R6347:6348 Quan.QAssert <> st:66 var
R6351:6354 Quan.QAssert <> SNot constr
R6361:6362 Coq.Init.Logic <> ::type_scope:'~'_x not
R6378:6378 Coq.Init.Logic <> ::type_scope:'~'_x not
R6363:6372 Quan.QAssert <> State_eval:67 def
R6376:6377 Quan.QAssert <> st:66 var
R6381:6388 Quan.QAssert <> Assn_sub constr
R6399:6408 Quan.QAssert <> State_eval:67 def
R6414:6428 Quan.QState <> s_update_cstate def
R6445:6446 Quan.QAssert <> st:66 var
R6433:6437 Quan.QIMP <> aeval def
R6439:6440 Quan.QAssert <> st:66 var
def 6464:6480 <> State_eval_dstate
R6485:6487 Coq.Init.Datatypes <> nat ind
binder 6483:6483 <> n:69
R6493:6505 Quan.QAssert <> State_formula ind
binder 6491:6491 <> F:70
R6512:6515 Coq.Init.Datatypes <> list ind
R6524:6526 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6535:6535 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6518:6523 Quan.QState <> cstate def
R6527:6532 Quan.QState <> qstate def
R6534:6534 Quan.QAssert <> n:69 var
binder 6509:6510 <> mu:71
R6555:6556 Quan.QAssert <> mu:71 var
R6566:6568 Coq.Init.Datatypes <> nil constr
R6572:6576 Coq.Init.Logic <> False ind
R6581:6581 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6593:6593 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6582:6582 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6588:6588 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6592:6592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6583:6587 Coq.Reals.Rsigma <> sigma def
R6597:6606 Quan.QAssert <> State_eval def
R6610:6610 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6616:6617 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6621:6621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6608:6608 Quan.QAssert <> F:70 var
R6637:6638 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6626:6626 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6632:6632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6636:6636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6627:6631 Coq.Reals.Rsigma <> sigma def
R6669:6672 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6644:6653 Quan.QAssert <> State_eval def
R6657:6657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6663:6664 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6668:6668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6655:6655 Quan.QAssert <> F:70 var
R6673:6689 Quan.QAssert <> State_eval_dstate:72 def
R6691:6691 Quan.QAssert <> F:70 var
ind 6930:6938 <> sat_State
constr 6994:6998 <> sat_F
R6943:6945 Coq.Init.Datatypes <> nat ind
binder 6941:6941 <> n:74
R6948:6948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6961:6965 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6949:6954 Quan.QState <> dstate def
R6958:6958 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R6966:6966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6980:6983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6967:6979 Quan.QAssert <> State_formula ind
R7012:7017 Quan.QState <> dstate def
R7021:7021 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R7022:7022 Quan.QAssert <> n:74 var
binder 7009:7010 <> mu:77
binder 7026:7026 <> F:78
R7041:7044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7029:7037 Quan.QState <> WF_dstate def
R7039:7040 Quan.QAssert <> mu:77 var
R7083:7128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7045:7061 Quan.QAssert <> State_eval_dstate def
R7066:7078 Quan.QState StateMap this proj
R7080:7081 Quan.QAssert <> mu:77 var
R7063:7063 Quan.QAssert <> F:78 var
R7129:7137 Quan.QAssert <> sat_State:75 ind
R7142:7142 Quan.QAssert <> F:78 var
R7139:7140 Quan.QAssert <> mu:77 var
def 8727:8733 <> big_and
R8743:8746 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8740:8742 Coq.Init.Datatypes <> nat ind
binder 8736:8736 <> f:79
R8760:8762 Coq.Init.Datatypes <> nat ind
binder 8754:8756 <> n_0:80
R8784:8786 Quan.QAssert <> n_0:80 var
R8802:8805 Coq.Init.Logic <> True ind
R8811:8811 Coq.Init.Datatypes <> S constr
R8819:8819 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8832:8837 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8842:8842 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8820:8826 Quan.QAssert <> big_and:81 def
R8828:8828 Quan.QAssert <> f:79 var
R8838:8838 Quan.QAssert <> f:79 var
def 8861:8870 <> big_pOplus
R8880:8883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8877:8879 Coq.Init.Datatypes <> nat ind
R8884:8884 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 8873:8873 <> f:83
R8895:8898 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8892:8894 Coq.Init.Datatypes <> nat ind
R8899:8911 Quan.QAssert <> State_formula ind
binder 8888:8888 <> g:84
R8921:8923 Coq.Init.Datatypes <> nat ind
binder 8915:8917 <> n_0:85
R8928:8938 Quan.QAssert <> pro_formula def
R8951:8953 Quan.QAssert <> n_0:85 var
R8967:8968 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8972:8972 Coq.Init.Datatypes <> S constr
R8991:8993 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9011:9011 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8979:8979 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8984:8985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8990:8990 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8980:8980 Quan.QAssert <> f:83 var
R8986:8986 Quan.QAssert <> g:84 var
R8994:9003 Quan.QAssert <> big_pOplus:86 def
R9007:9007 Quan.QAssert <> g:84 var
R9005:9005 Quan.QAssert <> f:83 var
def 9030:9038 <> big_Oplus
R9049:9052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9046:9048 Coq.Init.Datatypes <> nat ind
R9053:9065 Quan.QAssert <> State_formula ind
binder 9042:9042 <> g:88
R9075:9077 Coq.Init.Datatypes <> nat ind
binder 9069:9071 <> n_0:89
R9082:9093 Quan.QAssert <> npro_formula def
R9106:9108 Quan.QAssert <> n_0:89 var
R9122:9123 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9127:9127 Coq.Init.Datatypes <> S constr
R9134:9134 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9139:9142 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9157:9157 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9135:9135 Quan.QAssert <> g:88 var
R9143:9151 Quan.QAssert <> big_Oplus:90 def
R9153:9153 Quan.QAssert <> g:88 var
def 9392:9399 <> big_dapp
R9403:9405 Coq.Init.Datatypes <> nat ind
binder 9401:9401 <> n:92
R9416:9419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9413:9415 Coq.Init.Datatypes <> nat ind
R9420:9425 Quan.QState <> dstate def
R9429:9429 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R9430:9430 Quan.QAssert <> n:92 var
binder 9409:9409 <> f:93
R9441:9443 Coq.Init.Datatypes <> nat ind
binder 9435:9437 <> n_0:94
R9448:9453 Quan.QState <> dstate def
R9457:9457 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R9458:9458 Quan.QAssert <> n:92 var
R9473:9475 Quan.QAssert <> n_0:94 var
R9491:9497 Quan.QState <> d_empty def
R9501:9501 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R9502:9502 Quan.QAssert <> n:92 var
R9509:9509 Coq.Init.Datatypes <> S constr
R9516:9520 Quan.QState <> d_app def
R9540:9540 Quan.QAssert <> f:93 var
R9523:9530 Quan.QAssert <> big_dapp:95 def
R9532:9532 Quan.QAssert <> f:93 var
def 9563:9581 <> npro_to_pro_formula
R9587:9598 Quan.QAssert <> npro_formula def
binder 9584:9585 <> nF:97
R9608:9611 Coq.Init.Datatypes <> list ind
R9613:9613 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 9603:9605 <> p_n:98
R9617:9627 Quan.QAssert <> pro_formula def
R9643:9645 Quan.QAssert <> p_n:98 var
R9639:9640 Quan.QAssert <> nF:97 var
R9656:9657 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9665:9666 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9674:9675 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9680:9681 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9687:9690 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9697:9698 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9711:9714 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9741:9741 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9705:9705 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9707:9708 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9710:9710 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9715:9733 Quan.QAssert <> npro_to_pro_formula:99 def
def 9762:9776 <> get_pro_formula
R9782:9792 Quan.QAssert <> pro_formula def
binder 9779:9780 <> pF:102
R9796:9799 Coq.Init.Datatypes <> list ind
R9801:9801 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
R9815:9816 Quan.QAssert <> pF:102 var
R9829:9830 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9835:9836 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9849:9850 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9843:9843 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9845:9846 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9848:9848 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9859:9862 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9882:9882 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9863:9877 Quan.QAssert <> get_pro_formula:103 def
ind 9931:9940 <> sat_Assert
constr 9990:9997 <> sat_APro
constr 10541:10549 <> sat_ANpro
R9945:9947 Coq.Init.Datatypes <> nat ind
binder 9943:9943 <> n:105
R9951:9951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9964:9967 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9952:9957 Quan.QState <> dstate def
R9961:9961 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R9968:9968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9978:9981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9969:9977 Quan.QAssert <> Assertion ind
R10011:10016 Quan.QState <> dstate def
R10020:10020 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10021:10021 Quan.QAssert <> n:105 var
binder 10008:10009 <> mu:108
binder 10025:10026 <> pF:109
R10035:10038 Coq.Init.Datatypes <> list ind
R10041:10046 Quan.QState <> dstate def
R10050:10050 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10051:10051 Quan.QAssert <> n:105 var
binder 10029:10032 <> mu_n:110
R10087:10090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10075:10083 Quan.QState <> WF_dstate def
R10085:10086 Quan.QAssert <> mu:108 var
R10114:10133 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10091:10110 Quan.QAssert <> distribution_formula def
R10112:10113 Quan.QAssert <> pF:109 var
R10492:10515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10283:10302 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10134:10142 Quan.QState <> dstate_eq def
R10148:10155 Quan.QAssert <> big_dapp def
R10272:10277 Coq.Init.Datatypes <> length def
R10279:10280 Quan.QAssert <> pF:109 var
R10164:10166 Coq.Init.Datatypes <> nat ind
binder 10162:10162 <> i:111
R10169:10176 Quan.QState <> d_scalar def
R10242:10244 Coq.Lists.List <> nth def
R10254:10260 Quan.QState <> d_empty def
R10264:10264 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10265:10265 Quan.QAssert <> n:105 var
R10248:10251 Quan.QAssert <> mu_n:110 var
R10246:10246 Quan.QAssert <> i:111 var
R10179:10181 Coq.Init.Datatypes <> fst def
R10184:10186 Coq.Lists.List <> nth def
R10193:10193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10195:10196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10217:10217 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10197:10201 Quan.QAssert <> SPure constr
R10204:10208 Quan.QAssert <> PBexp constr
R10210:10215 Quan.QIMP <> BFalse constr
R10190:10191 Quan.QAssert <> pF:109 var
R10188:10188 Quan.QAssert <> i:111 var
R10144:10145 Quan.QAssert <> mu:108 var
R10303:10309 Quan.QAssert <> big_and def
R10318:10320 Coq.Init.Datatypes <> nat ind
binder 10316:10316 <> i:112
R10324:10324 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10406:10427 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10325:10333 Quan.QAssert <> sat_State ind
R10365:10367 Coq.Init.Datatypes <> snd def
R10370:10372 Coq.Lists.List <> nth def
R10379:10379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10381:10382 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10403:10403 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10383:10387 Quan.QAssert <> SPure constr
R10390:10394 Quan.QAssert <> PBexp constr
R10396:10401 Quan.QIMP <> BFalse constr
R10376:10377 Quan.QAssert <> pF:109 var
R10374:10374 Quan.QAssert <> i:112 var
R10336:10338 Coq.Lists.List <> nth def
R10348:10354 Quan.QState <> d_empty def
R10358:10358 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10359:10359 Quan.QAssert <> n:105 var
R10342:10345 Quan.QAssert <> mu_n:110 var
R10340:10340 Quan.QAssert <> i:112 var
R10438:10439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10428:10434 Quan.QState <> d_trace def
R10436:10437 Quan.QAssert <> mu:108 var
R10440:10446 Quan.QState <> d_trace def
R10450:10452 Coq.Lists.List <> nth def
R10462:10468 Quan.QState <> d_empty def
R10472:10472 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10473:10473 Quan.QAssert <> n:105 var
R10456:10459 Quan.QAssert <> mu_n:110 var
R10454:10454 Quan.QAssert <> i:112 var
R10482:10487 Coq.Init.Datatypes <> length def
R10489:10490 Quan.QAssert <> pF:109 var
R10516:10525 Quan.QAssert <> sat_Assert:106 ind
R10531:10534 Quan.QAssert <> APro constr
R10536:10537 Quan.QAssert <> pF:109 var
R10527:10528 Quan.QAssert <> mu:108 var
R10563:10568 Quan.QState <> dstate def
R10572:10572 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10573:10573 Quan.QAssert <> n:105 var
binder 10560:10561 <> mu:113
binder 10577:10578 <> nF:114
R10585:10588 Coq.Init.Datatypes <> list ind
R10590:10590 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 10581:10583 <> p_n:115
R10615:10615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10624:10628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10618:10621 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R10616:10617 Quan.QAssert <> nF:114 var
R10622:10623 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10671:10693 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10629:10638 Quan.QAssert <> sat_Assert:106 ind
R10644:10662 Quan.QAssert <> npro_to_pro_formula def
R10664:10665 Quan.QAssert <> nF:114 var
R10667:10669 Quan.QAssert <> p_n:115 var
R10640:10641 Quan.QAssert <> mu:113 var
R10694:10703 Quan.QAssert <> sat_Assert:106 ind
R10709:10713 Quan.QAssert <> ANpro constr
R10715:10716 Quan.QAssert <> nF:114 var
R10705:10706 Quan.QAssert <> mu:113 var
prf 10728:10739 <> WF_sat_State
R10743:10745 Coq.Init.Datatypes <> nat ind
binder 10741:10741 <> n:116
R10761:10766 Quan.QState <> dstate def
R10770:10770 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R10771:10771 Quan.QAssert <> n:116 var
binder 10758:10759 <> mu:117
R10778:10790 Quan.QAssert <> State_formula ind
binder 10776:10776 <> F:118
R10809:10812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10795:10803 Quan.QAssert <> sat_State ind
R10808:10808 Quan.QAssert <> F:118 var
R10805:10806 Quan.QAssert <> mu:117 var
R10835:10838 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10829:10832 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R10813:10825 Quan.QState StateMap this proj
R10827:10828 Quan.QAssert <> mu:117 var
R10833:10834 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R10839:10847 Quan.QState <> WF_dstate def
R10849:10850 Quan.QAssert <> mu:117 var
prf 11025:11036 <> WF_dstate_eq
binder 11038:11038 <> n:119
R11058:11063 Quan.QState <> dstate def
R11067:11067 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R11068:11068 Quan.QAssert <> n:119 var
binder 11050:11051 <> mu:120
binder 11053:11055 <> mu':121
R11089:11091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11073:11081 Quan.QState <> dstate_eq def
R11086:11088 Quan.QAssert <> mu':121 var
R11083:11084 Quan.QAssert <> mu:120 var
R11104:11107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11092:11100 Quan.QState <> WF_dstate def
R11102:11103 Quan.QAssert <> mu:120 var
R11108:11116 Quan.QState <> WF_dstate def
R11118:11120 Quan.QAssert <> mu':121 var
R11137:11145 Quan.QState <> WF_dstate def
R11155:11163 Quan.QState <> dstate_eq def
prf 11269:11281 <> dstate_eq_sym
R11285:11287 Coq.Init.Datatypes <> nat ind
binder 11283:11283 <> n:122
R11307:11312 Quan.QState <> dstate def
R11316:11316 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R11317:11317 Quan.QAssert <> n:122 var
binder 11298:11300 <> mu1:123
binder 11302:11304 <> mu2:124
R11339:11341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11322:11330 Quan.QState <> dstate_eq def
R11336:11338 Quan.QAssert <> mu2:124 var
R11332:11334 Quan.QAssert <> mu1:123 var
R11342:11350 Quan.QState <> dstate_eq def
R11356:11358 Quan.QAssert <> mu1:123 var
R11352:11354 Quan.QAssert <> mu2:124 var
R11409:11417 Quan.QState <> dstate_eq def
prf 12440:12452 <> WF_sat_Assert
R12456:12458 Coq.Init.Datatypes <> nat ind
binder 12454:12454 <> n:125
R12473:12478 Quan.QState <> dstate def
R12482:12482 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R12483:12483 Quan.QAssert <> n:125 var
binder 12470:12471 <> mu:126
R12490:12498 Quan.QAssert <> Assertion ind
binder 12488:12488 <> D:127
R12519:12521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12503:12512 Quan.QAssert <> sat_Assert ind
R12518:12518 Quan.QAssert <> D:127 var
R12515:12516 Quan.QAssert <> mu:126 var
R12544:12547 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R12538:12541 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12522:12534 Quan.QState StateMap this proj
R12536:12537 Quan.QAssert <> mu:126 var
R12542:12543 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R12548:12556 Quan.QState <> WF_dstate def
R12558:12559 Quan.QAssert <> mu:126 var
prf 12723:12735 <> state_eq_aexp
R12739:12741 Coq.Init.Datatypes <> nat ind
binder 12737:12737 <> n:128
R12760:12764 Quan.QState <> state def
R12766:12766 Quan.QAssert <> n:128 var
binder 12753:12754 <> st:129
binder 12756:12758 <> st':130
R12774:12777 Quan.QIMP <> aexp ind
binder 12772:12772 <> a:131
R12801:12803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12781:12781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12788:12792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12800:12800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12782:12784 Coq.Init.Datatypes <> fst def
R12786:12787 Quan.QAssert <> st:129 var
R12793:12795 Coq.Init.Datatypes <> fst def
R12797:12799 Quan.QAssert <> st':130 var
R12804:12804 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12815:12818 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12805:12809 Quan.QIMP <> aeval def
R12814:12814 Quan.QAssert <> a:131 var
R12811:12812 Quan.QAssert <> st:129 var
R12819:12823 Quan.QIMP <> aeval def
R12829:12829 Quan.QAssert <> a:131 var
R12825:12827 Quan.QAssert <> st':130 var
prf 13104:13116 <> state_eq_bexp
R13120:13122 Coq.Init.Datatypes <> nat ind
binder 13118:13118 <> n:132
R13141:13145 Quan.QState <> state def
R13147:13147 Quan.QAssert <> n:132 var
binder 13134:13135 <> st:133
binder 13137:13139 <> st':134
R13153:13156 Quan.QIMP <> bexp ind
binder 13151:13151 <> b:135
R13180:13182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13160:13160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13167:13171 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13179:13179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13161:13163 Coq.Init.Datatypes <> fst def
R13165:13166 Quan.QAssert <> st:133 var
R13172:13174 Coq.Init.Datatypes <> fst def
R13176:13178 Quan.QAssert <> st':134 var
R13183:13183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13194:13197 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13184:13188 Quan.QIMP <> beval def
R13193:13193 Quan.QAssert <> b:135 var
R13190:13191 Quan.QAssert <> st:133 var
R13198:13202 Quan.QIMP <> beval def
R13208:13208 Quan.QAssert <> b:135 var
R13204:13206 Quan.QAssert <> st':134 var
R13323:13335 Quan.QAssert <> state_eq_aexp thm
R13323:13335 Quan.QAssert <> state_eq_aexp thm
R13323:13335 Quan.QAssert <> state_eq_aexp thm
R13323:13335 Quan.QAssert <> state_eq_aexp thm
R13366:13378 Quan.QAssert <> state_eq_aexp thm
R13366:13378 Quan.QAssert <> state_eq_aexp thm
R13366:13378 Quan.QAssert <> state_eq_aexp thm
R13366:13378 Quan.QAssert <> state_eq_aexp thm
R13463:13475 Quan.QAssert <> state_eq_aexp thm
R13463:13475 Quan.QAssert <> state_eq_aexp thm
R13463:13475 Quan.QAssert <> state_eq_aexp thm
R13463:13475 Quan.QAssert <> state_eq_aexp thm
R13504:13516 Quan.QAssert <> state_eq_aexp thm
R13504:13516 Quan.QAssert <> state_eq_aexp thm
R13504:13516 Quan.QAssert <> state_eq_aexp thm
R13504:13516 Quan.QAssert <> state_eq_aexp thm
R13599:13611 Quan.QAssert <> state_eq_aexp thm
R13599:13611 Quan.QAssert <> state_eq_aexp thm
R13599:13611 Quan.QAssert <> state_eq_aexp thm
R13599:13611 Quan.QAssert <> state_eq_aexp thm
R13641:13653 Quan.QAssert <> state_eq_aexp thm
R13641:13653 Quan.QAssert <> state_eq_aexp thm
R13641:13653 Quan.QAssert <> state_eq_aexp thm
R13641:13653 Quan.QAssert <> state_eq_aexp thm
R13736:13748 Quan.QAssert <> state_eq_aexp thm
R13736:13748 Quan.QAssert <> state_eq_aexp thm
R13736:13748 Quan.QAssert <> state_eq_aexp thm
R13736:13748 Quan.QAssert <> state_eq_aexp thm
R13777:13789 Quan.QAssert <> state_eq_aexp thm
R13777:13789 Quan.QAssert <> state_eq_aexp thm
R13777:13789 Quan.QAssert <> state_eq_aexp thm
R13777:13789 Quan.QAssert <> state_eq_aexp thm
prf 13992:14003 <> bexp_Pure_eq
R14007:14009 Coq.Init.Datatypes <> nat ind
binder 14005:14005 <> n:136
R14029:14033 Quan.QState <> state def
R14035:14035 Quan.QAssert <> n:136 var
binder 14022:14023 <> st:137
binder 14025:14027 <> st':138
R14042:14045 Quan.QIMP <> bexp ind
binder 14040:14040 <> b:139
R14051:14051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14078:14082 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14052:14052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14063:14066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14053:14057 Quan.QIMP <> beval def
R14062:14062 Quan.QAssert <> b:139 var
R14059:14060 Quan.QAssert <> st:137 var
R14067:14071 Quan.QIMP <> beval def
R14077:14077 Quan.QAssert <> b:139 var
R14073:14075 Quan.QAssert <> st':138 var
R14083:14083 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14099:14103 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14120:14120 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14084:14093 Quan.QAssert <> State_eval def
R14097:14098 Quan.QAssert <> st:137 var
R14095:14095 Quan.QAssert <> b:139 var
R14104:14113 Quan.QAssert <> State_eval def
R14117:14119 Quan.QAssert <> st':138 var
R14115:14115 Quan.QAssert <> b:139 var
R14157:14161 Quan.QIMP <> beval def
R14157:14161 Quan.QIMP <> beval def
prf 14249:14261 <> state_eq_Pure
R14265:14267 Coq.Init.Datatypes <> nat ind
binder 14263:14263 <> n:140
R14281:14292 Quan.QAssert <> Pure_formula ind
binder 14279:14279 <> P:141
R14303:14307 Quan.QState <> state def
R14309:14309 Quan.QAssert <> n:140 var
binder 14296:14297 <> st:142
binder 14299:14301 <> st':143
R14333:14335 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14314:14314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14321:14324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14332:14332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14315:14317 Coq.Init.Datatypes <> fst def
R14319:14320 Quan.QAssert <> st:142 var
R14325:14327 Coq.Init.Datatypes <> fst def
R14329:14331 Quan.QAssert <> st':143 var
R14336:14336 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14352:14356 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14337:14346 Quan.QAssert <> State_eval def
R14350:14351 Quan.QAssert <> st:142 var
R14348:14348 Quan.QAssert <> P:141 var
R14357:14366 Quan.QAssert <> State_eval def
R14370:14372 Quan.QAssert <> st':143 var
R14368:14368 Quan.QAssert <> P:141 var
R14417:14428 Quan.QAssert <> bexp_Pure_eq thm
R14417:14428 Quan.QAssert <> bexp_Pure_eq thm
R14457:14469 Quan.QAssert <> state_eq_bexp thm
R14457:14469 Quan.QAssert <> state_eq_bexp thm
R14457:14469 Quan.QAssert <> state_eq_bexp thm
R14457:14469 Quan.QAssert <> state_eq_bexp thm
R14575:14589 Quan.QState <> s_update_cstate def
R14687:14687 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14703:14704 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14706:14706 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14688:14695 Quan.QState <> c_update def
R14687:14687 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14703:14704 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14706:14706 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14688:14695 Quan.QState <> c_update def
R14764:14765 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14781:14783 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14786:14786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14766:14773 Quan.QState <> c_update def
R14764:14765 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14781:14783 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14786:14786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14766:14773 Quan.QState <> c_update def
prf 14840:14853 <> qstate_eq_Qexp
R14867:14870 Quan.QAssert <> QExp ind
binder 14863:14864 <> qs:144
R14877:14879 Coq.Init.Datatypes <> nat ind
binder 14875:14875 <> n:145
R14890:14894 Quan.QState <> state def
R14896:14896 Quan.QAssert <> n:145 var
binder 14883:14884 <> st:146
binder 14886:14888 <> st':147
R14918:14923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14909:14910 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14903:14905 Coq.Init.Datatypes <> snd def
R14907:14908 Quan.QAssert <> st:146 var
R14911:14913 Coq.Init.Datatypes <> snd def
R14915:14917 Quan.QAssert <> st':147 var
R14940:14943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14924:14932 Quan.QAssert <> QExp_eval def
R14938:14939 Quan.QAssert <> st:146 var
R14935:14936 Quan.QAssert <> qs:144 var
R14944:14952 Quan.QAssert <> QExp_eval def
R14958:14960 Quan.QAssert <> st':147 var
R14955:14956 Quan.QAssert <> qs:144 var
def 15187:15200 <> assert_implies
R15209:15217 Quan.QAssert <> Assertion ind
binder 15203:15203 <> P:148
binder 15205:15205 <> Q:149
R15244:15246 Coq.Init.Datatypes <> nat ind
binder 15242:15242 <> n:150
R15253:15258 Quan.QState <> dstate def
R15262:15262 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R15263:15263 Quan.QAssert <> n:150 var
binder 15250:15251 <> mu:151
R15284:15287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15268:15277 Quan.QAssert <> sat_Assert ind
R15283:15283 Quan.QAssert <> P:148 var
R15280:15281 Quan.QAssert <> mu:151 var
R15288:15297 Quan.QAssert <> sat_Assert ind
R15303:15303 Quan.QAssert <> Q:149 var
R15300:15301 Quan.QAssert <> mu:151 var
R15330:15343 Quan.QAssert <> assert_implies def
not 15316:15316 <> ::assert_scope:x_'->>'_x
R15444:15444 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R15452:15457 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R15465:15465 Quan.QAssert <> ::assert_scope:x_'/\'_x not
R15446:15450 Quan.QAssert <> ::assert_scope:x_'->>'_x not
R15459:15463 Quan.QAssert <> ::assert_scope:x_'->>'_x not
not 15424:15424 <> ::assert_scope:x_'<<->>'_x
prf 15532:15544 <> Mscale_not_0'
R15558:15560 Coq.Init.Datatypes <> nat ind
binder 15554:15554 <> m:152
binder 15556:15556 <> n:153
R15566:15571 Quan.Matrix <> Matrix def
R15573:15573 Quan.QAssert <> m:152 var
R15575:15575 Quan.QAssert <> n:153 var
binder 15564:15564 <> A:154
R15582:15582 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 15579:15579 <> p:155
R15600:15603 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15592:15595 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R15588:15590 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R15587:15587 Quan.QAssert <> p:155 var
R15591:15591 Quan.QAssert <> A:154 var
R15596:15599 Quan.Matrix <> Zero def
R15605:15606 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R15604:15604 Quan.QAssert <> A:154 var
R15607:15610 Quan.Matrix <> Zero def
R15628:15630 Coq.Init.Logic <> not def
R15669:15678 Quan.Matrix <> Mscale_0_r thm
R15669:15678 Quan.Matrix <> Mscale_0_r thm
R15669:15678 Quan.Matrix <> Mscale_0_r thm
prf 15737:15755 <> s_seman_scalar_Qexp
R15770:15773 Quan.QAssert <> QExp ind
binder 15767:15768 <> qs:156
R15779:15779 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 15777:15777 <> p:157
R15786:15788 Coq.Init.Datatypes <> nat ind
binder 15784:15784 <> n:158
R15795:15799 Quan.QState <> state def
R15801:15801 Quan.QAssert <> n:158 var
binder 15792:15793 <> st:159
R15811:15814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15806:15806 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R15808:15809 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R15807:15807 Quan.QAssert <> p:157 var
R15807:15807 Quan.QAssert <> p:157 var
R15826:15830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15879:15879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15815:15822 Quan.QState <> WF_state def
R15824:15825 Quan.QAssert <> st:159 var
R15846:15850 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15831:15839 Quan.QAssert <> QExp_eval def
R15844:15845 Quan.QAssert <> st:159 var
R15841:15842 Quan.QAssert <> qs:156 var
R15851:15859 Quan.QAssert <> QExp_eval def
R15865:15872 Quan.QState <> s_scalar def
R15876:15877 Quan.QAssert <> st:159 var
R15874:15874 Quan.QAssert <> p:157 var
R15861:15862 Quan.QAssert <> qs:156 var
R15998:16012 Quan.Matrix <> trace_mult_dist thm
R15998:16012 Quan.Matrix <> trace_mult_dist thm
R15998:16012 Quan.Matrix <> trace_mult_dist thm
R16029:16039 Quan.Complex <> Cdiv_unfold thm
R16029:16039 Quan.Complex <> Cdiv_unfold thm
R16029:16039 Quan.Complex <> Cdiv_unfold thm
R16056:16067 Quan.Matrix <> Mscale_assoc thm
R16056:16067 Quan.Matrix <> Mscale_assoc thm
R16056:16067 Quan.Matrix <> Mscale_assoc thm
R16086:16096 Quan.Complex <> Cmult_assoc thm
R16086:16096 Quan.Complex <> Cmult_assoc thm
R16086:16096 Quan.Complex <> Cmult_assoc thm
R16113:16127 Quan.Complex <> Cinv_mult_distr thm
R16113:16127 Quan.Complex <> Cinv_mult_distr thm
R16113:16127 Quan.Complex <> Cinv_mult_distr thm
R16113:16127 Quan.Complex <> Cinv_mult_distr thm
R16113:16127 Quan.Complex <> Cinv_mult_distr thm
R16147:16157 Quan.Complex <> Cmult_assoc thm
R16147:16157 Quan.Complex <> Cmult_assoc thm
R16147:16157 Quan.Complex <> Cmult_assoc thm
R16195:16198 Quan.Complex <> RtoC def
R16174:16183 Quan.Complex <> Cmult_comm thm
R16195:16198 Quan.Complex <> RtoC def
R16174:16183 Quan.Complex <> Cmult_comm thm
R16195:16198 Quan.Complex <> RtoC def
R16174:16183 Quan.Complex <> Cmult_comm thm
R16241:16244 Quan.Complex <> RtoC def
R16219:16229 Quan.Complex <> Cmult_assoc thm
R16241:16244 Quan.Complex <> RtoC def
R16219:16229 Quan.Complex <> Cmult_assoc thm
R16241:16244 Quan.Complex <> RtoC def
R16219:16229 Quan.Complex <> Cmult_assoc thm
R16265:16270 Quan.Complex <> Cinv_l thm
R16265:16270 Quan.Complex <> Cinv_l thm
R16265:16270 Quan.Complex <> Cinv_l thm
R16265:16270 Quan.Complex <> Cinv_l thm
R16287:16297 Quan.Complex <> Cmult_assoc thm
R16287:16297 Quan.Complex <> Cmult_assoc thm
R16287:16297 Quan.Complex <> Cmult_assoc thm
R16314:16322 Quan.Complex <> Cmult_1_l thm
R16314:16322 Quan.Complex <> Cmult_1_l thm
R16314:16322 Quan.Complex <> Cmult_1_l thm
R16355:16362 Quan.Complex <> RtoC_neq thm
R16355:16362 Quan.Complex <> RtoC_neq thm
R16417:16424 Quan.Complex <> RtoC_neq thm
R16417:16424 Quan.Complex <> RtoC_neq thm
R16479:16491 Quan.QState <> WF_state_gt_0 thm
R16479:16491 Quan.QState <> WF_state_gt_0 thm
R16526:16528 Coq.Init.Logic <> not def
R16553:16559 Quan.QState <> s_trace def
R16617:16622 Quan.Complex <> Cmod_0 thm
R16617:16622 Quan.Complex <> Cmod_0 thm
R16617:16622 Quan.Complex <> Cmod_0 thm
R16884:16898 Quan.Matrix <> trace_mult_dist thm
R16884:16898 Quan.Matrix <> trace_mult_dist thm
R16884:16898 Quan.Matrix <> trace_mult_dist thm
R16915:16925 Quan.Complex <> Cdiv_unfold thm
R16915:16925 Quan.Complex <> Cdiv_unfold thm
R16915:16925 Quan.Complex <> Cdiv_unfold thm
R16942:16953 Quan.Matrix <> Mscale_assoc thm
R16942:16953 Quan.Matrix <> Mscale_assoc thm
R16942:16953 Quan.Matrix <> Mscale_assoc thm
R16972:16982 Quan.Complex <> Cmult_assoc thm
R16972:16982 Quan.Complex <> Cmult_assoc thm
R16972:16982 Quan.Complex <> Cmult_assoc thm
R16999:17013 Quan.Complex <> Cinv_mult_distr thm
R16999:17013 Quan.Complex <> Cinv_mult_distr thm
R16999:17013 Quan.Complex <> Cinv_mult_distr thm
R16999:17013 Quan.Complex <> Cinv_mult_distr thm
R16999:17013 Quan.Complex <> Cinv_mult_distr thm
R17033:17043 Quan.Complex <> Cmult_assoc thm
R17033:17043 Quan.Complex <> Cmult_assoc thm
R17033:17043 Quan.Complex <> Cmult_assoc thm
R17081:17084 Quan.Complex <> RtoC def
R17060:17069 Quan.Complex <> Cmult_comm thm
R17081:17084 Quan.Complex <> RtoC def
R17060:17069 Quan.Complex <> Cmult_comm thm
R17081:17084 Quan.Complex <> RtoC def
R17060:17069 Quan.Complex <> Cmult_comm thm
R17127:17130 Quan.Complex <> RtoC def
R17105:17115 Quan.Complex <> Cmult_assoc thm
R17127:17130 Quan.Complex <> RtoC def
R17105:17115 Quan.Complex <> Cmult_assoc thm
R17127:17130 Quan.Complex <> RtoC def
R17105:17115 Quan.Complex <> Cmult_assoc thm
R17151:17156 Quan.Complex <> Cinv_l thm
R17151:17156 Quan.Complex <> Cinv_l thm
R17151:17156 Quan.Complex <> Cinv_l thm
R17151:17156 Quan.Complex <> Cinv_l thm
R17173:17183 Quan.Complex <> Cmult_assoc thm
R17173:17183 Quan.Complex <> Cmult_assoc thm
R17173:17183 Quan.Complex <> Cmult_assoc thm
R17200:17208 Quan.Complex <> Cmult_1_l thm
R17200:17208 Quan.Complex <> Cmult_1_l thm
R17200:17208 Quan.Complex <> Cmult_1_l thm
R17240:17247 Quan.Complex <> RtoC_neq thm
R17240:17247 Quan.Complex <> RtoC_neq thm
R17302:17309 Quan.Complex <> RtoC_neq thm
R17302:17309 Quan.Complex <> RtoC_neq thm
R17364:17376 Quan.QState <> WF_state_gt_0 thm
R17364:17376 Quan.QState <> WF_state_gt_0 thm
R17411:17413 Coq.Init.Logic <> not def
R17438:17444 Quan.QState <> s_trace def
R17497:17502 Quan.Complex <> Cmod_0 thm
R17497:17502 Quan.Complex <> Cmod_0 thm
R17497:17502 Quan.Complex <> Cmod_0 thm
prf 17747:17760 <> s_seman_scalar
R17773:17785 Quan.QAssert <> State_formula ind
binder 17771:17771 <> F:160
R17791:17791 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 17789:17789 <> p:161
binder 17794:17794 <> n:162
R17801:17805 Quan.QState <> state def
R17807:17807 Quan.QAssert <> n:162 var
binder 17798:17799 <> st:163
R17817:17819 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17812:17812 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R17814:17815 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R17813:17813 Quan.QAssert <> p:161 var
R17813:17813 Quan.QAssert <> p:161 var
R17820:17820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17832:17836 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17885:17885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17821:17828 Quan.QState <> WF_state def
R17830:17831 Quan.QAssert <> st:163 var
R17852:17856 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17837:17846 Quan.QAssert <> State_eval def
R17850:17851 Quan.QAssert <> st:163 var
R17848:17848 Quan.QAssert <> F:160 var
R17857:17866 Quan.QAssert <> State_eval def
R17871:17878 Quan.QState <> s_scalar def
R17882:17883 Quan.QAssert <> st:163 var
R17880:17880 Quan.QAssert <> p:161 var
R17868:17868 Quan.QAssert <> F:160 var
R17935:17947 Quan.QAssert <> state_eq_Pure thm
R17956:17963 Quan.QState <> s_scalar def
R17935:17947 Quan.QAssert <> state_eq_Pure thm
R17956:17963 Quan.QState <> s_scalar def
R18019:18031 Quan.QAssert <> state_eq_Pure thm
R18037:18044 Quan.QState <> s_scalar def
R18019:18031 Quan.QAssert <> state_eq_Pure thm
R18037:18044 Quan.QState <> s_scalar def
R18096:18114 Quan.QAssert <> s_seman_scalar_Qexp thm
R18096:18114 Quan.QAssert <> s_seman_scalar_Qexp thm
R18476:18478 Coq.Init.Logic <> not def
R18501:18503 Coq.Init.Logic <> not def
R18527:18536 Quan.QAssert <> State_eval def
R18527:18536 Quan.QAssert <> State_eval def
R18637:18646 Quan.QAssert <> State_eval def
R18651:18658 Quan.QState <> s_scalar def
R18637:18646 Quan.QAssert <> State_eval def
R18651:18658 Quan.QState <> s_scalar def
R18803:18817 Quan.QState <> s_update_cstate def
R18854:18861 Quan.QState <> s_scalar def
R18888:18888 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18918:18919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18921:18921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18889:18896 Quan.QState <> c_update def
R18901:18905 Quan.QIMP <> aeval def
R18907:18907 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18909:18910 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18912:18912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18951:18958 Quan.QState <> s_scalar def
R18888:18888 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18918:18919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18921:18921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18889:18896 Quan.QState <> c_update def
R18901:18905 Quan.QIMP <> aeval def
R18907:18907 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18909:18910 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18912:18912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18991:18992 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19017:19017 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18977:18981 Quan.QIMP <> aeval def
R18983:18983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18985:18986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18988:18988 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18994:18998 Quan.QIMP <> aeval def
R19002:19002 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19004:19006 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19013:19014 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19008:19011 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R18991:18992 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19017:19017 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18977:18981 Quan.QIMP <> aeval def
R18983:18983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18985:18986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18988:18988 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18994:18998 Quan.QIMP <> aeval def
R19002:19002 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19004:19006 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19013:19014 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19008:19011 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R19029:19041 Quan.QAssert <> state_eq_aexp thm
R19029:19041 Quan.QAssert <> state_eq_aexp thm
R19107:19114 Quan.QState <> WF_state def
R19133:19140 Quan.QState <> WF_state def
R19186:19192 Quan.QState <> s_trace def
R19223:19230 Quan.QState <> s_scalar def
R19273:19273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19260:19264 Quan.QIMP <> aeval def
R19266:19266 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19268:19268 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19270:19270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19276:19280 Quan.QIMP <> aeval def
R19284:19284 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19286:19287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19294:19294 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19289:19292 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R19273:19273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19260:19264 Quan.QIMP <> aeval def
R19266:19266 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19268:19268 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19270:19270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19276:19280 Quan.QIMP <> aeval def
R19284:19284 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19286:19287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19294:19294 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19289:19292 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R19309:19321 Quan.QAssert <> state_eq_aexp thm
R19309:19321 Quan.QAssert <> state_eq_aexp thm
R19374:19381 Quan.QState <> s_scalar def
R19422:19422 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19457:19459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19461:19461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19423:19430 Quan.QState <> c_update def
R19435:19439 Quan.QIMP <> aeval def
R19441:19441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19443:19444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19446:19446 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19422:19422 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19457:19459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19461:19461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19423:19430 Quan.QState <> c_update def
R19435:19439 Quan.QIMP <> aeval def
R19441:19441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19443:19444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19446:19446 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19515:19522 Quan.QState <> WF_state def
R19541:19548 Quan.QState <> WF_state def
prf 19622:19640 <> d_seman_scalar_Qexp
R19654:19666 Quan.QAssert <> State_formula ind
binder 19652:19652 <> F:164
R19672:19672 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 19670:19670 <> p:165
R19679:19681 Coq.Init.Datatypes <> nat ind
binder 19677:19677 <> n:166
R19688:19691 Coq.Init.Datatypes <> list ind
R19700:19702 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19694:19699 Quan.QState <> cstate def
R19703:19708 Quan.QState <> qstate def
R19710:19710 Quan.QAssert <> n:166 var
binder 19685:19686 <> mu:167
R19721:19724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19716:19716 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R19718:19719 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R19717:19717 Quan.QAssert <> p:165 var
R19717:19717 Quan.QAssert <> p:165 var
R19741:19745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19845:19845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19725:19737 Quan.QState <> WF_dstate_aux ind
R19739:19740 Quan.QAssert <> mu:167 var
R19768:19770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19746:19762 Quan.QAssert <> State_eval_dstate def
R19766:19767 Quan.QAssert <> mu:167 var
R19764:19764 Quan.QAssert <> F:164 var
R19772:19788 Quan.QAssert <> State_eval_dstate def
R19790:19790 Quan.QAssert <> n:166 var
R19792:19792 Quan.QAssert <> F:164 var
R19796:19811 Quan.QState StateMap.Raw map def
R19842:19843 Quan.QAssert <> mu:167 var
R19822:19827 Quan.QState <> qstate def
R19829:19829 Quan.QAssert <> n:166 var
binder 19818:19818 <> x:168
R19835:19838 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R19834:19834 Quan.QAssert <> p:165 var
R19839:19839 Quan.QAssert <> x:168 var
R19966:19975 Quan.QAssert <> State_eval def
R19981:19988 Quan.QState <> s_scalar def
R19992:19992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19994:19995 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19997:19997 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19966:19975 Quan.QAssert <> State_eval def
R19981:19988 Quan.QState <> s_scalar def
R19992:19992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19994:19995 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19997:19997 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20015:20028 Quan.QAssert <> s_seman_scalar thm
R20015:20028 Quan.QAssert <> s_seman_scalar thm
R20105:20112 Quan.QState <> s_scalar def
R20202:20211 Quan.QAssert <> State_eval def
R20216:20223 Quan.QState <> s_scalar def
R20227:20227 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20229:20230 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20232:20232 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20202:20211 Quan.QAssert <> State_eval def
R20216:20223 Quan.QState <> s_scalar def
R20227:20227 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20229:20230 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20232:20232 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20250:20263 Quan.QAssert <> s_seman_scalar thm
R20250:20263 Quan.QAssert <> s_seman_scalar thm
R20340:20347 Quan.QState <> s_scalar def
R20404:20420 Quan.QAssert <> State_eval_dstate def
R20434:20449 Quan.QState StateMap.Raw map def
R20499:20502 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R20491:20491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20494:20495 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20498:20498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20460:20465 Quan.QState <> qstate def
binder 20456:20456 <> x:169
R20473:20476 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R20477:20477 Quan.QAssert <> x:169 var
R20404:20420 Quan.QAssert <> State_eval_dstate def
R20434:20449 Quan.QState StateMap.Raw map def
R20499:20502 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R20491:20491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20494:20495 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20498:20498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20460:20465 Quan.QState <> qstate def
binder 20456:20456 <> x:170
R20473:20476 Quan.Matrix <> ::matrix_scope:x_'.*'_x not
R20477:20477 Quan.QAssert <> x:170 var
prf 20682:20695 <> d_seman_scalar
binder 20705:20705 <> n:171
R20710:20710 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 20708:20708 <> p:172
R20717:20722 Quan.QState <> dstate def
R20726:20726 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R20727:20727 Quan.QAssert <> n:171 var
binder 20714:20715 <> mu:173
R20734:20746 Quan.QAssert <> State_formula ind
binder 20732:20732 <> F:174
R20756:20758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20751:20751 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20753:20754 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R20752:20752 Quan.QAssert <> p:172 var
R20752:20752 Quan.QAssert <> p:172 var
R20773:20776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20759:20767 Quan.QAssert <> sat_State ind
R20772:20772 Quan.QAssert <> F:174 var
R20769:20770 Quan.QAssert <> mu:173 var
R20777:20785 Quan.QAssert <> sat_State ind
R20804:20804 Quan.QAssert <> F:174 var
R20789:20796 Quan.QState <> d_scalar def
R20800:20801 Quan.QAssert <> mu:173 var
R20798:20798 Quan.QAssert <> p:172 var
R20870:20877 Quan.QState <> d_scalar def
R20942:20946 Quan.QAssert <> sat_F constr
R20942:20946 Quan.QAssert <> sat_F constr
R20963:20973 Quan.QState <> WF_d_scalar thm
R20963:20973 Quan.QState <> WF_d_scalar thm
R21018:21036 Quan.QAssert <> d_seman_scalar_Qexp thm
R21018:21036 Quan.QAssert <> d_seman_scalar_Qexp thm
R21064:21072 Quan.QState <> WF_dstate def
R21146:21159 Coq.Logic.Classical_Prop <> <> lib
prf 21170:21180 <> Mplus_not_0
R21195:21197 Coq.Init.Datatypes <> nat ind
binder 21191:21191 <> m:175
binder 21193:21193 <> n:176
R21205:21210 Quan.Matrix <> Matrix def
R21212:21212 Quan.QAssert <> m:175 var
R21214:21214 Quan.QAssert <> n:176 var
binder 21201:21201 <> A:177
binder 21203:21203 <> B:178
R21232:21236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21259:21259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21224:21227 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R21219:21222 Quan.Matrix <> ::matrix_scope:x_'.+'_x not
R21218:21218 Quan.QAssert <> A:177 var
R21223:21223 Quan.QAssert <> B:178 var
R21228:21231 Quan.Matrix <> Zero def
R21246:21249 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21238:21241 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R21237:21237 Quan.QAssert <> A:177 var
R21242:21245 Quan.Matrix <> Zero def
R21251:21254 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R21250:21250 Quan.QAssert <> B:178 var
R21255:21258 Quan.Matrix <> Zero def
R21278:21280 Coq.Init.Logic <> not def
R21304:21307 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21299:21299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21300:21303 Quan.Matrix <> Zero def
R21309:21310 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R21311:21314 Quan.Matrix <> Zero def
R21304:21307 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21299:21299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21300:21303 Quan.Matrix <> Zero def
R21309:21310 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R21311:21314 Quan.Matrix <> Zero def
R21333:21339 Coq.Logic.Classical_Prop <> classic prfax
R21333:21339 Coq.Logic.Classical_Prop <> classic prfax
R21435:21443 Quan.Matrix <> Mplus_0_l thm
R21435:21443 Quan.Matrix <> Mplus_0_l thm
prf 21491:21502 <> d_app_mu_nil
R21517:21519 Coq.Init.Datatypes <> nat ind
binder 21513:21513 <> n:179
R21531:21536 Quan.QState <> dstate def
R21538:21538 Quan.QAssert <> n:179 var
binder 21523:21524 <> mu:180
binder 21526:21528 <> mu':181
R21565:21569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21561:21562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21544:21556 Quan.QState StateMap this proj
R21558:21560 Quan.QAssert <> mu':181 var
R21563:21564 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R21598:21600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21570:21582 Quan.QState StateMap this proj
R21585:21589 Quan.QState <> d_app def
R21594:21596 Quan.QAssert <> mu':181 var
R21591:21592 Quan.QAssert <> mu:180 var
R21601:21613 Quan.QState StateMap this proj
R21615:21616 Quan.QAssert <> mu:180 var
R21701:21711 Quan.QState <> map2_r_refl thm
R21701:21711 Quan.QState <> map2_r_refl thm
R21701:21711 Quan.QState <> map2_r_refl thm
R21807:21817 Quan.QState <> map2_l_refl thm
R21807:21817 Quan.QState <> map2_l_refl thm
R21807:21817 Quan.QState <> map2_l_refl thm
prf 21866:21873 <> map2_nil
binder 21882:21882 <> n:182
R21888:21891 Coq.Init.Datatypes <> list ind
R21900:21901 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R21894:21899 Quan.QState <> cstate def
R21902:21907 Quan.QState <> qstate def
R21909:21909 Quan.QAssert <> n:182 var
binder 21885:21886 <> mu:183
R21950:21953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21916:21932 Quan.QState StateMap.Raw map2 def
R21948:21949 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R21945:21946 Quan.QAssert <> mu:183 var
R21934:21943 Quan.QState <> option_app def
R21954:21972 Quan.QState StateMap.Raw map2_l def
R21985:21986 Quan.QAssert <> mu:183 var
R21974:21983 Quan.QState <> option_app def
prf 22104:22113 <> Rplus_le_1
R22129:22129 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 22123:22124 <> r1:184
binder 22126:22127 <> r2:185
R22137:22138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22135:22135 Coq.Reals.Rdefinitions <> ::R_scope:x_'>'_x not
R22133:22134 Quan.QAssert <> r1:184 var
R22147:22149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22144:22145 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R22141:22141 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R22139:22140 Quan.QAssert <> r1:184 var
R22142:22143 Quan.QAssert <> r2:185 var
R22152:22153 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R22150:22151 Quan.QAssert <> r2:185 var
prf 22197:22214 <> map2_scale_not_nil
binder 22224:22224 <> n:186
R22229:22229 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 22227:22227 <> p:187
R22237:22240 Coq.Init.Datatypes <> list ind
R22249:22251 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R22243:22248 Quan.QState <> cstate def
R22252:22257 Quan.QState <> qstate def
R22259:22259 Quan.QAssert <> n:186 var
binder 22233:22234 <> mu:188
R22273:22276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22268:22269 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R22266:22267 Quan.QAssert <> mu:188 var
R22270:22272 Coq.Init.Datatypes <> nil constr
R22277:22277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22281:22286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22279:22279 Coq.Reals.Rdefinitions <> ::R_scope:x_'>'_x not
R22278:22278 Quan.QAssert <> p:187 var
R22354:22357 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R22287:22302 Quan.QState StateMap.Raw map def
R22352:22353 Quan.QAssert <> mu:188 var
R22313:22318 Quan.QState <> qstate def
R22320:22320 Quan.QAssert <> n:186 var
binder 22309:22309 <> x:189
R22325:22329 Quan.Matrix <> scale def
R22333:22333 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R22334:22334 Quan.QAssert <> n:186 var
R22339:22339 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R22340:22340 Quan.QAssert <> n:186 var
R22343:22343 Quan.QAssert <> p:187 var
R22345:22345 Quan.QAssert <> x:189 var
R22358:22359 Coq.Lists.List ListNotations ::list_scope:'['_']' not
prf 22505:22515 <> d_seman_app
binder 22525:22525 <> n:190
R22530:22542 Quan.QAssert <> State_formula ind
binder 22528:22528 <> F:191
R22554:22559 Quan.QState <> dstate def
R22563:22563 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R22564:22564 Quan.QAssert <> n:190 var
binder 22547:22548 <> mu:192
binder 22550:22552 <> mu':193
R22575:22575 Coq.Reals.Rdefinitions RbaseSymbolsImpl R defax
binder 22569:22570 <> p0:194
binder 22572:22573 <> p1:195
R22579:22579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22591:22593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22581:22583 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R22586:22589 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R22584:22585 Quan.QAssert <> p0:194 var
R22584:22585 Quan.QAssert <> p0:194 var
R22594:22594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22606:22609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22596:22598 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R22601:22604 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R22599:22600 Quan.QAssert <> p1:195 var
R22599:22600 Quan.QAssert <> p1:195 var
R22610:22610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22623:22626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22612:22613 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R22619:22621 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x_'<='_x not
R22616:22616 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R22614:22615 Quan.QAssert <> p0:194 var
R22617:22618 Quan.QAssert <> p1:195 var
R22616:22616 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R22614:22615 Quan.QAssert <> p0:194 var
R22617:22618 Quan.QAssert <> p1:195 var
R22641:22645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22627:22635 Quan.QAssert <> sat_State ind
R22640:22640 Quan.QAssert <> F:191 var
R22637:22638 Quan.QAssert <> mu:192 var
R22664:22667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22646:22654 Quan.QAssert <> sat_State ind
R22663:22663 Quan.QAssert <> F:191 var
R22658:22660 Quan.QAssert <> mu':193 var
R22668:22676 Quan.QAssert <> sat_State ind
R22724:22724 Quan.QAssert <> F:191 var
R22679:22683 Quan.QState <> d_app def
R22706:22713 Quan.QState <> d_scalar def
R22718:22720 Quan.QAssert <> mu':193 var
R22715:22716 Quan.QAssert <> p1:195 var
R22686:22693 Quan.QState <> d_scalar def
R22698:22699 Quan.QAssert <> mu:192 var
R22695:22696 Quan.QAssert <> p0:194 var
R22840:22844 Quan.QAssert <> sat_F constr
R22840:22844 Quan.QAssert <> sat_F constr
R22861:22868 Quan.QState <> WF_d_app thm
R22861:22868 Quan.QState <> WF_d_app thm
